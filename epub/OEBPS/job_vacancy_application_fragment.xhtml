<?xml version="1.0" encoding="utf-8"?>
        <!DOCTYPE html>

        <html xmlns="http://www.w3.org/1999/xhtml">
        <head>
          <title>Chapter 2</title>
          <link rel="stylesheet" href="styles/pygments.css" type="text/css" />
          <link rel="stylesheet" href="styles/softcover.css" type="text/css" />
          <link rel="stylesheet" href="styles/epub.css" type="text/css" />
          <link rel="stylesheet" href="styles/custom.css" type="text/css"/>
          <link rel="stylesheet" href="styles/custom_epub.css" type="text/css"/>
          <link rel="stylesheet" type="application/vnd.adobe-page-template+xml" href="styles/page-template.xpgt" />
        </head>

        <body>
          <div id="cid6" class="chapter"><h1><a href="job_vacancy_application_fragment.xhtml#cid6" class="heading hyperref"><span class="number">Chapter 2 </span>Job Vacancy Application</a></h1>
<p class="noindent">There are more IT jobs out there than there are skilled people available.<span class="intersentencespace"></span> It would be great if we could have the possibility to offer a platform where users can easily post new jobs vacancies to recruit people for their company.<span class="intersentencespace"></span> Now our job is to build this software using Padrino.<span class="intersentencespace"></span> We will apply <a href="http://en.wikipedia.org/wiki/KISS_principle" rel="noopener"><strong>K.I.S.S</strong></a> principle to obtain a simple and extensible design.</p>
<p>First, we are going to create the app file and folder structure.<span class="intersentencespace"></span> Then we are adding feature by feature until the app is complete.<span class="intersentencespace"></span> First, we will take a look at the basic design of our app.<span class="intersentencespace"></span> Afterwards, we will implement one feature at a time.</p>
</div><div id="cid7" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid7" class="heading hyperref"><span class="number">2.1 </span>Creating The Application</a></h2>
<p class="noindent">Start with generating a new project with the canonical <code>padrino</code> command.<span class="intersentencespace"></span> In contrast to our “Hello World!”<span class="intersentencespace"></span> application (app) before, we are using new options:</p>
<div class="code"><div class="highlight"><pre><span></span>$ mkdir ~/padrino-projects
$ <span class="nb">cd</span> ~/padrino-projects
$ padrino-gen project job-vacancy -d activerecord <span class="se">\</span>
  -t rspec <span class="se">\</span>
  -s jquery <span class="se">\</span>
  -e erb <span class="se">\</span>
  -a sqlite
</pre></div></div>
<p>Explanation of the fields commands:</p>
<ul>
<li><strong>-d activerecord</strong>: We are using <a href="https://rubygems.org/gems/activerecord" rel="noopener">Active Record</a> as the orm library (<em>Object Relational Mapper</em>).<span class="intersentencespace"></span>
</li>
<li><strong>-t rspec</strong>: We are using the <a href="https://github.com/dchelimsky/rspec/wiki/get-in-touch" rel="noopener">RSpec</a> testing framework.<span class="intersentencespace"></span>
</li>
<li><strong>-s jquery</strong>: Defining the JavaScript library we are using - for this app will be using the ubiquitous <a href="https://jquery.com" rel="noopener">jQuery</a> library.<span class="intersentencespace"></span>
</li>
<li><strong>-e erb</strong>: We are using <a href="https://ruby-doc.org/stdlib-2.4.1/libdoc/erb/rdoc/ERB.html" rel="noopener">ERB</a> (<em>embedded ruby</em>) markup for writing HTML templates.<span class="intersentencespace"></span>
</li>
<li><strong>-a sqlite</strong>: Our adapter for the activerecord ORM[orm] database adapter is <a href="http://www.sqlite.org" rel="noopener">SQLite</a>.<span class="intersentencespace"></span> The whole database is saved in a text file.<span class="intersentencespace"></span>
</li></ul>
<p>Since we are using RSpec for testing, we will use its’ built-in mock extensions <a href="https://github.com/rspec/rspec-mocks" rel="noopener">rspec-mocks</a> for writing tests later.<span class="intersentencespace"></span> In case you want to use another mocking library like <a href="https://rubygems.org/gems/rr" rel="noopener">rr</a> or <a href="http://gofreerange.com/mocha/docs" rel="noopener">mocha</a>, feel free to add it with the <strong>-m</strong> option.</p>
<p>You can use a vast array of other options when generating your new Padrino app, this table shows the currently available options:</p>
<ul>
<li><code>orm</code>: Available options are: <a href="https://github.com/rails/rails/tree/master/activerecord" rel="noopener">activerecord</a>,
<a href="https://github.com/couchrest/couchrest" rel="noopener">couchrest</a>, <a href="https://github.com/Dynamoid/Dynamoid" rel="noopener">dynamoid</a>,
<a href="http://datamapper.org" rel="noopener">datamapper</a>, <a href="https://github.com/DAddYE/mini_record" rel="noopener">minirecord</a>,
<a href="https://github.com/mongomapper/mongomapper" rel="noopener">mongomapper</a>, <a href="https://github.com/mongoid/mongoid" rel="noopener">mongoid</a>,
<a href="https://github.com/mongomatic/mongomatic" rel="noopener">mongomatic</a>, <a href="https://github.com/soveran/ohm" rel="noopener">ohm</a>,
<a href="https://github.com/basho-labs/ripple" rel="noopener">ripple</a>, and <a href="https://github.com/jeremyevans/sequel" rel="noopener">sequel</a>.<span class="intersentencespace"></span> The command line alias is <code>-d</code>.<span class="intersentencespace"></span>
</li>
<li><code>test</code>: Available options are: <a href="https://github.com/chneukirchen/bacon" rel="noopener">bacon</a>, <a href="https://github.com/cucumber/cucumber" rel="noopener">cucumber</a>,
<a href="https://github.com/seattlerb/minitest" rel="noopener">minitest</a>, <a href="https://github.com/rspec/rspec" rel="noopener">rspec</a>,
<a href="https://github.com/thoughtbot/shoulda" rel="noopener">shoulda</a>, and <a href="https://github.com/test-unit/test-unit" rel="noopener">test-unit</a>.<span class="intersentencespace"></span> The command line alias is <code>-t</code>.<span class="intersentencespace"></span>
</li>
<li><code>script</code>: Available options are: <a href="https://dojotoolkit.org" rel="noopener">dojo</a>, <a href="https://www.sencha.com/products/extjs/#overview" rel="noopener">extcore</a>,
<a href="https://jquery.com" rel="noopener">jquery</a>, <a href="https://mootools.net" rel="noopener">mootools</a>,
and <a href="http://prototypejs.org/" rel="noopener">prototype</a>.<span class="intersentencespace"></span> The command line alias is <code>-s</code>.<span class="intersentencespace"></span>
</li>
<li><code>renderer</code>: Available options are: <a href="https://ruby-doc.org/stdlib-2.1.4/libdoc/erb/rdoc/ERB.html" rel="noopener">erb</a>,
<a href="http://haml.info/" rel="noopener">haml</a>, <a href="https://shopify.github.io/liquid/" rel="noopener">liquid</a>,
and <a href="http://slim-lang.com" rel="noopener">slim</a>.<span class="intersentencespace"></span> The command line alias is <code>-e</code>.<span class="intersentencespace"></span>
</li>
<li><code>stylesheet</code>: Available options are: <a href="http://compass-style.org" rel="noopener">compass</a>, <a href="http://lesscss.org" rel="noopener">less</a>, <a href="http://sass-lang.com" rel="noopener">sass/scss</a>, and <a href="http://sass-lang.com/documentation/file.SCSS_FOR_SASS_USERS.html" rel="noopener">scss</a> (which ist just sass with scss syntax).<span class="intersentencespace"></span> The command line alias is <code>-c</code>.<span class="intersentencespace"></span>
</li>
<li><code>mock</code>: Available options are: <a href="http://gofreerange.com/mocha" rel="noopener">mocha</a> and <a href="http://rr.github.io/rr" rel="noopener">rr</a>.<span class="intersentencespace"></span>
</li></ul>
<p>The default value of each option is none.<span class="intersentencespace"></span> In order to use them you have to specify the option you want to use.</p>
<p>Besides the <code>project</code> option for generating new Padrino apps, the following table illustrates the other generators available:</p>
<ul>
<li><code>admin</code>: A built-in admin dashboard to manager your entities.<span class="intersentencespace"></span>
</li>
<li><code>admin_page</code>: Creates for an existing model the CRUD operation for the admin interface.<span class="intersentencespace"></span>
</li>
<li><code>app</code>: You can define other apps to be mounted in your main app.<span class="intersentencespace"></span>
</li>
<li><code>controller</code>: A controller takes data from the models and puts them into view that are rendered.<span class="intersentencespace"></span>
</li>
<li><code>mailer</code>: Creating new mailers within your app.<span class="intersentencespace"></span>
</li>
<li><code>migration</code>: Migrations simplify changing the database schema.<span class="intersentencespace"></span>
</li>
<li><code>model</code>: Models describe data objects of your application.<span class="intersentencespace"></span>
</li>
<li><code>project</code>: Generates a completely new app from the scratch.<span class="intersentencespace"></span>
</li>
<li><code>plugin</code>: Creating new Padrino projects based on a template file - it’s like a list of commands.<span class="intersentencespace"></span>
</li></ul>
<p>Later, when <em>the time comes</em>, we will add extra gems, for now though we’ll grab the current gems using <code>bundle</code><sup id="cha-2_footnote-ref-1" class="footnote"><a href="#cha-2_footnote-1">1</a></sup> by running at the command line:</p>
<div class="code"><div class="highlight"><pre><span></span>$ bundle install
</pre></div></div>
<div id="uid68" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid68" class="heading hyperref"><span class="number">2.1.1 </span>Basic Layout</a></h3>
<p class="noindent">Lets design our first version of the <em>index.html</em> page which is the starter page our app.<span class="intersentencespace"></span> An early design question is: Where to put the <em>index.html</em> page?<span class="intersentencespace"></span> Because we are not working with controllers, the easiest thing is to put the <em>index.html</em> directly under the public folder in the project.</p>
<p>We are using <a href="https://en.wikipedia.org/wiki/HTML5" rel="noopener">HTML5</a> for the page, and add the following code into <code>public/index.html</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">"en-US"</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Start Page<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Hello, Padrino!<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div></div>
<p>Plain static content - this used to be the way websites were created in the beginning of the web.<span class="intersentencespace"></span> Today, apps provide dynamic layout.<span class="intersentencespace"></span> During this chapter, we will how to add more and more dynamic parts to our app.</p>
<p>We can take a look at our new page by executing the following command:</p>
<div class="code"><div class="highlight"><pre><span></span>$ <span class="nb">cd</span> job-vacancy
$ bundle <span class="nb">exec</span> padrino start
</pre></div></div>
<p>You should see a message telling you that Padrino has taken the stage, and you should be able to view our created index page by visiting <a href="http://localhost:3000/index.html" rel="noopener">http://localhost:3000/index.html</a> in your browser.</p>
<p>You might ask “Why do we use the <code>bundle exec</code> command - isn’t <code>padrino start</code> enough?”<span class="intersentencespace"></span> The reason for this is that we use bundler to load exactly those Ruby gems that we specified in the Gemfile.<span class="intersentencespace"></span> I recommend that you use <code>bundle exec</code> for all following commands, but to focus on Padrino, I will skip this command on the following parts of the book.</p>
<p>You may have thought it a little odd that we had to manually requests the index.html in the URL when viewing our start page.<span class="intersentencespace"></span> This is because our app currently has no idea about <strong>routing</strong>.<span class="intersentencespace"></span> Routing is the process to recognize request URLs and to forward these requests to actions of controllers.<span class="intersentencespace"></span> With other words: A router is like a like vending machine where you put in money to get a coke.<span class="intersentencespace"></span> In this case, the machine is the <em>router</em> which <em>routes</em> your input “Want a coke” to the action “Drop a Coke in the tray”.</p>
</div>
<div id="uid69" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid69" class="heading hyperref"><span class="number">2.1.2 </span>First Controller And Routing</a></h3>
<p class="noindent">Lets add some basic routes for displaying our home, about, and contact-page.<span class="intersentencespace"></span> How can we do this?<span class="intersentencespace"></span> With the help of a routing controller.<span class="intersentencespace"></span> A controller makes data from you app (in our case job offers) available to the view (seeing the details of a job offer).<span class="intersentencespace"></span> Now let’s create a controller in Padrino names page:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller pages --no-helper
  create  app/controllers/pages.rb
  create  app/views/pages
   apply  tests/rspec
  create  spec/app/controllers/pages_controller_spec.rb
</pre></div></div>
<p>Please note that we are using the <code>–no-helper</code> option which omits the creation of a helper files for our views.</p>
<p>Lets take a closer look at our page-controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controller/pages.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:pages</span> <span class="k">do</span>

  <span class="c1"># get :index, :map =&gt; '/foo/bar' do</span>
  <span class="c1">#   session[:foo] = 'bar'</span>
  <span class="c1">#   render 'index'</span>
  <span class="c1"># end</span>

  <span class="c1"># get :sample, :map =&gt; '/sample/url', :provides =&gt; [:any, :js] do</span>
  <span class="c1">#   case content_type</span>
  <span class="c1">#     when :js then ...</span>
  <span class="c1">#     else ...</span>
  <span class="c1"># end</span>

  <span class="c1"># get :foo, :with =&gt; :id do</span>
  <span class="c1">#   'Maps to url '/foo/#{params[:id]}''</span>
  <span class="c1"># end</span>

  <span class="c1"># get '/example' do</span>
  <span class="c1">#   'Hello world!'</span>
  <span class="c1"># end</span>
<span class="k">end</span>
</pre></div></div>
<p>The controller above defines for our <code>JobVacancy</code> the <code>:pages</code> controller with no specified routes inside the app.<span class="intersentencespace"></span> Let’s change this and define the <em>about</em>, <em>contact</em>, and <em>home</em> actions:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controller/pages.rb</span>

<span class="ss">JobVacancy</span><span class="p">:</span><span class="o">.</span><span class="n">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:pages</span> <span class="k">do</span>
  <span class="n">get</span> <span class="ss">:about</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/about'</span> <span class="k">do</span>
    <span class="n">render</span> <span class="ss">:erb</span><span class="p">,</span> <span class="s1">'about'</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:contact</span> <span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/contact'</span> <span class="k">do</span>
    <span class="n">render</span> <span class="ss">:erb</span><span class="p">,</span> <span class="s1">'contact'</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/'</span> <span class="k">do</span>
    <span class="n">render</span> <span class="ss">:erb</span><span class="p">,</span> <span class="s1">'home'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We will go through each line:</p>
<ul>
<li><code>JobVacancy::App.controller :pages</code> - defines the namespace <em>page</em> for our JobVacancy app.<span class="intersentencespace"></span> Typically, the controller name will also be part of the route.<span class="intersentencespace"></span>
</li>
<li><code>do ... end</code> - This expression defines a block in Ruby.<span class="intersentencespace"></span> Think of it as a method without a name, also called anonymous functions, which is passed to another function as an argument.<span class="intersentencespace"></span>
</li>
<li><code>get :about, :map =&gt; '/about'</code> - The HTTP command <em>get</em> starts the declaration of the route followed by the <em>about</em> action (as a symbol<sup id="cha-2_footnote-ref-2" class="footnote"><a href="#cha-2_footnote-2">2</a></sup>), and is finally mapped to the explicit URL <em>/about</em>.<span class="intersentencespace"></span> When you start your server with <code>bundle exec padrino s</code> and visit the URL <a href="http://localhost:3000/about" rel="noopener">http://localhost:3000/about</a>, you can see the rendered output of this request.<span class="intersentencespace"></span>
</li>
<li><code>render :erb, 'about'</code> - This action tells us that we want to render the <em>erb</em> file <em>about</em> for the corresponding controller which is <code>page</code> in our case.<span class="intersentencespace"></span> This file is actually located at <code>app/views/page/about.erb</code> file.<span class="intersentencespace"></span> Normally the views are placed under <code>app/views/&lt;controller-name&gt;/&lt;action-name&gt;.&lt;ending&gt;</code>.<span class="intersentencespace"></span> Instead of using an ERB templates, you could also use <code>:haml</code>, or another <a href="https://www.ruby-toolbox.com/categories/template_engines" rel="noopener">template engine</a>.<span class="intersentencespace"></span> You can even completely drop the rendering option and leave the matching completely for Padrino.<span class="intersentencespace"></span>
</li></ul>
<p>Call the following command to see all defined routes for your application:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake <span class="nv">routes</span>
<span class="o">=</span>&gt; Executing Rake routes ...

  Application: JobVacancy
  URL                  REQUEST  PATH
  <span class="o">(</span>:pages, :about<span class="o">)</span>        GET    /about
  <span class="o">(</span>:pages, :contact<span class="o">)</span>      GET    /contact
  <span class="o">(</span>:pages, :home<span class="o">)</span>         GET    /
</pre></div></div>
</div>
<div id="uid75" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid75" class="heading hyperref"><span class="number">2.1.3 </span>Application Template</a></h3>
<p class="noindent">Although we are now able to put content (albeit static) on our site, it would be nice to have some sort of basic styling on our web page.<span class="intersentencespace"></span> First we need to generate a basic template for all pages we want to create:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/layouts/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">  &lt;head&gt;</span>
<span class="x">    &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">  &lt;/head&gt;</span>
<span class="x">  &lt;body&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/body&gt;</span>
<span class="x">&lt;/html&gt;</span>
</pre></div></div>
<p>Let’s see what is going on with the <code>&lt;%= yield %&gt;</code> line.<span class="intersentencespace"></span> At first you may ask what does the <code>&lt;&gt;</code> symbols mean.<span class="intersentencespace"></span> They are indicators that you want to execute Ruby code to fetch data that is put into the template.<span class="intersentencespace"></span> Here, the <code>yield</code> command will put the content of the called page, like <em>about.erb</em> or <em>contact.erb</em>, into the template.</p>
</div>
<div id="uid76" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid76" class="heading hyperref"><span class="number">2.1.4 </span>CSS Design Using bulma</a></h3>
<p class="noindent"><a href="https://bulma.io/" rel="noopener">bulma</a> is an open source CSS framework based on Flexbox.<span class="intersentencespace"></span> It is designed to be 100%
responsive for mobile devices.</p>
<p>Padrino itself also provides built-in templates for common tasks done on web app.<span class="intersentencespace"></span> These <a href="https://github.com/padrino/padrino-recipes" rel="noopener">padrino-recipes</a> help you saving time by not reinventing the wheel.<span class="intersentencespace"></span> Thanks to <a href="https://twitter.com/wikimatze" rel="noopener">@wikimatze</a>, we use his <a href="https://github.com/padrino/padrino-recipes/blob/master/plugins/bootstrap_plugin.rb" rel="noopener">bootstrap-plugin</a> by executing:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino g plugin bulma
   apply  https://raw.github.com/padrino/padrino-recipes/master/ <span class="se">\</span>
     plugins/bulma_plugin.rb
   create    public/stylesheets/bulma.css
</pre></div></div>
<p>Next we need to include the style sheet in our app template for the whole app:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/layouts/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">  &lt;head&gt;</span>
<span class="x">    &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'bulma'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'jquery'</span><span class="p">,</span> <span class="s1">'jquery-ujs'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/head&gt;</span>
<span class="x">  &lt;body&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/body&gt;</span>
<span class="x">&lt;/html&gt;</span>
</pre></div></div>
<p>The <code>stylesheet_link_tag</code> points to the <em>bootstrap.min.css</em> in you app <em>public/stylesheets</em> directory and will automatically create a link to this stylesheet.<span class="intersentencespace"></span> You can also use <code>javascript_include_tag</code> which does the same as <code>stylesheet_link_tag</code> just for JavaScript files.</p>
</div>
<div id="uid77" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid77" class="heading hyperref"><span class="number">2.1.5 </span>Using Sprockets to Manage the Asset Pipeline</a></h3>
<p class="noindent"><a href="https://github.com/rails/sprockets" rel="noopener">Sprockets</a> is a way to manage serving your assets like CSS, and JavaScript compiling all the different files in one summarized file for each type.</p>
<p>To implement Sprockets in Padrino there the following strategies:</p>
<ul>
<li><a href="https://github.com/livingsocial/rake-pipeline" rel="noopener">rake-pipeline</a>: Define filters that transforms directory trees.<span class="intersentencespace"></span>
</li>
<li><a href="https://gruntjs.com" rel="noopener">grunt</a>: Set a task to compile and manage assets in JavaScript.<span class="intersentencespace"></span>
</li>
<li><a href="https://github.com/kalasjocke/sinatra-asset-pipeline" rel="noopener">sinatra-asset-pipeline</a>: Let’s you define you assets transparently in Sinatra.<span class="intersentencespace"></span>
</li>
<li><a href="https://github.com/petebrowne/sprockets-helpers" rel="noopener">sprocket-helpers</a>: Asset path helpers for Sprockets 2.0 applications
</li>
<li><a href="https://github.com/nightsailer/padrino-sprockets" rel="noopener">padrino-sprockets</a>: Integrate sprockets with Padrino in the Rails way.<span class="intersentencespace"></span>
</li></ul>
<p>We are using the <strong>padrino-sprockets</strong> gem.<span class="intersentencespace"></span> Let’s add it to our Gemfile (don’t forget to run <code>bundle install</code>):</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>

<span class="n">gem</span> <span class="s1">'padrino-sprockets'</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">'padrino/sprockets'</span><span class="o">]</span><span class="p">,</span>
  <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">'git://github.com/nightsailer/padrino-sprockets.git'</span>
</pre></div></div>
<p>Next we need to move all our assets from the public folder in the assets folder:</p>
<div class="code"><div class="highlight"><pre><span></span>$ mkdir -p job-vacancy/app/assets
$ <span class="nb">cd</span> job-vacancy/public
$ mv images ../app/assets
$ mv javascripts ../app/assets
$ mv stylesheets ../app/assets
</pre></div></div>
<p>Now we have to register Padrino-Sprockets in this application:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/app.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span> <span class="o">&lt;</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Application</span>
    <span class="o">...</span>
    <span class="n">register</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Sprockets</span>
    <span class="n">sprockets</span>
    <span class="o">...</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Next we need create an application.css file and add the following to determine the order of the loaded CSS files in <code>app/assets/stylesheets/application.css</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cm">/* app/assets/stylesheets/application.css */</span>

<span class="cm">/*</span>
<span class="cm"> * This is a manifest file that'll automatically include all the stylesheets ...</span>
<span class="cm"> * ...</span>
<span class="cm"> *</span>
<span class="cm"> *= require_self</span>
<span class="cm"> *= require bulma</span>
<span class="cm"> *= require site</span>
<span class="cm">*/</span>
</pre></div></div>
<p>This file serves as a manifest file and the <code>require_self</code> directive indicates that any CSS in the file should be delivered in the given order to the browser.</p>
<p>First we are loading the <code>bulma</code> css, and then our customized <code>site</code> CSS. This is helpful if you want to check the order of the loaded CSS as a comment above your application without ever have to look into the source of it.<span class="intersentencespace"></span> The file</p>
<p>Next let’s have a look into our JavaScript file <code>app/assets/javascript/application.js</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cm">/* app/assets/javascript/application.js */</span>

<span class="c1">// This is a manifest file that'll be compiled into including all the files ...</span>
<span class="c1">// ...</span>
<span class="c1">//</span>
<span class="c1">//= require_tree .</span>
</pre></div></div>
<p>The interesting thing here is the <code>require_tree .</code><span class="intersentencespace"></span> option.<span class="intersentencespace"></span> This option (note the Unix dot operator) tells Sprockets to include all JavaScript files in the same assets folder, including subfolders, should be combined into a single file for delivery to the browser.<span class="intersentencespace"></span> Keep mind if your website is complex and large and use <code>require_self</code> directive to determine exactly which JS files are served to the browser.</p>
<p>Now, we can clean up the include statements in our application template:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/layouts/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">&lt;head&gt;</span>
<span class="x">  &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/head&gt;</span>
</pre></div></div>
<p>Now we want to enable compression for our CSS and JavaScript files.<span class="intersentencespace"></span> For CSS compression Padrino Sprockets is using <a href="https://github.com/sstephenson/ruby-yui-compressor" rel="noopener">YUI compressor</a> and for JS compression the <a href="https://github.com/lautis/uglifier" rel="noopener">Uglifier</a>.<span class="intersentencespace"></span> We need to add these these Gems in our <code>Gemfiles</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>
<span class="o">...</span>
<span class="n">gem</span> <span class="s1">'padrino-sprockets'</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="s1">'padrino/sprockets'</span><span class="p">,</span>
  <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">'git://github.com/nightsailer/padrino-sprockets.git'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span> <span class="s1">'~&gt; 4.1'</span>
<span class="n">gem</span> <span class="s1">'yui-compressor'</span><span class="p">,</span> <span class="s1">'~&gt; 0.12'</span>
<span class="o">...</span>
</pre></div></div>
<p>And finally we need to enable minifying in our production environment:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/app.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span> <span class="o">&lt;</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Application</span>
    <span class="o">...</span>
    <span class="n">register</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Sprockets</span>
    <span class="n">sprockets</span> <span class="ss">:minify</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="no">Padrino</span><span class="o">.</span><span class="n">env</span> <span class="o">==</span> <span class="ss">:production</span><span class="p">)</span>
    <span class="o">...</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
</div>
<div id="uid83" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid83" class="heading hyperref"><span class="number">2.1.6 </span>Navigation</a></h3>
<p class="noindent">Next we want to create the top-navigation for our app.<span class="intersentencespace"></span> We already implemented the <em>page</em> controller with the relevant actions.<span class="intersentencespace"></span> All we need is to put links to them in a navigation header for our basic layout.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/layouts/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">  &lt;head&gt;</span>
<span class="x">    &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/head&gt;</span>
<span class="x">&lt;body&gt;</span>
<span class="x">  &lt;nav class="navbar"&gt;</span>
<span class="x">    &lt;div class="container"&gt;</span>
<span class="x">      &lt;div class="navbar-brand"&gt;</span>
<span class="x">        &lt;a class="navbar-item" href="/"&gt;Job Vacancy&lt;/a&gt;</span>
<span class="x">        &lt;span class="navbar-burger burger" data-target="navbarMenu"&gt;</span>
<span class="x">          &lt;span&gt;&lt;/span&gt;</span>
<span class="x">          &lt;span&gt;&lt;/span&gt;</span>
<span class="x">          &lt;span&gt;&lt;/span&gt;</span>
<span class="x">        &lt;/span&gt;</span>
<span class="x">      &lt;/div&gt;</span>
<span class="x">      &lt;div id="navbarMenu" class="navbar-menu"&gt;</span>
<span class="x">        &lt;div class="navbar-end"&gt;</span>
<span class="x">          &lt;div class="tabs is-right"&gt;</span>
<span class="x">            &lt;ul&gt;</span>
<span class="x">              &lt;li&gt;</span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Home'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:pages</span><span class="p">,</span> <span class="ss">:home</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;/li&gt;</span>
<span class="x">              &lt;li&gt;</span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'About'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:pages</span><span class="p">,</span> <span class="ss">:about</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;/li&gt;</span>
<span class="x">              &lt;li&gt;</span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Contact'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:pages</span><span class="p">,</span> <span class="ss">:contact</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;/li&gt;</span>
<span class="x">            &lt;/ul&gt;</span>
<span class="x">          &lt;/div&gt;</span>
<span class="x">        &lt;/div&gt;</span>
<span class="x">      &lt;/div&gt;</span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/nav&gt;</span>
<span class="x">  &lt;div class="container"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>
<span class="x">&lt;/body&gt;</span>
</pre></div></div>
<p>Explanation of the new parts:</p>
<ul>
<li><a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Helpers/AssetTagHelpers#link_to-instance_method" rel="noopener">link_to</a> - Is a helper for creating links.<span class="intersentencespace"></span> The first argument is the name for the link and the second is for the URL (href) to which the link points to.<span class="intersentencespace"></span>
</li>
<li><a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Routing/InstanceMethods#url-instance_method" rel="noopener">url</a> - This helper return the link which can be used as the second parameter for the <code>link_to</code> function.<span class="intersentencespace"></span> It specifies the
</li></ul>
<p>Now that the we provide links to other parts of the app, lets add some sugar-candy styling:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c">/* app/assets/stylesheets/site.css */</span>
<span class="nt">body</span> <span class="p">{</span>
  <span class="k">font</span><span class="p">:</span> <span class="mf">18.5</span><span class="kt">px</span> <span class="n">Palatino</span><span class="p">,</span> <span class="s1">'Palatino Linotype'</span><span class="p">,</span> <span class="n">Helvetica</span><span class="p">,</span> <span class="n">Arial</span><span class="p">,</span> <span class="n">Verdana</span><span class="p">,</span>
    <span class="kc">sans-serif</span><span class="p">;</span>
  <span class="k">text-align</span><span class="p">:</span> <span class="kc">justify</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">h1</span> <span class="p">{</span>
  <span class="k">font-size</span><span class="p">:</span> <span class="mi">200</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">padding-bottom</span><span class="p">:</span> <span class="mi">20</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>


<span class="c">/* Tab Navigation */</span>
<span class="p">.</span><span class="nc">tabs</span> <span class="nt">ul</span> <span class="p">{</span>
  <span class="k">border-bottom</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span>
<span class="p">}</span>
</pre></div></div>
<p>I will not explain anything at this point about CSS. If you still don’t know how to use it, please go through <a href="https://www.w3schools.com/css/default.asp" rel="noopener">w3c school css</a> tutorial.<span class="intersentencespace"></span> Since we are using the asset pipeline, we don’t need to register our new CSS file in <code>views/application.erb</code> - now you will understand why we did this.</p>
<p>Since <a href="https://bulma.io/documentation/overview/responsiveness/" rel="noopener">bulma is designed to be full responsive</a>we want to have our navigation also available on mobile devices.<span class="intersentencespace"></span> For that reason we will add the following JavaScript code:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1">// app/assets/javascripts/burger_navigation.js</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">'DOMContentLoaded'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Get all "navbar-burger" elements</span>
  <span class="kd">var</span> <span class="nx">$navbarBurgers</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="o">\</span>
    <span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s1">'.navbar-burger'</span><span class="p">),</span> <span class="mi">0</span><span class="p">);</span>

  <span class="c1">// Check if there are any navbar burgers</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">$navbarBurgers</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>

    <span class="c1">// Add a click event on each of them</span>
    <span class="nx">$navbarBurgers</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$el</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">$el</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">'click'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>

        <span class="c1">// Get the target from the "data-target" attribute</span>
        <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">$el</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span>
        <span class="kd">var</span> <span class="nx">$target</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">target</span><span class="p">);</span>

        <span class="c1">// Toggle the class on both the "navbar-burger" and the "navbar-menu"</span>
        <span class="nx">$el</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="s1">'is-active'</span><span class="p">);</span>
        <span class="nx">$target</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="s1">'is-active'</span><span class="p">);</span>
      <span class="p">});</span>
    <span class="p">});</span>
  <span class="p">}</span>
<span class="p">});</span>
</pre></div></div>
</div>
<div id="uid86" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid86" class="heading hyperref"><span class="number">2.1.7 </span>Writing Tests</a></h3>
<p class="noindent">Our site does not list static entries of job offers that you write, but other users will be allowed to post job offers from the Internet to our site.<span class="intersentencespace"></span> We need to add this behavior to our site.<span class="intersentencespace"></span> To be on the sure side, we will implement this behavior by writing tests first, then the code.<span class="intersentencespace"></span> We use the <a href="http://rspec.info/" rel="noopener">RSpec</a> testing framework for this.</p>
<p>Remember when we created the <em>page-controller</em> with <code>padrino-gen controller page</code>?<span class="intersentencespace"></span> Thereby, Padrino created a corresponding spec file <code>spec/app/controller/page_controller_spec.rb</code> which has the following content:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controller/page_controller_spec.rb</span>
<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/page"</span> <span class="k">do</span>
  <span class="n">pending</span> <span class="s2">"add some examples to </span><span class="si">#{</span><span class="bp">__FILE__</span><span class="si">}</span><span class="s2">"</span> <span class="k">do</span>
    <span class="n">before</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s2">"/page"</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s2">"returns hello world"</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s2">"Hello World"</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Let’s update that file and write some basic tests to make sure that everything is working as expected.<span class="intersentencespace"></span> Replace the specs in the file with the following code:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controller/page_controller_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/page"</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"GET #about"</span> <span class="k">do</span>

    <span class="n">it</span> <span class="s2">"renders the :about view"</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s1">'/about'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"GET #contact"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"renders the :contact view"</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s1">'/contact'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"GET #home"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"renders :home view"</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s1">'/'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Let’s explain the new things:</p>
<ul>
<li><code>spec_helper</code> - Is a file to load commonly used functions to setup the tests.<span class="intersentencespace"></span>
</li>
<li><code>describe block</code> - This block describes the context for our tests.<span class="intersentencespace"></span> Think of it as way to group related tests.<span class="intersentencespace"></span>
</li>
<li><code>get ...</code><span class="intersentencespace"></span> - This command executes a HTTP GET to the provided address.<span class="intersentencespace"></span>
</li>
<li><code>last_response</code> - The response object returns the header and body of the HTTP request.<span class="intersentencespace"></span>
</li></ul>
<p>Now let’s run the tests with <code>padrino rake rspec</code> and see what’s going on:</p>
<div class="code"><div class="highlight"><pre><span></span>...

Finished in <span class="m">0</span>.21769 seconds
<span class="m">3</span> examples, <span class="m">0</span> failures
</pre></div></div>
<p>Cool, all tests passed!<span class="intersentencespace"></span> Please note that we run all tests with the command above.<span class="intersentencespace"></span> If you want to run only a specific
test you can use the following <code>rspec &lt;path-to-spec&gt;</code>.<span class="intersentencespace"></span> To run the <code>page_controller_spec</code> you have to use
<code>rspec spec/app/controllers/page_controller_spec.rb</code>.</p>
<p>We didn’t exactly use behavior-driven development until now<sup id="cha-2_footnote-ref-3" class="footnote"><a href="#cha-2_footnote-3">3</a></sup>.</p>
<div class="aside" id="box-red-green-cycle"><div class="heading"><span class="number">Box 2.1.</span> <span class="description">Red-Green Cycle</span>

</div>
<p>In behavior-driven development (BDD) it is important to write a failing test first and then the code that satisfies the test.<span class="intersentencespace"></span> The red-green cycle represents the colors that you will see when executing these test: Red first, and then beautiful green.<span class="intersentencespace"></span> But once your code passes the tests, take yet a little more time to refactor your code.<span class="intersentencespace"></span> This little mind shift helps you a lot to think more about the problem and how to solve it.<span class="intersentencespace"></span> The test suite is a nice by product too.</p>

</div></div></div><div id="cid8" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid8" class="heading hyperref"><span class="number">2.2 </span>Creating Models</a></h2>
</div><div id="cid9" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid9" class="heading hyperref"><span class="number">2.3 </span>Table of Contents</a></h2>
<ul>
<li>creating-modelsCreating Models
</li>
<li>table-of-contentsTable of Contents
<ul>
<li>user-modelUser Model
</li>
<li>job-offer-modelJob Offer Model
</li>
<li>creating-connection-between-user-and-job-offer-modelCreating Connection Between User And Job Offer Model
</li>
<li>testing-associations-in-the-consoleTesting Associations in the console
</li>
<li>testing-with-rspec–factory-botTesting With RSpec + Factory Bot
</li></ul>
</li></ul>
<div id="sec-user_model" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#sec-user_model" class="heading hyperref"><span class="number">2.3.1 </span>User Model</a></h3>
<p class="noindent">There are many different ways how to develop a user entity for your system.<span class="intersentencespace"></span> A user in our system will have an <em>unique</em> identification number <strong>id</strong>, a <strong>name</strong>, and an <strong>email</strong>.<span class="intersentencespace"></span> We can specify the location of the model by appending the end of the generate command with <code>-a app</code> as follows:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen model user name:string email:string -a app
     apply  orms/activerecord
     apply  tests/rspec
    create  app/models/user.rb
    create  spec/app/models/user_spec.rb
    create  db/migrate/001_create_users.rb
</pre></div></div>
<p>(If we don’t use the <code>-a</code> option, the models will be added in the root <code>models</code> folder).</p>
<p>Wow, it created a quite a bunch of files for us.<span class="intersentencespace"></span> Let’s examine each of them:</p>
<p><strong>user.rb</strong>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
<span class="k">end</span>
</pre></div></div>
<p>All we have is an empty class which inherits from <a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html" rel="noopener">ActiveRecord::Base</a>.<span class="intersentencespace"></span> <code>ActvieRecord</code> provides a simple object-relational-mapper from our models to corresponding database tables.<span class="intersentencespace"></span> You can also define relations between models through associations.</p>
<p><strong>user_spec.rb</strong>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="n">pending</span> <span class="s2">"add some examples to (or delete) </span><span class="si">#{</span><span class="bp">__FILE__</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
</pre></div></div>
<p>As you can see, the generator created already a test for us, which is actually pending.<span class="intersentencespace"></span> What would happen if you run the tests for this model?<span class="intersentencespace"></span> Let the code speak of it’s own and run the test:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec/app/models/user_spec.rb


User
  add some examples to <span class="o">(</span>or delete<span class="o">)</span>
    <span class="o">(</span>PENDING: Not yet implemented<span class="o">)</span>

Pending: <span class="o">(</span>Failures listed here are expected and <span class="k">do</span> not affect your suite<span class="err">'</span>s status<span class="o">)</span>

  <span class="m">1</span><span class="o">)</span> User add some examples to <span class="o">(</span>or delete<span class="o">)</span>
     <span class="c1"># Not yet implemented</span>
     <span class="c1"># ./spec/models/matze_spec.rb:4</span>


Finished in <span class="m">0</span>.00033 seconds <span class="o">(</span>files took <span class="m">1</span>.09 seconds to load<span class="o">)</span>
<span class="m">1</span> example, <span class="m">0</span> failures, <span class="m">1</span> pending
</pre></div></div>
<p>Executing the test resulted in an error.<span class="intersentencespace"></span> It explicitly told us the reason: The <em>user</em> table does not exist yet.<span class="intersentencespace"></span> And how do we create one?<span class="intersentencespace"></span> Here, migrations enter the stage.</p>
<p><strong>001_create_users.rb</strong>:</p>
<p>Migrations helps you to change the database in an ordered manner.<span class="intersentencespace"></span> Let’s have a look at our first migration:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># db/migrate/001_create_users.rb</span>

<span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:email</span>
      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">drop_table</span> <span class="ss">:users</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>This code will create a <code>users</code> table with the <code>name</code> and <code>email</code> attributes.<span class="intersentencespace"></span> The <code>timestamps</code> attribute is added automatically because it’s most common sense that to record the last change of the property.<span class="intersentencespace"></span> The value <code>null: false</code> says that the <code>timestamp</code> column can have no <code>null</code> values.<span class="intersentencespace"></span> If you want to get an overview you can visit <a href="http://guides.rubyonrails.org/active_record_migrations.html#column-modifiers" rel="noopener">column modifier page</a>.</p>
<p>By the way, the convention to name tables of models in the plural form comes from <a href="http://rubyonrails.org" rel="noopener">Rails</a>.<span class="intersentencespace"></span> Now we need to run this migration:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake ar:migrate

<span class="o">=</span>&gt; Executing Rake ar:migrate ...
  DEBUG -  <span class="o">(</span><span class="m">0</span>.1ms<span class="o">)</span>  <span class="k">select</span> sqlite_version<span class="o">(</span>*<span class="o">)</span>
  DEBUG -  <span class="o">(</span><span class="m">143</span>.0ms<span class="o">)</span>  CREATE TABLE <span class="s2">"schema_migrations"</span> <span class="o">(</span><span class="s2">"version"</span> varchar<span class="o">(</span><span class="m">255</span><span class="o">)</span>
    NOT NULL<span class="o">)</span>
  DEBUG -  <span class="o">(</span><span class="m">125</span>.2ms<span class="o">)</span>  CREATE UNIQUE INDEX <span class="s2">"unique_schema_migrations"</span>
    ON <span class="s2">"schema_migrations"</span> <span class="o">(</span><span class="s2">"version"</span><span class="o">)</span>
  DEBUG -  <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  SELECT <span class="s2">"schema_migrations"</span>.<span class="s2">"version"</span>
    FROM <span class="s2">"schema_migrations"</span>
   INFO - Migrating to CreateUsers <span class="o">(</span><span class="m">1</span><span class="o">)</span>
  DEBUG -  <span class="o">(</span><span class="m">0</span>.1ms<span class="o">)</span>  begin transaction
  ...
</pre></div></div>
<p>Since we are working in the development environment, Padrino automatically created the development database for us:</p>
<div class="code"><div class="highlight"><pre><span></span>$ ls db/
  job_vacancy_development.db  job_vacancy_test.db  migrate  schema.rb
</pre></div></div>
<p>Now let’s start <a href="https://www.sqlite.org" rel="noopener">sqlite3</a>, connect to the database, and see if the users table was created properly:</p>
<div class="code"><div class="highlight"><pre><span></span>$ sqlite3 db/job_vacancy_development.db

SQLite version <span class="m">3</span>.7.13 <span class="m">2012</span>-06-11 <span class="m">02</span>:05:22
Enter <span class="s2">".help"</span> <span class="k">for</span> instructions
Enter SQL statements terminated with a <span class="s2">";"</span>
sqlite&gt; .tables
schema_migrations  users
sqlite&gt; .schema users
CREATE TABLE <span class="s2">"users"</span> <span class="o">(</span><span class="s2">"id"</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">"name"</span>
  varchar<span class="o">(</span><span class="m">255</span><span class="o">)</span>, <span class="s2">"email"</span> varchar<span class="o">(</span><span class="m">255</span><span class="o">)</span>, <span class="s2">"created_at"</span> datetime NOT NULL,
  <span class="s2">"updated_at"</span> datetime NOT NULL<span class="o">)</span><span class="p">;</span>
sqlite&gt; .exit
</pre></div></div>
<p>Let’s have a look on the <code>config/database.rb</code> file to understand more about the different databases:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="ss">:development</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span>
  <span class="ss">:adapter</span> <span class="o">=&gt;</span> <span class="s1">'sqlite3'</span><span class="p">,</span>
  <span class="ss">:database</span> <span class="o">=&gt;</span> <span class="no">Padrino</span><span class="o">.</span><span class="n">root</span><span class="p">(</span><span class="s1">'db'</span><span class="p">,</span> <span class="s1">'job_vacancy_development.db'</span><span class="p">)</span>
<span class="p">}</span>

<span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="ss">:production</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span>
  <span class="ss">:adapter</span> <span class="o">=&gt;</span> <span class="s1">'sqlite3'</span><span class="p">,</span>
  <span class="ss">:database</span> <span class="o">=&gt;</span> <span class="no">Padrino</span><span class="o">.</span><span class="n">root</span><span class="p">(</span><span class="s1">'db'</span><span class="p">,</span> <span class="s1">'job_vacancy_production.db'</span><span class="p">)</span>
<span class="p">}</span>

<span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="ss">:test</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span>
  <span class="ss">:adapter</span> <span class="o">=&gt;</span> <span class="s1">'sqlite3'</span><span class="p">,</span>
  <span class="ss">:database</span> <span class="o">=&gt;</span> <span class="no">Padrino</span><span class="o">.</span><span class="n">root</span><span class="p">(</span><span class="s1">'db'</span><span class="p">,</span> <span class="s1">'job_vacancy_test.db'</span><span class="p">)</span>
<span class="p">}</span>
</pre></div></div>
<p>As you can see, each of the different environments <em>development</em>, <em>production</em>, and <em>test</em> have their own database.<span class="intersentencespace"></span> Lets’s be sure that all databases are created:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake ar:create:all

bundle <span class="nb">exec</span> padrino rake ar:create:all
<span class="o">=</span>&gt; Executing Rake ar:create:all ...
/home/elex/Dropbox/git-repositorie/job-vacancy/db/job_vacancy_development.db
  already exists
</pre></div></div>
<p>Now the databases for <em>production</em> and <em>test</em> have been generated.<span class="intersentencespace"></span> Time to run the tests again:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec/app/models

User Model
  can be created <span class="o">(</span>FAILED - <span class="m">1</span><span class="o">)</span>

Failures:

  <span class="m">1</span><span class="o">)</span> User Model can be created
     Failure/Error: let<span class="o">(</span>:user<span class="o">)</span> <span class="o">{</span> User.new <span class="o">}</span>
     ActiveRecord::StatementInvalid:
       Could not find table <span class="s1">'users'</span>
     <span class="c1"># ./spec/app/models/user_spec.rb:4:in `new'</span>
     <span class="c1"># ./spec/app/models/user_spec.rb:4:in `block (2 levels) in &lt;top (required)&gt;'</span>
     <span class="c1"># ./spec/app/models/user_spec.rb:6:in `block (2 levels) in &lt;top (required)&gt;'</span>

Finished in <span class="m">0</span>.04847 seconds
<span class="m">1</span> example, <span class="m">1</span> failure

Failed examples:

rspec ./spec/app/models/user_spec.rb:5 <span class="c1"># User Model can be created</span>
</pre></div></div>
<p>But why are the tests still failing?<span class="intersentencespace"></span> Because the migration for the <em>user</em> table was not executed for the test environment.<span class="intersentencespace"></span> Let’s fix this with the following command:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake ar:migrate -e <span class="nb">test</span>
<span class="o">=</span>&gt; Executing Rake ar:migrate ...
<span class="o">==</span>  CreateUsers: <span class="nv">migrating</span> <span class="o">====================================================</span>
-- create_table<span class="o">(</span>:users<span class="o">)</span>
   -&gt; <span class="m">0</span>.0030s
<span class="o">==</span>  CreateUsers: migrated <span class="o">(</span><span class="m">0</span>.0032s<span class="o">)</span> <span class="o">===========================================</span>
</pre></div></div>
<p>Finally the test passes:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec/app/models

User Model
  can be created

Finished in <span class="m">0</span>.05492 seconds
<span class="m">1</span> example, <span class="m">0</span> failures
</pre></div></div>
<p>How can we run all the tests in our application and see if everything is working?<span class="intersentencespace"></span> <code>padrino rake spec</code> will run all tests in the <code>spec/</code> folder:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake <span class="nv">spec</span>
<span class="o">=</span>&gt; Executing Rake spec ...

User Model
  can be created

Finished in <span class="m">0</span>.05589 seconds
<span class="m">1</span> example, <span class="m">0</span> failures

PageController
  GET <span class="c1">#about</span>
    renders the :about view
  GET <span class="c1">#contact</span>
    renders the :contact view
  GET <span class="c1">#home</span>
    renders the :home view

Finished in <span class="m">0</span>.20325 seconds
<span class="m">3</span> examples, <span class="m">0</span> failures
</pre></div></div>
<p>This is very handy to make sure that you didn’t break anything in the existing codebase when you are working on a new feature.<span class="intersentencespace"></span> Run these regression tests frequently and enjoy it to see your app growing feature by feature.</p>
</div>
<div id="uid101" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid101" class="heading hyperref"><span class="number">2.3.2 </span>Job Offer Model</a></h3>
<p class="noindent">Since we now know how to create the basic model of our users, it’s time to create a model for presenting a job offer.<span class="intersentencespace"></span> A job offer consists of the following attributes:</p>
<ul>
<li>title: The name of the job position.<span class="intersentencespace"></span>
</li>
<li>location: The geographical location of the job.<span class="intersentencespace"></span>
</li>
<li>description: Details about the position.<span class="intersentencespace"></span>
</li>
<li>contact: An email address of the contact person.<span class="intersentencespace"></span>
</li>
<li>time-start: The earliest entry date for this position.<span class="intersentencespace"></span>
</li>
<li>time-end: A job offer isn’t valid forever.<span class="intersentencespace"></span>
</li></ul>
<p>Let’s run the Padrino command to create the model for us.<span class="intersentencespace"></span> As you see, we once again run <code>-a app</code> at the end of our generation.</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen model job_offer title:string location:string <span class="se">\</span>
  description:text contact:string time_start:date time_end:date -a app
   apply  orms/activerecord
   apply  tests/rspec
   create  app/models/job_offer.rb
   create  spec/app/models/job_offer_spec.rb
   create  db/migrate/002_create_job_offers.rb
</pre></div></div>
<p>Next, we need to run our new database migration so that our database has the right scheme:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake ar:migrate
  <span class="o">=</span>&gt; Executing Rake ar:migrate ...
    DEBUG -  <span class="o">(</span><span class="m">0</span>.4ms<span class="o">)</span>  SELECT <span class="s2">"schema_migrations"</span>.<span class="s2">"version"</span>
      FROM <span class="s2">"schema_migrations"</span>
     INFO - Migrating to CreateUsers <span class="o">(</span><span class="m">1</span><span class="o">)</span>
     INFO - Migrating to CreateJobOffers <span class="o">(</span><span class="m">2</span><span class="o">)</span>
    DEBUG -  <span class="o">(</span><span class="m">0</span>.3ms<span class="o">)</span>  <span class="k">select</span> sqlite_version<span class="o">(</span>*<span class="o">)</span>
    DEBUG -  <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  begin <span class="nv">transaction</span>
  <span class="o">==</span>  CreateJobOffers: <span class="nv">migrating</span> <span class="o">==============================================</span>
  -- create_table<span class="o">(</span>:job_offers<span class="o">)</span>
  ...
</pre></div></div>
<p>Don’t forget to run the migrations also for the test environment with <code>padrino rake ar:migrate -e test</code></p>
</div>
<div id="uid108" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid108" class="heading hyperref"><span class="number">2.3.3 </span>Creating Connection Between User And Job Offer Model</a></h3>
<p class="noindent">It’s time to define associations between the user and job offer model.<span class="intersentencespace"></span> But why should you take care of them?<span class="intersentencespace"></span> Associations make common operations like deleting or updating data our relational databases easier.<span class="intersentencespace"></span> Imagine that we have a user in our app that added many job offers in our system.<span class="intersentencespace"></span> Now this customer decides that he wants to cancel his account.<span class="intersentencespace"></span> We decide that all his job offers should also disappear in the system.<span class="intersentencespace"></span> One solution would be to delete the user, remember his id, and delete all job offers entries that originate from this id.<span class="intersentencespace"></span> This manual effort disappears when associations are used: It becomes as easy as “If I delete this user from the system, delete automatically all corresponding jobs for this user”.</p>
<p>We will quickly browse through the associations.</p>
<p><strong>has_many</strong>:</p>
<p>It does exactly as it tells us: One object has many other objects.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:job_offers</span>
<span class="k">end</span>
</pre></div></div>
<p><strong>belongs_to</strong></p>
<p>The receiving object of the <em>has_many</em> relationship defines that it belongs to exactly one object:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/job_offer.rb</span>

<span class="k">class</span> <span class="nc">JobOffer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
<span class="k">end</span>
</pre></div></div>
<p><strong>Migrations after association</strong>:</p>
<p>Whenever you modify your models, remember that you need to run migrations too.<span class="intersentencespace"></span> Because we added the associations manually, we also need to write the migrations.<span class="intersentencespace"></span> Luckily, Padrino helps us with this task.<span class="intersentencespace"></span> We know that the job offer is linked to a user via the user’s id.<span class="intersentencespace"></span> This foreign key relationship results in adding an extra column <code>user_id</code> to the <code>job_offers table</code>.<span class="intersentencespace"></span> For this change, we can use the following command to create a migration:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen migration AddUserIdToJobOffers user_id:integer
    apply  orms/activerecord
    create  db/migrate/003_add_user_id_to_job_offers.rb
</pre></div></div>
<p>Let’s take a look at the created migration:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># db/migrate/003_add_user_id_to_job_offers.rb</span>

<span class="k">class</span> <span class="nc">AddUserIdToJobOffers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">change_table</span> <span class="ss">:job_offers</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:user_id</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">change_table</span> <span class="ss">:job_offers</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">remove</span> <span class="ss">:user_id</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Can you see the small bug?<span class="intersentencespace"></span> This migration won’t work, you have to change <code>joboffers</code> to <code>job_offers</code>.<span class="intersentencespace"></span> For the time being, generators can help you to write code, but not prevent you from thinking.<span class="intersentencespace"></span> Run the migrations now!</p>
</div>
<div id="uid109" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid109" class="heading hyperref"><span class="number">2.3.4 </span>Testing Associations in the console</a></h3>
<p class="noindent">To see whether the migrations were executed, we connected to the sqlite3 database via the command line.<span class="intersentencespace"></span> Let’s use a different approach and use the Padrino console this time.<span class="intersentencespace"></span> All you have to do is to run the following command:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino <span class="nv">c</span>
  <span class="o">=</span>&gt; Loading Application JobVacancy
  &gt;&gt;
</pre></div></div>
<p>Now you are in an environment which acts like <a href="https://en.wikipedia.org/wiki/Interactive_Ruby_Shell" rel="noopener">IRB</a> (Interactive Ruby Shell).<span class="intersentencespace"></span> This allows you to execute Ruby commands and immediately see it’s response.</p>
<p>Let’s run the shell to create a user:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="nv">user</span> <span class="o">=</span> User.new<span class="o">(</span>:name <span class="o">=</span>&gt; <span class="s1">'wikimatze'</span>, :email <span class="o">=</span>&gt; <span class="s1">'matthias@padrinobook.de'</span><span class="o">)</span>
  <span class="o">=</span>&gt; <span class="c1">#&lt;User id: nil, name: "wikimatze", email: "matthias@padrinobook.de",</span>
     <span class="c1">#created_at: nil, updated_at: nil&gt;</span>
</pre></div></div>
<p>This creates a user object in our session.<span class="intersentencespace"></span> If we want to add an entry permanently into the database, you can either use
<a href="https://apidock.com/rails/ActiveRecord/Base/save" rel="noopener">save method</a> on the <code>user</code> object to persist
it to the databasue or use
<a href="https://apidock.com/rails/ActiveRecord/Base/create/class" rel="noopener">create method</a> to persist a model during it’s
creation:</p>
<div class="code"><div class="highlight"><pre><span></span>User.create<span class="o">(</span>:name <span class="o">=</span>&gt; <span class="s1">'wikimatze'</span>, :email <span class="o">=</span>&gt; <span class="s1">'matthias@padrinobook.de'</span><span class="o">)</span>
DEBUG -  <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  begin transaction
  DEBUG - SQL <span class="o">(</span><span class="m">114</span>.6ms<span class="o">)</span>  INSERT INTO <span class="s2">"users"</span> <span class="o">(</span><span class="s2">"created_at"</span>,
  <span class="s2">"email"</span>, <span class="s2">"name"</span>, <span class="s2">"updated_at"</span><span class="o">)</span> VALUES <span class="o">(</span>?, ?, ?, ?<span class="o">)</span>
  <span class="o">[[</span><span class="s2">"created_at"</span>, <span class="m">2012</span>-12-26 <span class="m">08</span>:32:51 +0100<span class="o">]</span>, <span class="o">[</span><span class="s2">"email"</span>, <span class="s2">"matthias@padrinobook.de"</span><span class="o">]</span>,
  <span class="o">[</span><span class="s2">"name"</span>, <span class="s2">"wikimatze"</span><span class="o">]</span>, <span class="o">[</span><span class="s2">"updated_at"</span>, <span class="m">2012</span>-12-26 <span class="m">08</span>:32:51 +0100<span class="o">]]</span>
  DEBUG -  <span class="o">(</span><span class="m">342</span>.0ms<span class="o">)</span>  commit <span class="nv">transaction</span>
<span class="o">=</span>&gt; <span class="c1">#&lt;User id: 1, name: "wikimatze", email: "matthias@padrinobook.de",</span>
   <span class="c1"># created_at: "2012-12-26 08:32:51",</span>
    updated_at: <span class="s2">"2012-12-26 08:32:51"</span>&gt;
</pre></div></div>
<p>Please note that now you have an entry in your <code>db/job_vacancy_development.db</code> database.</p>
<p>Since we have an user, it’s time to add a job offer:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino <span class="nv">c</span>
<span class="o">=</span>&gt; Loading Application JobVacancy
 JobOffer.create<span class="o">(</span>:title <span class="o">=</span>&gt; <span class="s1">'Padrino Engineer'</span>,
   :location <span class="o">=</span>&gt; <span class="s1">'Berlin'</span>,
   :description <span class="o">=</span>&gt; <span class="s1">'Come to this great place'</span>,
   :contact <span class="o">=</span>&gt; <span class="s1">'recruter@padrino-company.org'</span>,
   :time_start <span class="o">=</span>&gt; <span class="s1">'2013/01/01'</span>,
   :time_end <span class="o">=</span>&gt; <span class="s1">'2013/03/01'</span>,
   :user_id <span class="o">=</span>&gt; <span class="m">1</span><span class="o">)</span>
</pre></div></div>
<p>Now it’s time to test our association between the user and the job-offer model.<span class="intersentencespace"></span> We will use the <code>find_by_id</code><sup id="cha-2_footnote-ref-4" class="footnote"><a href="#cha-2_footnote-4">4</a></sup> method to get the user from our database, and the <code>job_offers</code> method to get all the job-offers from the user.</p>
<p>There is one last thing we forget: Say you are logged in and wants to edit a user with a wrong id, like <a href="http://localhost:3000/users/padrino/edit" rel="noopener">http://localhost:3000/users/padrino/edit</a>.<span class="intersentencespace"></span> You’ll get a <code>ActiveRecord::RecordNotFound</code> exception because we are using the Active Record’s plain <code>find</code> method in the users controller.<span class="intersentencespace"></span> Let’s catch the exception and return a <code>nil</code> user instead:</p>
<div class="code"><div class="highlight"><pre><span></span>&gt;&gt; <span class="nv">user</span> <span class="o">=</span> User.find_by_id<span class="o">(</span><span class="m">1</span><span class="o">)</span>
  DEBUG - User Load <span class="o">(</span><span class="m">0</span>.6ms<span class="o">)</span>  SELECT <span class="s2">"users"</span>.* FROM <span class="s2">"users"</span> WHERE
  <span class="s2">"users"</span>.<span class="s2">"id"</span> <span class="o">=</span> <span class="m">1</span> LIMIT <span class="nv">1</span>
  <span class="o">=</span>&gt; <span class="c1">#&lt;User id: 1, name: "wikimatze", email: "matthias@padrinobook.de",</span>
     <span class="c1"># created_at: "2012-12-26 08:32:51", updated_at: "2012-12-26 08:32:51"&gt;</span>
&gt;&gt; user.job_offers
  DEBUG - JobOffer Load <span class="o">(</span><span class="m">0</span>.6ms<span class="o">)</span>  SELECT <span class="s2">"job_offers"</span>.* FROM <span class="s2">"job_offers"</span> WHERE
  <span class="s2">"job_offers"</span>.<span class="s2">"user_id"</span> <span class="o">=</span> <span class="nv">1</span>
  <span class="o">=</span>&gt; <span class="o">[</span><span class="c1">#&lt;JobOffer id: 1, title: "Padrino Engineer", location: "Berlin",</span>
  ...<span class="o">]</span>
</pre></div></div>
<p>Here you can see the advantage of using associations: When you declare them, you automatically get methods for accessing the data you want.</p>
<p>Ok, we are doing great so far.<span class="intersentencespace"></span> With users and job offers in place, let’s add some tests to create and associate these objects.</p>
</div>
<div id="uid111" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid111" class="heading hyperref"><span class="number">2.3.5 </span>Testing With RSpec + Factory Bot</a></h3>
<p class="noindent">When you use data for the tests, you need to decide how to create them.<span class="intersentencespace"></span> You could define a set of test data with pure SQL and add it to your app.<span class="intersentencespace"></span> A more convenient solution instead is to use factories and fixtures.<span class="intersentencespace"></span> Think of factories as producers for you data.<span class="intersentencespace"></span> You are telling the factory that you need 10 users that should have different names and emails.<span class="intersentencespace"></span> This kind of mass object creation which are called fixtures in testing, can easily be done with <a href="https://github.com/thoughtbot/factory_bot" rel="noopener">Factory Bot</a><sup id="cha-2_footnote-ref-5" class="footnote"><a href="#cha-2_footnote-5">5</a></sup>.<span class="intersentencespace"></span> Factory Bot defines it’s own language to create fixtures in an <code>ActiveRecord</code>-like way, but with a much cleaner syntax.</p>
<p>What do we need to use Factory Bot in our app?<span class="intersentencespace"></span> Right, we first we need to add a gem to our <code>Gemfile</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>
<span class="o">...</span>
<span class="n">gem</span> <span class="s1">'factory_bot'</span><span class="p">,</span> <span class="s1">'4.8.2'</span><span class="p">,</span> <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="s1">'test'</span>
<span class="o">...</span>
</pre></div></div>
<p>If you pay a closer look into the <code>Gemfile</code>, you can see that we have several gems with the <code>:group</code> option:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>
<span class="o">...</span>
<span class="n">gem</span> <span class="s1">'rspec'</span> <span class="p">,</span> <span class="s1">'3.5.0'</span><span class="p">,</span>      <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="s1">'test'</span>
<span class="n">gem</span> <span class="s1">'factory_bot'</span><span class="p">,</span> <span class="s1">'4.8.2'</span><span class="p">,</span> <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="s1">'test'</span>
<span class="n">gem</span> <span class="s1">'rack-test'</span><span class="p">,</span> <span class="s1">'0.6.3'</span><span class="p">,</span>    <span class="ss">:require</span>  <span class="o">=&gt;</span> <span class="s1">'rack/test'</span><span class="p">,</span> <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="s1">'test'</span>
<span class="o">...</span>
</pre></div></div>
<p>Luckily we can use the <code>:group &lt;name&gt; do ... end</code> syntax to cleanup to get rid of several <code>:group =&gt; 'test'</code> lines in our <code>Gemfile</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>
<span class="o">...</span>
<span class="n">group</span> <span class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'rspec'</span> <span class="p">,</span> <span class="s1">'3.5.0'</span>
  <span class="n">gem</span> <span class="s1">'factory_bot'</span><span class="p">,</span> <span class="s1">'4.8.2'</span>
  <span class="n">gem</span> <span class="s1">'rack-test'</span><span class="p">,</span> <span class="s1">'0.6.3'</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="s1">'rack/test'</span>
<span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<p>Execute <code>bundle</code> and the new gem will be installed.</p>
<p>Next we need to define a <a href="http://www.rubydoc.info/gems/factory_bot/file/GETTING_STARTED.md#Defining_factories" rel="noopener">factory</a> to
include all the fixtures of our models:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/factories.rb</span>

<span class="c1"># encoding: utf-8</span>
<span class="no">FactoryBot</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>

  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
    <span class="nb">name</span> <span class="s1">'wikimatze'</span>
    <span class="n">email</span> <span class="s1">'matthias@padrinobook.de'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>I want to add myself as a test user.<span class="intersentencespace"></span> Since I’m German, I want to use special symbols, called mutated vowel<sup id="cha-2_footnote-ref-6" class="footnote"><a href="#cha-2_footnote-6">6</a></sup> from the German language.<span class="intersentencespace"></span> To make Ruby aware of this, I’m putting <code># encoding: utf-8</code> at the header of the file.<span class="intersentencespace"></span> The symbol <code>:user</code> stands for the definition of a user model.</p>
<p>To make our factory available in all our tests, we have to <em>require</em> our factory in the <code>spec_helper.rb</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/spec_helper.rb</span>

<span class="no">RACK_ENV</span> <span class="o">=</span> <span class="s1">'test'</span> <span class="k">unless</span> <span class="n">defined?</span><span class="p">(</span><span class="no">RACK_ENV</span><span class="p">)</span>
<span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span> <span class="o">+</span> <span class="s2">"/../config/boot"</span><span class="p">)</span>
<span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span> <span class="o">+</span> <span class="s2">"/factories"</span>
<span class="o">...</span>
</pre></div></div>
<p>Now we have everything at hand to create a user with the factory while testing our app:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="n">describe</span> <span class="s2">"User Model"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryBot</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">{</span> <span class="p">{</span><span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s1">'Padrino Engineer'</span><span class="p">,</span> <span class="ss">:location</span> <span class="o">=&gt;</span> <span class="s1">'Berlin'</span><span class="p">,</span>
    <span class="ss">:description</span> <span class="o">=&gt;</span> <span class="s1">'Come to this great place'</span><span class="p">}</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'can be created'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_nil</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'fresh user should have no offers'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">0</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'have job-offers'</span> <span class="k">do</span>
    <span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">1</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The basic philosophy behind testing with fixtures is that you create objects as you need them with convenient expressions.<span class="intersentencespace"></span> Instead of using
<code>User.create</code>, we are using <a href="http://www.rubydoc.info/gems/factory_bot/FactoryBot/Syntax/Methods#build-instance_method" rel="noopener">FactoryBot.build</a> method to temporarily create a <code>user</code> fixture.<span class="intersentencespace"></span> The job offer that we are adding for the tests is defined as an attribute hash
- you map the attributes (keys) to their values.</p>
<div class="aside" id="box-dry"><div class="heading"><span class="number">Box 2.2.</span> <span class="description">Don’t repeat yourself (DRY)</span>

</div>
<p>It’a principle in software development with the goal to reduce repetition of all kinds.<span class="intersentencespace"></span> The principle was mentioned by Andy Hunt and Dave Thomas
in their book <a href="https://pragprog.com/book/tpp/the-pragmatic-programmer" rel="noopener">The Pragmatic Programmer</a>.</p>
<p>For example we are using the <code>let(:user)</code> before each context in specs above so that we don’t have to create the variable in each step.<span class="intersentencespace"></span> Or when we
are creating a new controller in Padrino by running the code generator will create the necessary files for us so that we
don’t have to write them on our own.</p>
<p>You can apply this principle in all different areas: <code>documention</code>, <code>configuration</code>, <code>database schemas</code>, <code>test</code>, …</p>

</div><p>The <code>build</code> method that we use to create the user will only add the test object in memory<sup id="cha-2_footnote-ref-7" class="footnote"><a href="#cha-2_footnote-7">7</a></sup>.<span class="intersentencespace"></span> If you want to permanently add fixtures to the database, you have to use <a href="http://www.rubydoc.info/gems/factory_bot/FactoryBot/Syntax/Methods#create-instance_method" rel="noopener">create</a> method instead.<span class="intersentencespace"></span> Play with it, and see that the same test using <code>create</code> instead of <code>build</code> takes much longer because it hits the database.</p>
<p>We can improve our test by creating a factory for our job offer too and cleaning the <code>user_spec.rb</code> file:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/factories.rb</span>

<span class="o">...</span>
<span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
  <span class="nb">name</span> <span class="s1">'wikimatze'</span>
  <span class="n">email</span> <span class="s1">'matthias@padrinobook.com'</span>
<span class="k">end</span>

<span class="n">factory</span> <span class="ss">:job_offer</span> <span class="k">do</span>
  <span class="n">title</span>       <span class="s1">'Padrino Engineer   '</span>
  <span class="n">location</span>    <span class="s1">'Berlin             '</span>
  <span class="n">description</span> <span class="s1">'We want you ...    '</span>
  <span class="n">contact</span>     <span class="s1">'recruter@awesome.de'</span>
  <span class="n">time_start</span>  <span class="s1">'1/01/2013          '</span>
  <span class="n">time_end</span>    <span class="s1">'01/03/2013         '</span>
<span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<p>And now we modify our <code>user_spec</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="n">describe</span> <span class="s2">"User Model"</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">it</span> <span class="s1">'has job-offers'</span> <span class="k">do</span>
    <span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="no">FactoryBot</span><span class="o">.</span><span class="n">attributes_for</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">))</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">1</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>As you see, the job fixtures are created with
<a href="http://www.rubydoc.info/gems/factory_bot/FactoryBot/Syntax/Methods#attributes_for-instance_method" rel="noopener">attributes_for</a> method.<span class="intersentencespace"></span> This method takes a symbol as an input and returns the attributes of the fixture as a hash.</p>
<p>Now, our tests are looking fine and they are still green.<span class="intersentencespace"></span> But we can do even better.<span class="intersentencespace"></span> We can remove the <code>FactoryBot</code> expressions if we add make the following change to our <code>spec_helper.rb</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/spec_helper.rb</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">conf</span><span class="o">|</span>
  <span class="n">conf</span><span class="o">.</span><span class="n">include</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">Methods</span>
  <span class="n">conf</span><span class="o">.</span><span class="n">include</span> <span class="no">FactoryBot</span><span class="o">::</span><span class="no">Syntax</span><span class="o">::</span><span class="no">Methods</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we can change our test to:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="n">describe</span> <span class="s2">"User Model"</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">it</span> <span class="s1">'has job-offers'</span> <span class="k">do</span>
    <span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="n">attributes_for</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">))</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">job_offers</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">1</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
</div></div><div id="cid10" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid10" class="heading hyperref"><span class="number">2.4 </span>Login and Registration</a></h2>
<p class="noindent">In traditional frameworks you would generate a user with a <code>user</code> model and a <code>users_controller</code> with the
<code>new</code>, <code>create</code>, <code>update</code>, and <code>delete</code> actions.<span class="intersentencespace"></span> Besides you can’t forget about security these days though would need to find a method of safely storing the password as well as validate our freshly registered users.</p>
<p>You don’t have to reinvent the wheel you can use Padrino’s beautiful <a href="http://padrinorb.com/guides/features/padrino-admin/" rel="noopener">Admin interface</a> for your user authentication<sup id="cha-2_footnote-ref-8" class="footnote"><a href="#cha-2_footnote-8">8</a></sup>.<span class="intersentencespace"></span> For educational reasons we are going to create our own authentication process consisting of the following parts:</p>
<ul>
<li>creating users
</li>
<li>creating views and routes
</li>
<li>sending confirmation emails
</li>
<li>encrypt passwords
</li>
<li>session management
</li></ul>
<div id="uid122" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid122" class="heading hyperref"><span class="number">2.4.1 </span>Extending the User Model</a></h3>
<p class="noindent">Before we are going to build the controller and the sign-up form for our application we need to specify the data each user has.</p>
<div class="code"><div class="highlight"><pre><span></span>Name: String
Email: String
Password: String
</pre></div></div>
<p>Recording from chapter  <a href="job_vacancy_application_fragment.xhtml#sec-user_model" class="hyperref"><span class="ref">2.3.1</span></a> we only need to add the <code>Password</code> fields to the user table:</p>
<p>Let’s create the migration:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen migration AddRegistrationFieldsToUsers
  apply  orms/activerecord
  create  db/migrate/004_add_registration_fields_to_users.rb
</pre></div></div>
<p>And write the fields into the migration:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># db/migrate/004_add_registration_fields_to_users.rb</span>

<span class="k">class</span> <span class="nc">AddRegistrationFieldsToUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="vi">@fields</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:password</span><span class="o">]</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="vi">@fields</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">field</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="n">field</span><span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="vi">@fields</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">field</span><span class="o">|</span> <span class="n">remove_column</span> <span class="n">field</span><span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Run the migrations.</p>
</div>
<div id="uid123" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid123" class="heading hyperref"><span class="number">2.4.2 </span>Validating attributes</a></h3>
<p class="noindent">Before we are going to implement the user registration relevant things we are going to write <strong>pending</strong><sup id="cha-2_footnote-ref-9" class="footnote"><a href="#cha-2_footnote-9">9</a></sup> specs for outlining
our tests:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">pending</span><span class="p">(</span><span class="s1">'has no blank name'</span><span class="p">)</span>
  <span class="n">pending</span><span class="p">(</span><span class="s1">'has no blank email'</span><span class="p">)</span>

  <span class="n">describe</span> <span class="s2">"when name is already used"</span> <span class="k">do</span>
    <span class="n">pending</span><span class="p">(</span><span class="s1">'should not be saved'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"email address"</span> <span class="k">do</span>
    <span class="n">pending</span><span class="p">(</span><span class="s1">'valid'</span><span class="p">)</span>
    <span class="n">pending</span><span class="p">(</span><span class="s1">'not valid'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"passwords"</span> <span class="k">do</span>
    <span class="n">pending</span><span class="p">(</span><span class="s1">'no blank password'</span><span class="p">)</span>
    <span class="n">pending</span><span class="p">(</span><span class="s1">'no blank password_confirmation'</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Before writing code to pass these specs, we need to add the <code>password</code> field to our factory:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/factories.rb</span>

<span class="c1"># encoding: utf-8</span>
<span class="no">FactoryBot</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
<span class="o">...</span>
  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
    <span class="nb">name</span>  <span class="s1">'wikimatze'</span>
    <span class="n">email</span> <span class="s1">'matthias@padrinobook.com'</span>
    <span class="n">password</span> <span class="s2">"octocat"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<div id="uid125" class="subsubsection"><h4><a href="#uid125" class="heading">Presence Validation of Names</a></h4>
<p class="noindent">Let’s implement the first pending test that a user can’t have an empty name:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>
<span class="o">...</span>

<span class="n">it</span> <span class="s1">'has no blank name'</span> <span class="k">do</span>
  <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">""</span>
  <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
<span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<p>If we run the test, we get the following error:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec

Failures:

  <span class="m">1</span><span class="o">)</span> User Model has no blank name
     Failure/Error: expect<span class="o">(</span>user.valid?<span class="o">)</span>.to be_falsey
       expected: falsey value
            got: <span class="nb">true</span>
     <span class="c1"># ./spec/app/models/user_spec.rb:20:in `block (2 levels)</span>
     <span class="c1"># in &lt;top (required)&gt;'</span>
     ...
</pre></div></div>
<p>To make this test pass we need to validate the <code>name</code> property in our user model with the help of the
<a href="http://guides.rubyonrails.org/active_record_validations.html#presence" rel="noopener">presence validation</a>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>As a homework, please write the validates for the <code>email address</code> and <code>passwords</code> part of the specs on your own<sup id="cha-2_footnote-ref-10" class="footnote"><a href="#cha-2_footnote-10">10</a></sup>.</p>
</div>
<div id="uid127" class="subsubsection"><h4><a href="#uid127" class="heading">Uniqueness Validation of Names</a></h4>
<p class="noindent">We make sure that names in our application are unique.<span class="intersentencespace"></span> For testing we need create a second user with another mail address in our factory.<span class="intersentencespace"></span> We need need to extend or factory with the <a href="https://github.com/thoughtbot/factory_bot/blob/master/GETTING_STARTED.md#sequences" rel="noopener">sequence function</a>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/factories</span>

<span class="no">FactoryBot</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
  <span class="n">sequence</span><span class="p">(</span><span class="ss">:email</span><span class="p">){</span> <span class="o">|</span><span class="n">email_number</span><span class="o">|</span> <span class="s2">"matthias</span><span class="si">#{</span><span class="n">email_number</span><span class="si">}</span><span class="s2">@padrinobook.com"</span><span class="p">}</span>

  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
    <span class="nb">name</span>  <span class="s1">'wikimatze'</span>
    <span class="n">email</span>
    <span class="n">password</span> <span class="s1">'foo'</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Whenever you build a new <code>user</code> fixture, the value <code>email_number</code> is incremented and gives you a fresh user with a unique email address.<span class="intersentencespace"></span> A test for this can be written in the following way:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user_second</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">...</span>

  <span class="n">describe</span> <span class="s2">"name is already used"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'should not be saved'</span> <span class="k">do</span>
      <span class="no">User</span><span class="o">.</span><span class="n">destroy_all</span>
      <span class="n">user</span><span class="o">.</span><span class="n">save</span>
      <span class="n">user_second</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span>
      <span class="n">user_second</span><span class="o">.</span><span class="n">save</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user_second</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>To make the test green you have to use the <a href="http://guides.rubyonrails.org/active_record_validations.html#uniqueness" rel="noopener">uniqueness validation</a> (Note that we use the <a href="http://www.rubydoc.info/docs/rails/4.1.7/ActiveRecord%2FAssociations%2FCollectionProxy%3Adestroy_all" rel="noopener">destroy_all</a> to destroy all users in the database and there associations).<span class="intersentencespace"></span> All what it does is to validates that the attribute’s value is unique before it gets saved.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span>

  <span class="n">has_many</span> <span class="ss">:job_offers</span>
<span class="k">end</span>
</pre></div></div>
</div>
<div id="uid128" class="subsubsection"><h4><a href="#uid128" class="heading">Format Validation</a></h4>
<p class="noindent">Next we are going to implement the validation for the email field.<span class="intersentencespace"></span> Here are the specs</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>
<span class="o">...</span>
<span class="n">describe</span> <span class="s2">"email address"</span> <span class="k">do</span>
  <span class="n">it</span> <span class="s1">'valid'</span> <span class="k">do</span>
    <span class="n">adresses</span> <span class="o">=</span> <span class="sx">%w[thor@marvel.de hero@movie.com]</span>
    <span class="n">adresses</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">email</span><span class="o">|</span>
      <span class="n">user</span><span class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span>
      <span class="n">user_second</span><span class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user_second</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_truthy</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'not valid'</span> <span class="k">do</span>
    <span class="n">adresses</span> <span class="o">=</span> <span class="sx">%w[spamspamspam.de heman,test.com]</span>
    <span class="n">adresses</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">email</span><span class="o">|</span>
      <span class="n">user_second</span><span class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user_second</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We can test the correctness of the <code>email</code> field with a regular expression.<span class="intersentencespace"></span> First we are going to define a regular expression and use the <a href="http://guides.rubyonrails.org/active_record_validations.html#format" rel="noopener">format validation</a> which will apply our regular expression against which the field will be tested.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span class="p">}</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<div class="aside" id="box-regular-expressions"><div class="heading"><span class="number">Box 2.3.</span> <span class="description">Regular Expressions</span>

</div>
<p><a href="https://en.wikipedia.org/wiki/Regular_expression" rel="noopener">Regular expressions</a> are your first tool when you need to match certain parts (or whole) strings against a predefined pattern.<span class="intersentencespace"></span> The drawback of using them is that you have to learn a formal language to define your patterns.<span class="intersentencespace"></span> I can highly recommend you the <a href="http://rubular.com" rel="noopener">Rubular tool</a> for learning, training, and trying out the expression you want to use.</p>

</div></div></div>
<div id="uid130" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid130" class="heading hyperref"><span class="number">2.4.3 </span>Users Controller</a></h3>
<p class="noindent">Since we already have our data-model for new potential users of our platform, it’s time to make it accessible for our users with a users controller for signing up.</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller Users get:new
  create  app/controllers/users.rb
  create  app/helpers/users_helper.rb
  create  app/views/users
   apply  tests/rspec
  create  spec/app/controllers/users_controller_spec.rb
</pre></div></div>
<p>The new thing about the controller generation command is the <code>get:new</code> option.<span class="intersentencespace"></span> This will create an URL route <code>:new</code> to <code>users/new</code>.</p>
<div class="aside" id="box-seven-actions-of-a-controller"><div class="heading"><span class="number">Box 2.4.</span> <span class="description">Seven actions of a controller</span>

</div>
<p>In web application most controllers offers seven features to manage records:</p>
<ul>
<li><code>new</code>: display an empty form
</li>
<li><code>create</code>: save a record of a new item
</li>
<li><code>index</code>: display a list of all items
</li>
<li><code>show</code>: display a record of one item
</li>
<li><code>edit</code>: display a record for editing
</li>
<li><code>update</code>: save an edited record
</li>
<li><code>destroy</code> – delete a record
</li></ul>

</div>
<div id="uid139" class="subsubsection"><h4><a href="#uid139" class="heading">Sign Up Action For Registration</a></h4>
<p class="noindent">We need to make sure to render the <code>users/new.erb</code> and user the <code>user</code> object route:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="n">get</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/register"</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
</div>
<div id="uid140" class="subsubsection"><h4><a href="#uid140" class="heading">Sign Up Form</a></h4>
<p class="noindent">The stage is set: We have the model with the tested constraints, and the controller for the user which handles the action.<span class="intersentencespace"></span> Time to create a sign up form.<span class="intersentencespace"></span> For this case we can use the <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Helpers/FormHelpers#form_for-instance_method" rel="noopener">form_for</a> helper.<span class="intersentencespace"></span> This method takes an object (normally a model) as an input and creates a form using the attributes of the given object.<span class="intersentencespace"></span> Create a new erb file under the users view:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/users/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Registration&lt;/h1&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@user</span><span class="p">,</span> <span class="s1">'/users/create'</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Create"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<ul>
<li><code>form_for</code>: Is part of <a href="http://www.padrinorb.com/guides/application-helpers#formbuilders" rel="noopener">Padrino’s Form Builders</a> and allows you to create standard input fields based on a model.<span class="intersentencespace"></span> The first argument to the function is an object (normally a model), the second argument is an string (the action to which the form should be sent after a submit), and the third parameter are settings in form of a hash.<span class="intersentencespace"></span>
</li>
<li><code>f.label</code> and <code>f.text</code>: A label and a text field for the attributes of your model.<span class="intersentencespace"></span>
</li>
<li><code>f.password_field</code>: Constructs a password input element.<span class="intersentencespace"></span>
</li>
<li><code>f.submit</code>: Takes a string as a caption for the submit button and options as hashes for additional parameter (for <code>example :class =&gt; 'label'</code>).<span class="intersentencespace"></span>
</li></ul>
<p>The form will be rendered in the following HTML:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">form</span> <span class="na">action</span><span class="o">=</span><span class="s">"/users/create"</span> <span class="na">accept-charset</span><span class="o">=</span><span class="s">"UTF-8"</span> <span class="na">method</span><span class="o">=</span><span class="s">"post"</span><span class="p">&gt;</span>\
  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"hidden"</span> <span class="na">name</span><span class="o">=</span><span class="s">"authenticity_token"</span><span class="err">\</span>
    <span class="na">value</span><span class="o">=</span><span class="s">"7JCJxXEWCaP9aFTZhOqD9a/Ff8ot47U+Xo/ENR3zsXc="</span> <span class="p">/&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"field"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"user_name"</span> <span class="na">class</span><span class="o">=</span><span class="s">"label"</span><span class="p">&gt;</span>Name: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"control"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"text"</span> <span class="na">name</span><span class="o">=</span><span class="s">"user[name]"</span> <span class="na">id</span><span class="o">=</span><span class="s">"user_name"</span><span class="na">class</span><span class="o">=</span><span class="s">"input"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"field"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"user_email"</span> <span class="na">class</span><span class="o">=</span><span class="s">"label"</span><span class="p">&gt;</span>Email: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"control"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"text"</span> <span class="na">name</span><span class="o">=</span><span class="s">"user[email]"</span> <span class="na">id</span><span class="o">=</span><span class="s">"user_email"</span> <span class="na">class</span><span class="o">=</span><span class="s">"input"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"field"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"user_password"</span> <span class="na">class</span><span class="o">=</span><span class="s">"label"</span><span class="p">&gt;</span>Password: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"control"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"password"</span> <span class="na">name</span><span class="o">=</span><span class="s">"user[password]"</span> <span class="na">id</span><span class="o">=</span><span class="s">"user_password"</span><span class="err">\</span>
        <span class="na">class</span><span class="o">=</span><span class="s">"input"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"field"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"user_password_confirmation"</span><span class="err">\</span>
      <span class="na">class</span><span class="o">=</span><span class="s">"label"</span><span class="p">&gt;</span>Password confirmation: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"control"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"password"</span> <span class="na">name</span><span class="o">=</span><span class="s">"user[password_confirmation]"</span><span class="err">\</span>
        <span class="na">id</span><span class="o">=</span><span class="s">"user_password_confirmation"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"field"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">"control"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"submit"</span> <span class="na">value</span><span class="o">=</span><span class="s">"Create"</span> <span class="na">class</span><span class="o">=</span><span class="s">"button is-large is-link"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
</pre></div></div>
</div>
<div id="uid145" class="subsubsection"><h4><a href="#uid145" class="heading">Sign Up Form Save Data</a></h4>
<p class="noindent">Until now we are not saving the inputs of the user.<span class="intersentencespace"></span> Let’s code the <code>create</code> action which saves the new registered:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Let’s go through the new parts:</p>
<ul>
<li><code>User.new(params[:users])</code>: Will create a new user object based on the information of the form attributes of the <code>user</code> model which which were part of the form from the <code>views/users/new.erb page</code>.<span class="intersentencespace"></span>
</li>
<li><code>@user.save</code>: Will persists the user in the database.<span class="intersentencespace"></span>
</li>
<li><code>redirect</code>: Will redirect the user to the root directory of our app.<span class="intersentencespace"></span>
</li></ul>
<div class="aside" id="box-what-are-instance-variables"><div class="heading"><span class="number">Box 2.5.</span> <span class="description">What are instance variables and why use them in controllers?</span>

</div>
<p>Instance variables are bound to an instance of class and defines the state of an object.<span class="intersentencespace"></span> Through this every instance of
a class has the same name for the instance variables but each of them has different values different.</p>
<p>By using <code>@user</code> in the controller, we can use this instance in our <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Helpers/FormHelpers#form_for-instance_method" rel="noopener">form_for</a> helper as an object to fill all the
necessary information for a user.<span class="intersentencespace"></span> So every user share the same features with different values.<span class="intersentencespace"></span></p>

</div><p>What about the mistakes a user makes during his input?<span class="intersentencespace"></span> How can we display any mistakes a user is making and preserve the things he already typed in?</p>
<p>If you send the form without any inputs, you will see that you are redirected into the root of your app.<span class="intersentencespace"></span> You can’t figure out what’s wrong, but luckily we have logs:</p>
<div class="code"><div class="highlight"><pre><span></span>DEBUG -  <span class="o">(</span><span class="m">0</span>.1ms<span class="o">)</span>  begin transaction
DEBUG - User Exists <span class="o">(</span><span class="m">0</span>.3ms<span class="o">)</span>  SELECT <span class="m">1</span> AS one FROM <span class="s2">"users"</span> WHERE
  <span class="s2">"users"</span>.<span class="s2">"name"</span> <span class="o">=</span> <span class="s1">''</span> LIMIT <span class="m">1</span>
DEBUG - User Exists <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  SELECT <span class="m">1</span> AS one FROM <span class="s2">"users"</span> WHERE
  <span class="s2">"users"</span>.<span class="s2">"email"</span> <span class="o">=</span> <span class="s1">''</span> LIMIT <span class="m">1</span>
DEBUG -  <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  rollback transaction
DEBUG -     POST <span class="o">(</span><span class="m">0</span>.0162ms<span class="o">)</span> /users/create - <span class="m">303</span> See Other
DEBUG - TEMPLATE <span class="o">(</span><span class="m">0</span>.0004ms<span class="o">)</span> /page/home
DEBUG - TEMPLATE <span class="o">(</span><span class="m">0</span>.0002ms<span class="o">)</span> /application
DEBUG -      GET <span class="o">(</span><span class="m">0</span>.0057ms<span class="o">)</span> / - <span class="m">200</span> OK
DEBUG -      GET <span class="o">(</span><span class="m">0</span>.0005ms<span class="o">)</span> application.css?1365616902 - <span class="m">200</span> OK
DEBUG -      GET <span class="o">(</span><span class="m">0</span>.0003ms<span class="o">)</span> application.js?1365616902 - <span class="m">200</span> OK
DEBUG -      GET <span class="o">(</span><span class="m">0</span>.0017ms<span class="o">)</span> /favicon.ico - <span class="m">404</span> Not Found
</pre></div></div>
<p>The <code>rollback transaction</code> was triggered because the validation of our user model had been violated.<span class="intersentencespace"></span> Try to create an <code>User.new</code> model in the console and call the <code>.errors</code> method on:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="o">&gt;&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
<span class="o">=&gt;</span> <span class="c1">#&lt;User id: nil, name: nil, email: nil, created_at: nil, password: nil&gt;</span>
<span class="o">&gt;&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">save</span>
  <span class="no">DEBUG</span> <span class="o">-</span>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
  <span class="no">DEBUG</span> <span class="o">-</span>  <span class="no">User</span> <span class="no">Exists</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="mi">1</span> <span class="no">AS</span> <span class="n">one</span> <span class="no">FROM</span> <span class="s2">"users"</span>
    <span class="no">WHERE</span> <span class="s2">"users"</span><span class="o">.</span><span class="s2">"name"</span> <span class="no">IS</span> <span class="no">NULL</span> <span class="no">LIMIT</span> <span class="mi">1</span>
  <span class="no">DEBUG</span> <span class="o">-</span>  <span class="no">User</span> <span class="no">Exists</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="mi">1</span> <span class="no">AS</span> <span class="n">one</span> <span class="no">FROM</span> <span class="s2">"users"</span>
    <span class="no">WHERE</span> <span class="s2">"users"</span><span class="o">.</span><span class="s2">"email"</span> <span class="no">IS</span> <span class="no">NULL</span> <span class="no">LIMIT</span> <span class="mi">1</span>
  <span class="no">DEBUG</span> <span class="o">-</span>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">ms</span><span class="p">)</span>  <span class="n">rollback</span> <span class="n">transaction</span>
<span class="o">=&gt;</span> <span class="kp">false</span>
<span class="o">&gt;&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">errors</span>
<span class="o">=&gt;</span> <span class="c1">#&lt;ActiveModel::Errors:0x9dea518 @base=#&lt;User id: nil, name: nil, email: nil,</span>
   <span class="c1">#created_at: nil,</span>
    <span class="ss">updated_at</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="kp">nil</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">messages</span><span class="p">{</span><span class="ss">:name</span><span class="o">=&gt;[</span><span class="s2">"can't be blank"</span><span class="o">]</span><span class="p">,</span>
    <span class="ss">:password</span><span class="o">=&gt;[</span><span class="s2">"is too short (minimum is 5 characters)"</span><span class="p">,</span> <span class="s2">"can't be blank"</span><span class="o">]</span><span class="p">,</span>
    <span class="ss">:email</span><span class="o">=&gt;[</span><span class="s2">"can't be blank"</span><span class="p">,</span> <span class="s2">"is invalid"</span><span class="o">]</span><span class="p">}</span>
</pre></div></div>
<p>We can use this information to display the errors in our form for user feedback.<span class="intersentencespace"></span> In a first try, we use <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino%2FHelpers%2FFormHelpers%2FErrors:error_messages_for" rel="noopener">error_messages_for</a> method:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/users/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="cp">&lt;%</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@user</span><span class="p">,</span> <span class="s1">'/users/create'</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  ...</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">error_messages_for</span> <span class="vi">@user</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  ...</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>It counts the number of errors <code>@user.errors.count</code> and is looping through all field with their error messages like the following:</p>
<div class="code"><div class="highlight"><pre><span></span>5 errors prohibited this User from being saved
There were problems with the following fields:

Name can't be blank
Password is too short (minimum is 5 characters)
Password can't be blank
Email can't be blank
Email is invalid
</pre></div></div>
<p>This isn’t something we want to ship to our customers.<span class="intersentencespace"></span> Let’s change this by using <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino%2FHelpers%2FFormHelpers%2FErrors:error_message_on" rel="noopener">error_message_on</a> which returns a string containing the error message attached to the method on the object:<sup id="cha-2_footnote-ref-11" class="footnote"><a href="#cha-2_footnote-11">11</a></sup></p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/users/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="cp">&lt;%</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@user</span><span class="p">,</span> <span class="s1">'/users/create'</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:name</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:email</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:password</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:password_confirmation</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Create"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>Let’s add the <code>:class</code> at the of the <code>error_message_on</code> method with the help of the <a href="https://bulma.io/documentation/modifiers/color-helpers/#background-color" rel="noopener">has-background-danger class from bulma</a> and using the <code>:prepend</code> option which add text to before displaying the field error:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> views/users/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="cp">&lt;%</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@user</span><span class="p">,</span> <span class="s1">'/users/create'</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,\</span>
      <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The name"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,\</span>
      <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The email"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,\</span>
      <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The password"</span><span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:password_confirmation</span><span class="p">,\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,\</span>
      <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The password confirmation"</span><span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Create"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>If you fill out the form with complete valid parameters and watch your log again:</p>
<div class="code"><div class="highlight"><pre><span></span>DEBUG -  <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  begin transaction
DEBUG - User Exists <span class="o">(</span><span class="m">0</span>.3ms<span class="o">)</span>  SELECT <span class="m">1</span> AS one FROM <span class="s2">"users"</span> WHERE
  <span class="s2">"users"</span>.<span class="s2">"name"</span> <span class="o">=</span> <span class="s1">'Testuser'</span> LIMIT <span class="m">1</span>
DEBUG - User Exists <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  SELECT <span class="m">1</span> AS one FROM <span class="s2">"users"</span> WHERE
  <span class="s2">"users"</span>.<span class="s2">"email"</span> <span class="o">=</span> <span class="s1">'admin@job-vacancy.de'</span> LIMIT <span class="m">1</span>
DEBUG - SQL <span class="o">(</span><span class="m">0</span>.2ms<span class="o">)</span>  INSERT INTO <span class="s2">"users"</span>
<span class="o">(</span><span class="s2">"created_at"</span>, <span class="s2">"email"</span>, <span class="s2">"name"</span>, <span class="s2">"password"</span>, <span class="s2">"updated_at"</span><span class="o">)</span> VALUES
<span class="o">(</span>?, ?, ?, ?, ?<span class="o">)</span>  <span class="o">[[</span><span class="s2">"created_at"</span>, <span class="m">2013</span>-04-10 <span class="m">20</span>:09:10 +0200<span class="o">]</span>,
<span class="o">[</span><span class="s2">"email"</span>, <span class="s2">"admin@job-vacancy.de"</span><span class="o">]</span>,
<span class="o">[</span><span class="s2">"name"</span>, <span class="s2">"Testuser"</span><span class="o">]</span>, <span class="o">[</span><span class="s2">"password"</span>, <span class="s2">"example"</span><span class="o">]</span>,
<span class="o">[</span><span class="s2">"updated_at"</span>, <span class="m">2013</span>-04-10 <span class="m">20</span>:09:10 +0200<span class="o">]]</span>
DEBUG -  <span class="o">(</span><span class="m">174</span>.1ms<span class="o">)</span>  commit transaction
DEBUG -     POST <span class="o">(</span><span class="m">0</span>.1854ms<span class="o">)</span> /users/create - <span class="m">303</span> See Other
DEBUG - TEMPLATE <span class="o">(</span><span class="m">0</span>.0004ms<span class="o">)</span> /page/home
DEBUG - TEMPLATE <span class="o">(</span><span class="m">0</span>.0002ms<span class="o">)</span> /application
DEBUG -      GET <span class="o">(</span><span class="m">0</span>.0058ms<span class="o">)</span> / - <span class="m">200</span> OK
</pre></div></div>
<p>Remember to have an eye into your logs to detect possible back-end problems.</p>
<div class="aside" id="box-parameterized-query"><div class="heading"><span class="number">Box 2.6.</span> <span class="description">What are VALUES (?, ?, ?, ?, ?)<span class="intersentencespace"></span> in a SQL insert query?</span>

</div>
<p>These form of inserting data in your database is known as parameterized queries.<span class="intersentencespace"></span> A parameterized query is a query in which placeholders are used for parameters and the parameter values are supplied at execution time.<span class="intersentencespace"></span> The most important reason to use parameterized queries is to avoid <a href="https://en.wikipedia.org/wiki/SQL_injection" rel="noopener">SQL injection</a> attacks.<span class="intersentencespace"></span> SQL injection means that SQL statements are injected into input fields in order to get access/delete user data.<span class="intersentencespace"></span></p>

</div></div></div>
<div id="uid152" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid152" class="heading hyperref"><span class="number">2.4.4 </span>Emails</a></h3>
<p class="noindent">Padrino uses the <a href="https://rubygems.org/gems/padrino-mailer" rel="noopener">Padrino Mailer gem</a> for sending mails.<span class="intersentencespace"></span> For simplification, we are using SMTP with Gmail.<span class="intersentencespace"></span> First we need to place our setting for emails in in <code>app.rb</code><sup id="cha-2_footnote-ref-12" class="footnote"><a href="#cha-2_footnote-12">12</a></sup>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/app.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span> <span class="o">&lt;</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Application</span>
    <span class="o">...</span>
    <span class="n">set</span> <span class="ss">:delivery_method</span><span class="p">,</span> <span class="ss">smtp</span><span class="p">:</span> <span class="p">{</span>
      <span class="ss">address</span><span class="p">:</span> <span class="s1">'smtp.gmail.com'</span><span class="p">,</span>
      <span class="ss">port</span><span class="p">:</span> <span class="mi">587</span><span class="p">,</span>
      <span class="ss">user_name</span><span class="p">:</span> <span class="s1">'&lt;your-gmail-account-address&gt;'</span><span class="p">,</span>
      <span class="ss">password</span><span class="p">:</span> <span class="s1">'&lt;secret&gt;'</span><span class="p">,</span>
      <span class="ss">authentication</span><span class="p">:</span> <span class="ss">:plain</span>
    <span class="p">}</span>
    <span class="o">...</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Let’s get through all the different options:</p>
<ul>
<li><code>delivery_method</code>: Defines the delivery method.<span class="intersentencespace"></span> Possible values are <a href="https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol" rel="noopener">:smtp</a> (default), <a href="https://en.wikipedia.org/wiki/Sendmail" rel="noopener">:sendmail</a>, <code>:test</code> (no mails will be send), and <a href="http://edgeguides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration" rel="noopener">:file</a> (will write the contents of the email in a file).<span class="intersentencespace"></span>
</li>
<li><code>address</code>: The SMTP mail address.<span class="intersentencespace"></span>
</li>
<li><code>port</code>: The port of the mail address.<span class="intersentencespace"></span>
</li>
<li><code>user_name</code>: The name of the SMTP address.<span class="intersentencespace"></span>
</li>
<li><code>password</code>: The password of your SMTP address.<span class="intersentencespace"></span>
</li>
<li><code>authentication</code>: Specify if your mail server requires authentication.<span class="intersentencespace"></span> The default setting is plain meaning that the password is not encrypted.<span class="intersentencespace"></span>
</li></ul>
<p>You can also pass use <code>domain</code> for emails which sets up for <a href="http://en.wikipedia.org/wiki/Anti-spam_techniques#Strict_enforcement_of_RFC_standards" rel="noopener">HELO
checking</a>.</p>
<p>Prior to Padrino <em>0.10.7</em> the <code>enable_starttls_auto</code> option was changeable.<span class="intersentencespace"></span> This option is now always enabled.<span class="intersentencespace"></span> The <a href="https://en.wikipedia.org/wiki/Opportunistic_TLS" rel="noopener">starttls</a> is a mechanism for encrypted communication with the Transport Layer Security.</p>
<p>We won’t test the email functionality to this point because the <em>Mailer gem</em> is already tested.</p>
<div id="uid160" class="subsubsection"><h4><a href="#uid160" class="heading">Quick Mail Usage</a></h4>
<p class="noindent">To send a first simple ‘Hello’ message we create an <a href="https://github.com/padrino/padrino-framework/blob/master/padrino-mailer/lib/padrino-mailer/base.rb#L26" rel="noopener">email block</a> directly in our user controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
      <span class="n">email</span> <span class="k">do</span>
        <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
        <span class="n">to</span> <span class="s1">'lordmatze@gmail.com'</span>
        <span class="n">subject</span> <span class="s1">'Welcome!'</span>
        <span class="n">body</span> <span class="s1">'Hello'</span>
      <span class="k">end</span>
      <span class="n">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Now start the app, go to the URL <a href="http://localhost:3000/login" rel="noopener">http://localhost:3000/login</a>, and register a fresh user.<span class="intersentencespace"></span> You can check the log if the mail was send or you “feel” a slow down in your application because it takes a while before the mail is send:</p>
<div class="code"><div class="highlight"><pre><span></span>DEBUG - Sending email to: lordmatze@gmail.com
Date: Sun, 14 Apr 2013 09:17:38 +0200
From: admin@job-vacancy.de
To: lordmatze@gmail.com
Message-ID: &lt;516a581243fb3_498a446f81c295e3@mg.mail&gt;
Subject: Welcome!
Mime-Version: 1.0
Content-Type: text/plain;
charset=UTF-8
Content-Transfer-Encoding: 7bit

Hallo
</pre></div></div>
</div>
<div id="uid161" class="subsubsection"><h4><a href="#uid161" class="heading">Mailer</a></h4>
<p class="noindent">We could go on and parametrized our email example above, but this would mean that we have email code directly into our controller code.<span class="intersentencespace"></span> We can do better by wrapping up the logic into an object and let it handle the action.</p>
<p>With the help of <a href="http://www.padrinorb.com/api/Padrino/Mailer.html" rel="noopener">mailer</a> we can create customized:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen mailer Registration registration_email
  create  app/mailers/registration.rb
  create  app/views/mailers/registration
</pre></div></div>
<p>Let’s break it down:</p>
<ul>
<li><code>mailer</code>: The command to create a custom mailer.<span class="intersentencespace"></span> Inside a mailer you can define the name of your mailer object and it’s different templates.<span class="intersentencespace"></span> The name of our first email is <code>registration_email</code>.<span class="intersentencespace"></span>
</li>
<li><code>Registration</code>: Name of the mailer.<span class="intersentencespace"></span>
</li></ul>
<p>Now we let’s look into the <code>registration.rb</code> file:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/registration.rb</span>

<span class="ss">JobVacancy</span><span class="p">:</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:registration</span> <span class="k">do</span>
  <span class="n">email</span> <span class="ss">:registration_email</span> <span class="k">do</span>
    <span class="c1"># Your mailer goes here</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Let’s fill the the registration with our code from the <code>users</code>controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/registration.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:registration</span> <span class="k">do</span>
  <span class="n">email</span> <span class="ss">:registration_email</span> <span class="k">do</span>
    <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
    <span class="n">to</span> <span class="s1">'lordmatze@gmail.com'</span>
    <span class="n">subject</span> <span class="s1">'Welcome!'</span>
    <span class="n">body</span> <span class="s1">'Hello'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we can use the <code>deliver</code> method to call our <code>:registration</code> mailer with it’s <code>:registration_email</code> template:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controller/users.rb</span>

<span class="o">...</span>
<span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
  <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">deliver</span><span class="p">(</span><span class="ss">:registration</span><span class="p">,</span> <span class="ss">:registration_email</span><span class="p">)</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
  <span class="k">else</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<div class="aside" id="box-difference-between-mailer-and-deliver"><div class="heading"><span class="number">Box 2.7.</span> <span class="description">Difference between Padrino’s Mailer methods email and deliver</span>

</div>
<p>The <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino%2FMailer%2FHelpers%2FClassMethods:email" rel="noopener">email</a> method has the parameters <code>mail_attributes = {}, &amp;block</code>.<span class="intersentencespace"></span> That means the you write emails directly <code>JobVacancy.email(to: '...', from: '...', subject: '...', body: '...')</code> or use the block syntax <code>JobVacancy.email do ... end</code>.<span class="intersentencespace"></span> The <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino%2FMailer%2FHelpers%2FClassMethods:deliver" rel="noopener">deliver</a> method has <code>mailer_name, message_name, *attributes</code> as attributes.<span class="intersentencespace"></span> In order to use this you always to create a Mailer for them.</p>
<p>If you want to use very simple mails in your application, prefer to use the <code>email</code> method.<span class="intersentencespace"></span> But if you have templates with a much more complex layout in different formats (plain, HTML), the <code>deliver</code> method is the best fit.</p>

</div><p>Instead of writing only a simple ‘Hello’ in our email we would like to give more input.<span class="intersentencespace"></span> First we need to write an template and then use the <code>render</code> method in our registration mailer.<span class="intersentencespace"></span> Let’s define the registration template:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/mailers/registration/registration_email.plain.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">Hi </span><span class="cp">&lt;%=</span> <span class="nb">name</span> <span class="cp">%&gt;</span><span class="x">,</span>

<span class="x">we are glad to have you on our platform. Feel free to post jobs and find the</span>
<span class="x">right people for your application.</span>

<span class="x">Your Job Vacancy!</span>
</pre></div></div>
<p>Now we need to make sure that we are rendering the <code>registration_email</code> template our registration mailer:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/registration.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:registration</span> <span class="k">do</span>
  <span class="n">email</span> <span class="ss">:registration_email</span> <span class="k">do</span>
    <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
    <span class="n">to</span> <span class="s1">'lordmatze@gmail.com'</span>
    <span class="n">subject</span> <span class="s1">'Welcome!'</span>
    <span class="n">render</span> <span class="s1">'registration/registration_email'</span>
    <span class="n">content_type</span> <span class="ss">:plain</span> <span class="c1"># is the default, :html is also possible</span>
</pre></div></div>
<p>If you are sure that you only want to send plain text mail, you can leave the <code>plain</code> extension away but making it explicit makes it clear for everyone.</p>
<p>To personalize our mail we want mention the name of the fresh registered in the registration email as well as sent it to their given mail.<span class="intersentencespace"></span> First we need to pass the <code>name</code> and <code>email</code> to our mail block and pass the name to the template via the <code>locals</code> option:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/registration.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:registration</span> <span class="k">do</span>
  <span class="n">email</span> <span class="ss">:registration_email</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="p">,</span> <span class="n">email</span><span class="o">|</span>
    <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
    <span class="n">to</span> <span class="n">email</span>
    <span class="n">subject</span> <span class="s1">'Welcome!'</span>
    <span class="n">locals</span> <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="nb">name</span>
    <span class="n">render</span> <span class="s1">'registration/registration_email'</span>
    <span class="n">content_type</span> <span class="ss">:plain</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The <code>locals</code> options provides us a hash in the email template.<span class="intersentencespace"></span> All we need now it to pass the <code>name</code> and the <code>email</code> to our <code>deliver</code> method:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>
<span class="o">...</span>

<span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>

  <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">valid?</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>

    <span class="n">deliver</span><span class="p">(</span><span class="ss">:registration</span><span class="p">,</span> <span class="ss">:registration_email</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
  <span class="k">else</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we want to add a PDF which explains the main business needs to our page.<span class="intersentencespace"></span> For this purpose we will save the <code>welcome.pdf</code> into the <code>/app/assets/pdf</code> folder.</p>
<p>To attach assets (images, PDF, video) into our mail we can make use of the <a href="https://github.com/mikel/mail/blob/master/lib/mail/message.rb#L1755" rel="noopener">add_file</a> method.<span class="intersentencespace"></span> It takes a filename and the content as hash elements as arguments.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/registration.rb</span>
<span class="o">...</span>

<span class="n">email</span> <span class="ss">:registration_email</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="p">,</span> <span class="n">email</span><span class="o">|</span>
  <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
  <span class="n">to</span> <span class="n">email</span>
  <span class="n">subject</span> <span class="s1">'Welcome!'</span>
  <span class="n">locals</span> <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="n">email</span>
  <span class="n">render</span> <span class="s1">'registration/registration_email'</span>
  <span class="n">add_file</span> <span class="ss">filename</span><span class="p">:</span> <span class="s1">'welcome.pdf'</span><span class="p">,</span> <span class="ss">content</span><span class="p">:</span>
    <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="no">Padrino</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/app/assets/pdf/welcome.pdf"</span><span class="p">)</span>
<span class="k">end</span>
</pre></div></div>
<p>If the mail will be send you can see something like this in your logs:</p>
<div class="code"><div class="highlight"><pre><span></span>  DEBUG - Sending email to: lordmatze@gmail.com
Date: Thu, 18 Apr 2013 18:34:15 +0200
From: admin@job-vacancy.de
To: lordmatze@gmail.com
Message-ID: &lt;5170208754967_70f748e80108323a@mg.mail&gt;
Subject: Welcome!
Mime-Version: 1.0
Content-Type: text/plain
Content-Transfer-Encoding: 7bit

----==_mimepart_517020874676e_70f748e8010829d8
Date: Thu, 18 Apr 2013 18:34:15 +0200
Mime-Version: 1.0
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-ID: &lt;5170208753fd5_70f748e8010831c1@mg.mail&gt;

Hi Bob,

we are glad to have you on our platform. Feel free to post jobs and find the
right people for your application.

Your Job Vacancy!

----==_mimepart_517020874676e_70f748e8010829d8
Date: Thu, 18 Apr 2013 18:34:15 +0200
Mime-Version: 1.0
Content-Type: application/pdf;
 charset=UTF-8;
 filename=welcome2.pdf
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename=welcome2.pdf
Content-ID: &lt;517020874ba76_70f748e80108301@mg.mail&gt;

JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0Zp
bHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMABCM0MjBXNL
...
# You don't want to read four pages of strange characters ...
...

----==_mimepart_517020874676e_70f748e8010829d8--
</pre></div></div>
<div class="aside" id="box-mime"><div class="heading"><span class="number">Box 2.8.</span> <span class="description">MIME?</span>

</div>
<p>MIME stands for “Multipurpose Internet Mail Extensions” and they specify additional attributes to email headers like the content type and defines transfer encodings which can be used to present a higher encoded file (e.g.<span class="intersentencespace"></span> 8-bit) with the 7-bit ASCII character set.<span class="intersentencespace"></span> This makes it possible to put non-English characters in the message header.</p>
<p>The goal of the MIME definition was that existing email servers had nothing to change in order to use MIME types.<span class="intersentencespace"></span> This means that MIME headers are optional for plain text emails and even none MIME messages can be read correctly by a clients being able to read MIME encoded messages.</p>

</div></div></div>
<div id="uid166" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid166" class="heading hyperref"><span class="number">2.4.5 </span>Sending Email with Confirmation Link</a></h3>
<p class="noindent">The basic steps for implementing the logic of email confirmation are the following:</p>
<ul>
<li>Add the <code>confirmation_token</code> and <code>confirmation</code> attributes in our user model.<span class="intersentencespace"></span>
</li>
<li>Create a controller method for our user model that expects a user id and <code>confirmation_token</code>, looks up the user, checks if the submitted <code>confirmation_token</code> exists in our database, and clears the code after confirmation so that it is valid only one time.<span class="intersentencespace"></span>
</li>
<li>Add a route that maps to our new controller method (e.g.<span class="intersentencespace"></span> <code>/confirm/&lt;user-id&gt;/&lt;code&gt;</code>).<span class="intersentencespace"></span>
</li>
<li>Create a mailer template which takes the user as a parameter and use the <em>confirmation code</em> of the user to send a mail containing a link to the new confirmation route.<span class="intersentencespace"></span>
</li>
<li>Protect our controller methods and views to prevent security issues with a helper method to check if the current user
is confirmed.<span class="intersentencespace"></span>
</li></ul>
<div class="aside" id="box-why-confirmation-mail"><div class="heading"><span class="number">Box 2.9.</span> <span class="description">Why Confirmation Mail?</span>

</div>
<p>Check that the user actually signed up for the account and actually wants it.<span class="intersentencespace"></span> This also helps you from spamming your platform with unwanted users.<span class="intersentencespace"></span> Another usage of this information is to give your users a chance to change their password and/or stay in contact with them to inform them about updates.</p>

</div>
<div id="uid173" class="subsubsection"><h4><a href="#uid173" class="heading">Add Confirmation Code and Confirmation Attributes to the User Model</a></h4>
<p class="noindent">Create a migration and add the fields to the file:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen migration AddConfirmationTokenAndConfirmationToUsers
    confirmation_token:string confirmation:boolean
   apply  orms/activerecord
  create  db/migrate/005_add_confirmation_token_and_confirmation_to_users.rb
</pre></div></div>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># db/migrate/005_add_confirmation_token_and_confirmation_to_users.rb</span>

<span class="k">class</span> <span class="nc">AddConfirmationCodeAndConfirmationToUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:confirmation_token</span>
      <span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:confirmation</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">remove_column</span> <span class="ss">:confirmation_token</span><span class="p">,</span> <span class="ss">:confirmation</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We added the <code>:default</code> option which sets the confirmation for every user to false if a new one is registered.<span class="intersentencespace"></span> Now let’s migrate our production and test database to this new event:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino rake ar:migrate
$ padrino rake ar:migrate -e <span class="nb">test</span>
</pre></div></div>
</div></div>
<div id="uid174" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid174" class="heading hyperref"><span class="number">2.4.6 </span>My Tests are Slow … use Mocks!</a></h3>
<p class="noindent">During writing this book I discovered various strange behavior for my tests because I was writing data into my test database.<span class="intersentencespace"></span> The tests weren’t really reliable because some worked only when the database is fresh with no preexisting entries.<span class="intersentencespace"></span> One solution would be to clean up the database before each run:</p>
<div class="code"><div class="highlight"><pre><span></span>$ sqlite3 db/job_vacancy_test.db
  SQLite version <span class="m">3</span>.7.13 <span class="m">2012</span>-06-11 <span class="m">02</span>:05:22
  Enter <span class="s2">".help"</span> <span class="k">for</span> instructions
  Enter SQL statements terminated with a <span class="s2">";"</span>
  sqlite&gt; DELETE FROM users<span class="p">;</span>
  sqlite&gt; .quit
</pre></div></div>
<p>But after this my tests were running very slow:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec
...

Finished in <span class="m">1</span>.61 seconds
<span class="m">25</span> examples, <span class="m">0</span> failures
</pre></div></div>
<p>Running them again make them a little bit faster:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec
...

Finished in <span class="m">0</span>.77209 seconds
<span class="m">25</span> examples, <span class="m">0</span> failures
</pre></div></div>
<p>Why?<span class="intersentencespace"></span> Because we are hitting the database.<span class="intersentencespace"></span> Consider the following method which will be part of the following chapter as an example:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">encrypt_confirmation_token</span>
  <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
  <span class="n">token</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
  <span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="n">token</span>
<span class="k">end</span>
</pre></div></div>
<p>We need to use <strong>mocks</strong> to simulate the generating of password hashes to stable values, otherwise our test would be very brittle because the value changes during every execution.<span class="intersentencespace"></span> The benefits of mocks are that you create the environment you want to test and don’t care about all the preconditions to make this test possible.</p>
<p>The magic behind mocking is to use the <a href="https://github.com/rspec/rspec-mocks#message-expectations" rel="noopener">receive</a> and <a href="https://github.com/rspec/rspec-mocks#consecutive-return-values" rel="noopener">return</a> expectation flow.<span class="intersentencespace"></span> <code>Receive</code> says which method should be called and <code>and_return</code> what should be returned when the specified method is called.</p>
<p>A test for the <code>encrypt_confirmation_token</code> method may look like:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

<span class="n">it</span> <span class="s1">'encrypts the confirmation token of the user'</span> <span class="k">do</span>
  <span class="n">salt</span> <span class="o">=</span> <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.'</span>
  <span class="n">expected_confirmation_token</span> <span class="o">=</span>
    <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.zAi0tu1C5N.oKMoPT6NbjtD.3cg7Au'</span>
  <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:generate_salt</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">salt</span><span class="p">)</span>
  <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:hash_secret</span><span class="p">)</span>
    <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">expected_confirmation_token</span><span class="p">)</span>

  <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="p">)</span>
    <span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">expected_confirmation_token</span>
<span class="k">end</span>
</pre></div></div>
<p>With the help of mocks you keep your tests fast and robust.<span class="intersentencespace"></span> Even if this will be the first application you write, when you’ve learned something new
and this will make your life easier, go back and take your time to enhance the style and design of your application.</p>
</div>
<div id="sec-controller_method_and_action_for_password_confirmation" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#sec-controller_method_and_action_for_password_confirmation" class="heading hyperref"><span class="number">2.4.7 </span>Controller Method and Action For Password Confirmation</a></h3>
<p class="noindent">When we are going to register a new user, we need to create a confirmation code.<span class="intersentencespace"></span> Since this is business logic, we will put this method inside
our users model.<span class="intersentencespace"></span> First we will write a failing test:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>
<span class="o">...</span>
  <span class="n">it</span> <span class="s1">'has confirmation token'</span> <span class="k">do</span>
    <span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="s1">''</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>

    <span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="s1">'1'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_truthy</span>
  <span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<p>To make this test pass we add the validates presence of ability in our user model:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>
  <span class="n">validates</span> <span class="ss">:confirmation_token</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Next we need think of how we can set the <code>confirmation_token</code> information to our freshly created user.<span class="intersentencespace"></span> Instead of creating a confirmation code on our own, we want to encrypt the password by some mechanism.<span class="intersentencespace"></span> Luckily, we can use <a href="https://github.com/codahale/bcrypt-ruby" rel="noopener">bcrypt</a> to create our confirmation code.<span class="intersentencespace"></span> It is a Ruby binding for the <a href="https://en.wikipedia.org/wiki/OpenBSD_security_features" rel="noopener">OpenBSD bcrypt</a> password hashing algorithm.<span class="intersentencespace"></span> In order to use this in our app we need to add it to our <code>Gemfile</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># Gemfile</span>
<span class="o">...</span>

<span class="c1"># Security</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span> <span class="s1">'~&gt; 3.1.11'</span>
</pre></div></div>
<p>Now let’s open the console and play around with this Gem:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino c
  ...
  &gt;&gt; <span class="nv">password</span> <span class="o">=</span> <span class="s2">"Test123"</span>
  <span class="o">=</span>&gt; <span class="s2">"Test123"</span>
  &gt;&gt; <span class="nv">salt</span> <span class="o">=</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">a</span><span class="nv">$05$CCCCCCCCCCCCCCCCCCCCC</span><span class="s2">.E5YPO9kmyuRGyh0XouQYb4YMJKvyOeW"</span>
  <span class="o">=</span>&gt; <span class="s2">"</span><span class="nv">$2</span><span class="s2">a</span><span class="nv">$05$CCCCCCCCCCCCCCCCCCCCC</span><span class="s2">.E5YPO9kmyuRGyh0XouQYb4YMJKvyOeW"</span>
  &gt;&gt; BCrypt::Engine.hash_secret<span class="o">(</span>password, salt<span class="o">)</span>
  <span class="o">=</span>&gt; <span class="s2">"</span><span class="nv">$2</span><span class="s2">a</span><span class="nv">$05$CCCCCCCCCCCCCCCCCCCCC</span><span class="s2">.R0E8oIJQ4Okva8QVfxJ3FY3GZ7x/O.6"</span>
</pre></div></div>
<div class="aside" id="box-what-is-a-salt"><div class="heading"><span class="number">Box 2.10.</span> <span class="description">What is a Salt?</span>

</div>
<p>Salts are used in cryptography as random data to be put as addition to normal password to create an encrypted hash with the help of a <strong>one-way function</strong>.<span class="intersentencespace"></span> A one-way function output by some input string very easily but the other way round is very difficult for the computer to compute the original string from the output.</p>
<p>Salts make it more difficult for hackers to get the password via <strong>rainbow tables</strong> attacks.<span class="intersentencespace"></span> Rainbow tables are a huge list of precomputed hashes for widely used password.<span class="intersentencespace"></span> If a hacker gets access to a password hash he then compare this hash with the entries.<span class="intersentencespace"></span> If he finds after which he was searching he got the password for the user.</p>

</div><p>We could add these methods in the users controller but that isn’t something a controller should do.<span class="intersentencespace"></span> We better use a <a href="http://guides.rubyonrails.org/active_record_validations_callbacks.html#callbacks-overview" rel="noopener">callback</a>.<span class="intersentencespace"></span> <strong>Callbacks</strong> are methods to run on a certain stage or life cycle of an object.<span class="intersentencespace"></span> Let’s make use of it in our <code>user</code> model:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="nb">require</span> <span class="s1">'bcrypt'</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span> <span class="c1"># The other validations</span>

  <span class="n">before_save</span> <span class="ss">:encrypt_confirmation_token</span><span class="p">,</span>
    <span class="ss">:if</span> <span class="o">=&gt;</span> <span class="ss">:registered?</span> <span class="c1"># our callback with if condition</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">encrypt_confirmation_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="n">set_confirmation_token</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">set_confirmation_token</span>
    <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
    <span class="n">token</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="n">normalize_confirmation_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">normalize_confirmation_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
    <span class="n">token</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'+'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">registered?</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">new_record?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We won’t test the methods under the private<sup id="cha-2_footnote-ref-13" class="footnote"><a href="#cha-2_footnote-13">13</a></sup> keyword, there is no customized business logic inside these methods and we
are just using third party libraries which are tested.</p>
<p>After creating the confirmation code mechanism for our user, we need to implement an authentication which takes the confirmation code as an input and mark our user as <em>confirmed</em>.<span class="intersentencespace"></span> Let’s start with failing tests:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/models/user_spec.rb</span>
<span class="o">...</span>

<span class="n">describe</span> <span class="s1">'#authenticate'</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'authenticates user with correct confirmation'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
      <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
      <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be_truthy</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'reject user with incorrect confirmation code'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="s1">'wrong'</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<div class="aside" id="box-take-care-of-names"><div class="heading"><span class="number">Box 2.11.</span> <span class="description">Take care of your names!?</span>

</div>
<p>During writing this chapter I lost a couple of hours because I had method with the same name as the <code>confirmation_token</code> field.<span class="intersentencespace"></span> When I wanted to check <code>@user.confirmation_token</code> it always called the <code>confirmation_token</code> method which return a new confirmation code.<span class="intersentencespace"></span> I was thinking for a long time that it returned the attribute and was wondering what’s going on.<span class="intersentencespace"></span> A couple of <a href="http://pryrepl.org" rel="noopener">pry</a> sessions showed me nothing since my expectation was.</p>
<p>After I went to the toilet I started another pry session and out of sudden I discovered my naming problem.<span class="intersentencespace"></span> Lesson learned: Breaks are great!</p>

</div><p>Before going on we need to update our <code>factory</code> for the test with the confirmation code field::</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/factories.rb</span>

<span class="c1"># encoding: utf-8</span>

<span class="no">FactoryBot</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">sequence</span><span class="p">(</span><span class="ss">:confirmation_token</span><span class="p">)</span> <span class="p">{</span> <span class="s1">'1'</span> <span class="p">}</span>
  <span class="n">sequence</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="p">}</span>

  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
    <span class="nb">id</span>
    <span class="nb">name</span>
    <span class="n">email</span>
    <span class="n">password</span> <span class="s2">"octocat"</span>
    <span class="n">confirmation_token</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>The value for the <code>confirmation_token</code> will always be 1 which makes our tests easier.<span class="intersentencespace"></span> Here is the code that makes our tests green:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>

  <span class="k">def</span> <span class="nf">authenticate</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">==</span> <span class="n">token</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">=</span> <span class="kp">true</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">save</span>
      <span class="k">return</span> <span class="kp">true</span>
    <span class="k">end</span>

    <span class="kp">false</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Since our tests of our user model are now green, let’s write tests for our <code>/confirm</code> route:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/users_controller_spec.rb</span>

<span class="n">describe</span> <span class="s2">"GET confirm"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s2">"render the '/confirm' page if user has confirmation code"</span> <span class="k">do</span>
    <span class="n">user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">confirmed_user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
    <span class="n">get</span> <span class="s2">"/confirm/</span><span class="si">#{</span><span class="n">confirmed_user</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">confirmed_user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="si">}</span><span class="s2">"</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'redirect to :confirm if user id is wrong'</span> <span class="k">do</span>
    <span class="n">get</span> <span class="s2">"/confirm/test/</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="si">}</span><span class="s2">"</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">"Confirmation token is wrong."</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'redirect to :confirm if confirmation id is wrong'</span> <span class="k">do</span>
    <span class="n">get</span> <span class="s2">"/confirm/</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/test"</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">"Confirmation token is wrong."</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>To make this pass, we implement the following code:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>
<span class="o">...</span>

<span class="n">get</span> <span class="ss">:confirm</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/confirm/:id/:code"</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span><span class="p">)</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s2">"You have been confirmed. Please confirm with the mail</span>
<span class="s2">        we've send you recently."</span>
      <span class="n">render</span> <span class="s1">'confirm'</span>
    <span class="k">else</span>
      <span class="n">redirect</span> <span class="s1">'/'</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'Confirmation token is wrong.'</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Please note that we are using <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Flash/Storage#now-instance_method" rel="noopener">flash.now</a> because in case of an success we stay at the confirm page without making a new request.<span class="intersentencespace"></span> Play around and use <code>flash</code> only, as a result you should see
the success message twice.</p>
<p><strong>Rule of the thumb</strong>: To display the flash in render, use <code>flash.now[:error]</code> and to display the flash in redirect, use <code>flash[:error]</code></p>
</div>
<div id="uid179" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid179" class="heading hyperref"><span class="number">2.4.8 </span>Mailer Template for Confirmation Email</a></h3>
<p class="noindent">We could be lazy by adding our confirmation email into the registration mailer.<span class="intersentencespace"></span> But they have nothing to-do with each
other so let’s create a mailer for this purpose:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen mailer Confirmation confirmation_email
  create  app/mailers/confirmation.rb
  create  app/views/mailers/confirmation
</pre></div></div>
<p>Now fill out the confirmation mailer:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/confirmation.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:confirmation</span> <span class="k">do</span>
  <span class="no">CONFIRMATION_URL</span> <span class="o">=</span> <span class="s1">'http://localhost:3000/confirm'</span><span class="o">.</span><span class="n">freeze</span>

  <span class="n">email</span> <span class="ss">:confirmation_email</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">link</span><span class="o">|</span>
    <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
    <span class="n">subject</span> <span class="s1">'Please confirm your account'</span>
    <span class="n">to</span> <span class="n">email</span>
    <span class="n">locals</span> <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">,</span> <span class="ss">confirmation_link</span><span class="p">:</span>
      <span class="s2">"</span><span class="si">#{</span><span class="no">CONFIRMATION_URL</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">link</span><span class="si">}</span><span class="s2">"</span>
    <span class="n">render</span> <span class="s1">'configuration/confirmation_email'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Fill the email template with “confirmation-link-life”:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/mailers/confirmation/confirmation_email.plain.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">Hi </span><span class="cp">&lt;%=</span> <span class="nb">name</span> <span class="cp">%&gt;</span><span class="x">,</span>

<span class="x">to take fully advantage of our platform you have to follow the following link:</span>

<span class="cp">&lt;%=</span> <span class="n">confirmation_link</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">Enjoy the possibility to find the right people for your jobs.</span>
</pre></div></div>
<p>And call this <code>confirmation_email</code> in our users controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>

  <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">deliver</span><span class="p">(</span><span class="ss">:registration</span><span class="p">,</span> <span class="ss">:registration_email</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">deliver</span><span class="p">(</span><span class="ss">:confirmation</span><span class="p">,</span> <span class="ss">:confirmation_email</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
            <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
            <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
            <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="p">)</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
  <span class="k">else</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
</div>
<div id="uid180" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid180" class="heading hyperref"><span class="number">2.4.9 </span>Registration and Confirmation Emails</a></h3>
<p class="noindent">The code is working but we have flaws in our design:</p>
<ol>
<li>The controller is sending mails but this is not the responsibility of it.<span class="intersentencespace"></span>
</li>
<li>Our user model is blown up with authentication code.<span class="intersentencespace"></span>
</li></ol>
<div class="aside" id="box-Observers-vs-callbacks-vs-poros"><div class="heading"><span class="number">Box 2.12.</span> <span class="description">Observers vs.<span class="intersentencespace"></span> Callbacks vs.<span class="intersentencespace"></span> POROs</span>

</div>
<p><a href="https://en.wikipedia.org/wiki/Observer_pattern" rel="noopener">Observers</a><sup id="cha-2_footnote-ref-14" class="footnote"><a href="#cha-2_footnote-14">14</a></sup> are a design pattern where an object has a list of its dependents called observers, and notifies them automatically if its state has changed by calling one of their methods.<span class="intersentencespace"></span> Observers means to be decoupling responsibility.<span class="intersentencespace"></span> They can serve as a connection point between your models and some other functionality of another system.<span class="intersentencespace"></span> Observers “lives” longer in your application and can be attached/detached at any time.</p>
<p><a href="http://guides.rubyonrails.org/active_record_callbacks.html" rel="noopener">Callbacks’</a> live shorter - you pass it to a function to be called only once.</p>
<p><strong><span style="color: red">Rule of the thumb</span></strong>: When you use callbacks with code that isn’t directly related to your model, you better put this into an observer.</p>
<p>The observer pattern decouples event producers from event consumers but tightly couples models to them - and that make
it hard to test them because you always have them always around.<span class="intersentencespace"></span> Besides they add a kind of hidden magic to your code,
you may forget when you that they are always around you.<span class="intersentencespace"></span> Better way is to make those calls explicit in your controller.<span class="intersentencespace"></span> That where <strong>Plain Old Ruby Objects</strong> (<a href="http://blog.steveklabnik.com/posts/2011-09-06-the-secret-to-rails-oo-design" rel="noopener">PORO</a>)
jump in.<span class="intersentencespace"></span> They make magic calls explicit, are easier to test, and reusable.</p>

</div><p>We want to have a class which sends the registration and confirmation email.<span class="intersentencespace"></span> To see what we can move out of the user
model let’s have a look inside this model:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="nb">require</span> <span class="s1">'bcrypt'</span>

<span class="no">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>
  <span class="n">before_save</span> <span class="ss">:encrypt_confirmation_token</span><span class="p">,</span> <span class="ss">:if</span> <span class="o">=&gt;</span> <span class="ss">:registered?</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">encrypt_confirmation_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="n">set_confirmation_token</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">set_confirmation_code</span>
    <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
    <span class="n">token</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="n">normalize_confirmation_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">registered?</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">new_record?</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">normalize_confirmation_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
    <span class="n">token</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'+'</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And refactor the code above into the <code>UserCompletionMail</code> class:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># lib/Infrastructure/Mail/user_completion_mail.rb</span>

<span class="nb">require</span> <span class="s1">'bcrypt'</span>

<span class="k">class</span> <span class="nc">UserCompletionMail</span>

  <span class="kp">attr_accessor</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:app</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span> <span class="o">=</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="p">)</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
    <span class="vi">@app</span> <span class="o">||=</span> <span class="n">app</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">send_registration_mail</span>
    <span class="vi">@app</span><span class="o">.</span><span class="n">deliver</span><span class="p">(</span>
      <span class="ss">:registration</span><span class="p">,</span>
      <span class="ss">:registration_email</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">email</span>
    <span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">send_confirmation_mail</span>
    <span class="vi">@app</span><span class="o">.</span><span class="n">deliver</span><span class="p">(</span>
      <span class="ss">:confirmation</span><span class="p">,</span>
      <span class="ss">:confirmation_email</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation_token</span>
    <span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">encrypt_confirmation_token</span>
    <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
    <span class="n">confirmation_code</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="n">normalize</span><span class="p">(</span><span class="n">confirmation_code</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">normalize</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
    <span class="n">token</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">"/"</span><span class="p">,</span> <span class="s2">""</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Please note that I’ve added the <code>lib/Infrastructure/Mail</code> folder to have better order and separation of files.</p>
<p>We are not using the single <code>deliver</code> method here because our file does not have access to it.<span class="intersentencespace"></span> Instead we have
to take <code>JobVacancy::App.deliver</code> way to access the mail<sup id="cha-2_footnote-ref-15" class="footnote"><a href="#cha-2_footnote-15">15</a></sup></p>
<p>Here is the spec for the class:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/lib/Infrastucture/Mail/user_completion_mail_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">UserCompletionMail</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"user new record"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s1">'sends registration mail'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">app</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:deliver</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:registration</span><span class="p">,</span> <span class="ss">:registration_email</span><span class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">)</span>

      <span class="vi">@user_completion_mail</span> <span class="o">=</span> <span class="no">UserCompletionMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span><span class="p">)</span>
      <span class="vi">@user_completion_mail</span><span class="o">.</span><span class="n">send_registration_mail</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'sends confirmation mail'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">app</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:deliver</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:confirmation</span><span class="p">,</span>
              <span class="ss">:confirmation_email</span><span class="p">,</span>
              <span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
              <span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
              <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
              <span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span>
             <span class="p">)</span>

      <span class="vi">@user_completion_mail</span> <span class="o">=</span> <span class="no">UserCompletionMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span><span class="p">)</span>
      <span class="vi">@user_completion_mail</span><span class="o">.</span><span class="n">send_confirmation_mail</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'encrypts the confirmation token of the user'</span> <span class="k">do</span>
      <span class="n">salt</span> <span class="o">=</span> <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.'</span>
      <span class="n">expected_confirmation_code</span> <span class="o">=</span>
        <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.zAi0tu1C5N.oKMoPT6NbjtD.3cg7Au'</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:generate_salt</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">salt</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:hash_secret</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">expected_confirmation_code</span><span class="p">)</span>
      <span class="vi">@user_completion_mail</span> <span class="o">=</span> <span class="no">UserCompletionMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span><span class="p">(</span><span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="p">))</span>
      <span class="vi">@user_completion_mail</span><span class="o">.</span><span class="n">encrypt_confirmation_token</span>

      <span class="n">expect</span><span class="p">(</span><span class="vi">@user_completion_mail</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">confirmation_code</span><span class="p">)</span>
        <span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">expected_confirmation_code</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Instead of writing <code>app(JobVacancy::App)</code> to simulate you can also pass <code>app</code> in the <code>UserCompletionMail.new</code> function.<span class="intersentencespace"></span> The <code>app</code> variable is automatically defined in the <code>spec_helper</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/spec_helper.rb</span>
<span class="o">...</span>

<span class="k">def</span> <span class="nf">app</span><span class="p">(</span><span class="n">app</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">blk</span><span class="p">)</span>
  <span class="vi">@app</span> <span class="o">||=</span> <span class="nb">block_given?</span> <span class="p">?</span> <span class="n">app</span><span class="o">.</span><span class="n">instance_eval</span><span class="p">(</span><span class="o">&amp;</span><span class="n">blk</span><span class="p">)</span> <span class="p">:</span> <span class="n">app</span>
  <span class="vi">@app</span> <span class="o">||=</span> <span class="no">Padrino</span><span class="o">.</span><span class="n">application</span>
<span class="k">end</span>
</pre></div></div>
<p>I have mentioned in the beginning of the chapter that our <code>UserCompletionMail</code> class should sends the registration and
confirmation email<sup id="cha-2_footnote-ref-16" class="footnote"><a href="#cha-2_footnote-16">16</a></sup>.<span class="intersentencespace"></span> But actually is is also encrypts the confirmation token of the user which is not clear from it’s name.</p>
<div class="aside" id="box-srp"><div class="heading"><span class="number">Box 2.13.</span> <span class="description">Single Responsibility Principle (SRP)</span>

</div>
<p><a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="noopener">SRP</a> says that every class or module should have a clear function over a
single piece of functionality offered by the software.<span class="intersentencespace"></span> This responsibility should be entirely encapsulated in the class</p>
<p>SRP is part of the <a href="https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)" rel="noopener">SOLID design principles</a>.</p>

</div><p>Let’extract this logic in a new <code>UserTokenConfirmationEncryptionService</code> class:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># lib/Service/user_token_confirmation_encryption_service.rb</span>
<span class="nb">require</span> <span class="s1">'bcrypt'</span>

<span class="k">class</span> <span class="nc">UserTokenConfirmationEncryptionService</span>
  <span class="kp">include</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="nb">String</span><span class="o">::</span><span class="no">Normalizer</span>

  <span class="kp">attr_accessor</span> <span class="ss">:user</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">encrypt_confirmation_token</span>
    <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
    <span class="n">token</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation_token</span> <span class="o">=</span> <span class="n">normalize</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And the specs for it:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/lib/Service/user_token_confirmation_encryption_service_spec.rb</span>
<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">UserTokenConfirmationEncryptionService</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"#encrypt_confirmation_token"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s1">'encrypts the confirmation token of the user'</span> <span class="k">do</span>
      <span class="n">salt</span> <span class="o">=</span> <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.'</span>
      <span class="n">expected_confirmation_token</span>
        <span class="o">=</span> <span class="s1">'$2a$10$y0Stx1HaYV.sZHuxYLb25.zAi0tu1C5N.oKMoPT6NbjtD.3cg7Au'</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:generate_salt</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">salt</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:hash_secret</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">expected_confirmation_token</span><span class="p">)</span>
      <span class="vi">@service</span> <span class="o">=</span> <span class="no">UserTokenConfirmationEncryptionService</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="vi">@service</span><span class="o">.</span><span class="n">encrypt_confirmation_token</span>

      <span class="n">expect</span><span class="p">(</span><span class="vi">@service</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">confirmation_token</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">expected_confirmation_token</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We need to remove the callback <code>before_save :encrypt_confirmation_token, :if =&gt; :registered?</code><span class="intersentencespace"></span> and we need also to
transfer this logic into the controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span>
      <span class="n">user_confirmation_encryption_service</span> <span class="o">=</span>
        <span class="no">UserTokenConfirmationEncryptionService</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">user_confirmation_encryption_service</span><span class="o">.</span><span class="n">encrypt_confirmation_token</span>

      <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">valid?</span>
        <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
        <span class="n">user_completion</span> <span class="o">=</span> <span class="no">UserCompletionMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
        <span class="n">user_completion</span><span class="o">.</span><span class="n">send_registration_mail</span>
        <span class="n">user_completion</span><span class="o">.</span><span class="n">send_confirmation_mail</span>
        <span class="n">redirect</span> <span class="s1">'/'</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s2">"You have been registered.\</span>
<span class="s2">          Please confirm with the mail we've send you recently."</span>
      <span class="k">else</span>
        <span class="n">render</span> <span class="s1">'new'</span>
      <span class="k">end</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Since we are using a redirect, <code>flash</code> method (see <strong>Rule of the thumb</strong> of section  <a href="job_vacancy_application_fragment.xhtml#sec-controller_method_and_action_for_password_confirmation" class="hyperref"><span class="ref">2.4.7</span></a>) is the right choice.</p>
<p>And the tests for the controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/users_controller_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/users"</span> <span class="k">do</span>
  <span class="o">...</span>
    <span class="n">describe</span> <span class="s2">"POST /users/create"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">before</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"user can be saved"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'redirects to home'</span> <span class="k">do</span>
        <span class="vi">@completion_user_mail</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">UserCompletionMail</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">UserCompletionMail</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@completion_user_mail</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="vi">@completion_user_mail</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:send_registration_mail</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="vi">@completion_user_mail</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:send_confirmation_mail</span><span class="p">)</span>

        <span class="vi">@user_token_encryption_service</span> <span class="o">=</span>
          <span class="n">double</span><span class="p">(</span><span class="no">UserTokenConfirmationEncryptionService</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">UserTokenConfirmationEncryptionService</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@user_token_encryption_service</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="vi">@user_token_encryption_service</span><span class="p">)</span>
          <span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:encrypt_confirmation_token</span><span class="p">)</span>

        <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>

        <span class="n">post</span> <span class="s2">"/users/create"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s2">"You have been registered. "</span> <span class="o">+</span>
          <span class="s2">"Please confirm with the mail we've send you recently."</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"user cannot be saved"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'renders registration'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:valid?</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span>
        <span class="n">post</span> <span class="s2">"/users/create"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Registration'</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
</div></div><div id="sec-sessions" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#sec-sessions" class="heading hyperref"><span class="number">2.5 </span>Sessions</a></h2>
<p class="noindent">It is now possible for our user to register and confirm their registration.<span class="intersentencespace"></span> In order to handle login we will create a
session controller:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller Sessions new create destroy
  create  app/controllers/sessions.rb
  create  app/views/sessions
   apply  tests/rspec
  create  spec/app/controllers/sessions_controller_spec.rb
  create  app/helpers/sessions_helper.rb
   apply  tests/rspec
  create  spec/app/helpers/sessions_helper_spec.rb
</pre></div></div>
<p>We made a mistake during the generation - we forget to add the right actions.<span class="intersentencespace"></span> Of course we could delete the generated files by hand with a couple of <code>rm's</code>, but there is a more elegant way to destroy a controller:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller Sessions -d
  remove  app/controllers/sessions.rb
  remove  app/views/sessions
   apply  tests/rspec
  remove  spec/app/controllers/sessions_controller_spec.rb
  remove  app/helpers/sessions_helper.rb
   apply  tests/rspec
  remove  spec/app/helpers/sessions_helper_spec.rb
</pre></div></div>
<p>And run the generate command with the correct actions:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller Sessions get:new post:create delete:destroy
</pre></div></div>
<p>Our session controller will look like:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/sessions_controller.rb</span>

<span class="ss">JobVacancy</span><span class="p">:</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>

  <span class="c1"># get :index, :map =&gt; '/foo/bar' do</span>
  <span class="c1">#   session[:foo] = 'bar'</span>
  <span class="c1">#   render 'index'</span>
  <span class="c1"># end</span>

  <span class="c1"># get :sample, :map =&gt; '/sample/url', :provides =&gt; [:any, :js] do</span>
  <span class="c1">#   case content_type</span>
  <span class="c1">#     when :js then ...</span>
  <span class="c1">#     else ...</span>
  <span class="c1"># end</span>

  <span class="c1"># get :foo, :with =&gt; :id do</span>
  <span class="c1">#   'Maps to url '/foo/#{params[:id]}''</span>
  <span class="c1"># end</span>

  <span class="c1"># get '/example' do</span>
  <span class="c1">#   'Hello world!'</span>
  <span class="c1"># end</span>

  <span class="n">get</span> <span class="ss">:new</span> <span class="k">do</span>
  <span class="k">end</span>

  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
  <span class="k">end</span>

  <span class="n">delete</span> <span class="ss">:destroy</span> <span class="k">do</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<div class="aside" id="box-test-first-development"><div class="heading"><span class="number">Box 2.14.</span> <span class="description">Test-First development</span>

</div>
<p>The term comes from <a href="https://en.wikipedia.org/wiki/Extreme_programming" rel="noopener">Extreme Programming (XP)</a> and means that you first write down your tests before writing any implementation code.<span class="intersentencespace"></span> This forces you to really think about what you are going to do.<span class="intersentencespace"></span> There is the hypotheses relating to code quality and a more direct correlation between TDD and productivity were inconclusive.</p>
<p>The tests prevent you from over engineering a problem because you have to make these tests green.</p>

</div><p>We write our tests first before the implementation:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/sessions_controller_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/sessions"</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"GET /login"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"load the login page"</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s2">"/login"</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"POST /sessions/create"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:params</span><span class="p">)</span> <span class="p">{</span> <span class="n">attributes_for</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s1">'stays on login page if user is not found'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="kp">false</span> <span class="p">}</span>
      <span class="n">post</span> <span class="s1">'sessions/create'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'stays on login page if user is not confirmed'</span> <span class="k">do</span>
      <span class="n">user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">=</span> <span class="kp">false</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
      <span class="n">post</span> <span class="s1">'sessions/create'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'stays on login page if user has wrong password'</span> <span class="k">do</span>
      <span class="n">user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">=</span> <span class="kp">true</span>
      <span class="n">user</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s1">'correct'</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
      <span class="n">post</span> <span class="s1">'sessions/create'</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">'wrong'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'redirects to home for confirmed user and correct password'</span> <span class="k">do</span>
      <span class="n">user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">=</span> <span class="kp">true</span>
      <span class="n">user</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s1">'correct'</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
      <span class="n">post</span> <span class="s1">'sessions/create'</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">'correct'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"DELETE /logout"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s1">'empty the current session'</span>
    <span class="n">xit</span> <span class="s1">'redirects to homepage if user is logging out'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We are using <a href="http://www.relishapp.com/rspec/rspec-mocks/v/3-3/docs" rel="noopener">method stubs</a><sup id="cha-2_footnote-ref-17" class="footnote"><a href="#cha-2_footnote-17">17</a></sup> to make test what we want with the <code>expect(User).to receive(:find_by_email).and_return(false)</code><sup id="cha-2_footnote-ref-18" class="footnote"><a href="#cha-2_footnote-18">18</a></sup> method.<span class="intersentencespace"></span> So we stimulate the actual application call <code>find_by_email</code> in our application and preventing our tests from hitting the database and making it faster.<span class="intersentencespace"></span> Beside we are using <a href="https://relishapp.com/rspec/rspec-core/v/3-6/docs/pending-and-skipped-examples/skip-examples#temporarily-skipping-by-prefixing-`it`,-`specify`,-or-`example`-with-an-x" rel="noopener">xit</a> to temporarily disable tests.</p>
<p>Here is the code for our session controller to make the tests “green”:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/session.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>

  <span class="n">get</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/login"</span> <span class="k">do</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>

  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">==</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
      <span class="n">redirect</span> <span class="s1">'/'</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/logout'</span> <span class="k">do</span>
  <span class="k">end</span>

<span class="k">end</span>
</pre></div></div>
<p>When I started the tests I got some weird error messages of calling a method <code>user.save</code> on a nil object when I started writing the test.<span class="intersentencespace"></span> Do you remember the <code>UserObserver</code>?<span class="intersentencespace"></span> Exactly, this tiny piece of code is also activated for our tests and since we disable sending mails with the <code>set :delivery_method, :test</code> settings in <code>app.rb</code> I never received an mails.<span class="intersentencespace"></span> The solution to this problem was to add an option to in the <code>spec_helper.rb</code> to disable the observers:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/spec_helper.rb</span>
<span class="o">...</span>
<span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">conf</span><span class="o">|</span>
  <span class="n">conf</span><span class="o">.</span><span class="n">before</span> <span class="k">do</span>
    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">observers</span><span class="o">.</span><span class="n">disable</span> <span class="ss">:all</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Running our tests:</p>
<div class="code"><div class="highlight"><pre><span></span>$ rspec spec/app/controllers/sessions_controller_spec.rb


SessionsController
  GET /login
    load the login page
  POST /sessions/create
    stays on login page <span class="k">if</span> user is not found <span class="o">(</span>FAILED - <span class="m">1</span><span class="o">)</span>
    stays on login page <span class="k">if</span> user is not confirmed <span class="o">(</span>FAILED - <span class="m">2</span><span class="o">)</span>
    stays on login page <span class="k">if</span> user has wrong password <span class="o">(</span>FAILED - <span class="m">3</span><span class="o">)</span>
    redirects to home <span class="k">for</span> confirmed user and correct password <span class="o">(</span>FAILED - <span class="m">4</span><span class="o">)</span>
  DELETE /logout
    empty the current session <span class="o">(</span>PENDING: Temporarily skipped with xit<span class="o">)</span>
    redirects to homepage <span class="k">if</span> user is logging out <span class="o">(</span>PENDING: Temporarily skipped <span class="se">\</span>
      with xit<span class="o">)</span>

Pending: <span class="o">(</span>Failures listed here are expected and <span class="k">do</span> not affect your suite<span class="s1">'s \</span>
<span class="s1">  status)</span>
<span class="s1">    ...</span>

<span class="s1">Failures:</span>

<span class="s1">  1) SessionsController POST /sessions/create stay on page if user is not found</span>
<span class="s1">     Failure/Error: expect(last_response).to be_ok</span>
<span class="s1">       expected `#&lt;Rack::MockResponse:0xacd2ddc @original_headers={"Content-Type"=&gt;</span>
<span class="s1">       "text/plain", "X-Content-Type-Options"=&gt;"nosniff", "Set-Cookie"=&gt;"rack.</span>
<span class="s1">       session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiRTlkOWJjYWM3YmQ1MDg2ZmFmMzk3%</span>
<span class="s1">       0AMmNmZTE4M2IyMmUyYjQ5YzRiYzNmZjg4ODNmYjcwODZkMTc5NjM4NTJh</span>
<span class="s1">       M2MG%0AOwBGSSIJY3NyZgY7AEZJIiVhM2JhMWZmMjFkNjg1MDMzODczMjFjYWYxNTBi%</span>
<span class="s1">       0AOWVkOAY7AEZJIg10cmFja2luZwY7AEZ7B0kiFEhUVFBfVVNFUl9BR0VOVAY7</span>
<span class="s1">       %0AAFRJIi1kYTM5YTNlZTVlNmI0YjBkMzI1NWJmZWY5NTYwMTg5MGFmZDgwNzA5</span>
<span class="s1">       %0ABjsARkkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsAVEkiLWRhMzlhM2VlNWU2%</span>
<span class="s1">       0AYjRiMGQzMjU1YmZlZjk1NjAxODkwYWZkODA3MDkGOwBG%0A--</span>
<span class="s1">       d6e98e46cbddb5ab1287ac6bc9fba47bcfb2724f; path=/; HttpOnly"},</span>
<span class="s1">       @errors="", @body_string=nil, @status=403, @header={"Content-Type"=&gt;"text/plain"</span>
<span class="s1">       , "X-Content-Type-Options"=&gt;"nosniff", "Set-Cookie"=&gt;</span>
<span class="s1">       "rack.session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiRTlkOWJjYWM3YmQ1MDg2ZmFmMzk3</span>
<span class="s1">       %0AMmNmZTE4M2IyMmUyYjQ5YzRiYzNmZjg4ODNmYjcwODZkMTc5NjM4NTJhM2MG</span>
<span class="s1">       %0AOwBGSSIJY3NyZgY7AEZJIiVhM2JhMWZmMjFkNjg1MDMzODczMjFjYWYxNTBi%</span>
<span class="s1">       0AOWVkOAY7AEZJIg10cmFja2luZwY7AEZ7B0kiFEhUVFBfVVNFUl9BR0VOVAY7</span>
<span class="s1">       %0AAFRJIi1kYTM5YTNlZTVlNmI0YjBkMzI1NWJmZWY5NTYwMTg5MGFmZDgwNzA5</span>
<span class="s1">       %0ABjsARkkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsAVEkiLWRhMzlhM2VlNWU2</span>
<span class="s1">       %0AYjRiMGQzMjU1YmZlZjk1NjAxODkwYWZkODA3MDkGOwBG%0A--</span>
<span class="s1">       d6e98e46cbddb5ab1287ac6bc9fba47bcfb2724f; path=/; HttpOnly",</span>
<span class="s1">       "Content-Length"=&gt;"9"}, @chunked=false,</span>
<span class="s1">       @writer=#&lt;Proc:0xacd2cb0@/home/wm/.rvm/gems/ruby-2.2.1/gems</span>
<span class="s1">       /rack-1.5.5/lib/rack/response.rb:27 (lambda)&gt;, @block=nil,</span>
<span class="s1">       @length=9, @body=["Forbidden"]&gt;.ok?` to return true, got false</span>
<span class="s1">       # ./spec/app/controllers/sessions_controller_spec.rb:18:in `block</span>
<span class="s1">       (3 levels) in &lt;top (required)&gt;'</span>
...

Finished in <span class="m">0</span>.38537 seconds <span class="o">(</span>files took <span class="m">0</span>.74964 seconds to load<span class="o">)</span>
<span class="m">8</span> examples, <span class="m">5</span> failures, <span class="m">2</span> pending
...
</pre></div></div>
<p>The part of the tests with <code>POST :create.to be_ok</code> are failing because of <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino%2FHelpers%2FFormHelpers%2FSecurity:csrf_token_field" rel="noopener">Padrinos csrf token</a>.</p>
<div class="aside" id="box-csrf"><div class="heading"><span class="number">Box 2.15.</span> <span class="description">CSRF (Cross-site request forgery)</span>

</div>
<p><a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery" rel="noopener">CSRF</a>
is a malicious exploit of a website where unauthorized commands are transmitted from a user that the web application trusts.<span class="intersentencespace"></span> Those commands can be hidden
image tags, JavaScript XMLHttpRequests or hidden forms.<span class="intersentencespace"></span> To protect against those attacks, web applications are embedding
additional authentication data into requests to detect requests from unauthorized locations.</p>
<p>How does Padrino protects against CSRF?</p>
<p>If you take a look into <code>config/apps.rb</code> you can see the following entry:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="no">Padrino</span><span class="o">.</span><span class="n">configure_apps</span> <span class="k">do</span>
  <span class="c1"># enable :sessions</span>
  <span class="n">set</span> <span class="ss">:session_secret</span><span class="p">,</span> <span class="s1">'6a3ec199b53b002a3bfaf60'</span> <span class="o">+</span>
    <span class="s1">'c746b9182c095950b41f182790a81a0e36d96884'</span>
<span class="k">end</span>
</pre></div></div>
<p>This token is used to generate the hidden authenticity token in forms with the help of the current session.<span class="intersentencespace"></span> Start your application and take a look into the HTML <a href="http://localhost:3000/login" rel="noopener">http://localhost:3000/login</a>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">form</span> <span class="na">action</span><span class="o">=</span><span class="s">"/sessions/create"</span> <span class="na">accept-charset</span><span class="o">=</span><span class="s">"UTF-8"</span> <span class="na">method</span><span class="o">=</span><span class="s">"post"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"hidden"</span> <span class="na">name</span><span class="o">=</span><span class="s">"authenticity_token"</span>
    <span class="na">value</span><span class="o">=</span><span class="s">"068aa59cb97beaff2038b403ac9946d7"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"email"</span><span class="p">&gt;</span>Email: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"text"</span> <span class="na">name</span><span class="o">=</span><span class="s">"email"</span> <span class="p">/&gt;</span>

  <span class="p">&lt;</span><span class="nt">label</span> <span class="na">for</span><span class="o">=</span><span class="s">"password"</span><span class="p">&gt;</span>Password: <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"password"</span> <span class="na">name</span><span class="o">=</span><span class="s">"password"</span> <span class="p">/&gt;</span>

  <span class="p">&lt;</span><span class="nt">label</span> <span class="na">class</span><span class="o">=</span><span class="s">"checkbox"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"checkbox"</span> <span class="na">name</span><span class="o">=</span><span class="s">"remember_me"</span> <span class="na">value</span><span class="o">=</span><span class="s">"1"</span> <span class="p">/&gt;</span> Remember me
  <span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">"/password_forget"</span><span class="p">&gt;</span>forget password?<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"submit"</span> <span class="na">value</span><span class="o">=</span><span class="s">"Sign up"</span> <span class="na">class</span><span class="o">=</span><span class="s">"btn btn-primary"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
</pre></div></div>
<p>The <code>authenticity_token</code> is 068aa59cb97beaff2038b403ac9946d7 and is calculated from the current session.<span class="intersentencespace"></span> Fill in the form without submitting the data.<span class="intersentencespace"></span> Now stop the app, change the value of <code>session_secret</code> in the <code>config/apps.rb</code> file and start the app again.(You can now check value of <code>"authenticity_token"</code> in a new tab of the <a href="http://localhost:3000/login" rel="noopener">http://localhost:3000/login</a> page and see that it is different).<span class="intersentencespace"></span> If you now subm the data in the first tab you will get a <code>Forbidden</code> - that’s how CSRF works in Padrino.</p>
<p>You can get Padrino’s reaction of this attack in the log under:</p>
<div class="code"><div class="highlight"><pre><span></span>   WARN -  attack prevented by Padrino::AuthenticityToken
  DEBUG -      POST <span class="o">(</span><span class="m">0</span>.0050s<span class="o">)</span> /sessions/create - <span class="m">403</span> Forbidden
</pre></div></div>
<p>You can read more <a href="https://stackoverflow.com/questions/941594/understanding-the-rails-authenticity-token/1571900#1571900" rel="noopener">details about CSRF under stackoverflow thread</a>.<span class="intersentencespace"></span></p>

</div><p>To make the tests running, you need to disable them for the test environment:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/app.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span> <span class="o">&lt;</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Application</span>
  <span class="o">...</span>

  <span class="n">configure</span> <span class="ss">:test</span> <span class="k">do</span>
    <span class="n">set</span> <span class="ss">:protect_from_csrf</span><span class="p">,</span> <span class="kp">false</span>
  <span class="k">end</span>

  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Before going on with implementing the logout action we need to think what happened after we login.<span class="intersentencespace"></span> We have to find a mechanism to enable the information of the logged in user in all our controllers and views.<span class="intersentencespace"></span> We will do it with sessions helper.<span class="intersentencespace"></span> Let’s look into this file:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/helpers/sessions_helper.rb</span>

<span class="c1"># Helper methods defined here can be accessed in any controller or view in</span>
<span class="c1"># the application</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span>
    <span class="k">module</span> <span class="nn">SessionsHelper</span>
      <span class="c1"># def simple_helper_method</span>
      <span class="c1"># ...</span>
      <span class="c1"># end</span>
    <span class="k">end</span>

    <span class="n">helpers</span> <span class="no">SessionsHelper</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Yeah, Padrino prints the purpose of this new file and it says what we want to do.<span class="intersentencespace"></span> Let’s implement the main
features<sup id="cha-2_footnote-ref-19" class="footnote"><a href="#cha-2_footnote-19">19</a></sup>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/helpers/session_helper.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span>
    <span class="k">module</span> <span class="nn">SessionsHelper</span>
      <span class="k">def</span> <span class="nf">current_user</span><span class="o">=</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">current_user</span>
        <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span><span class="p">)</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">current_user?</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">user</span> <span class="o">==</span> <span class="n">current_user</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
        <span class="nb">self</span><span class="o">.</span><span class="n">current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">sign_out</span>
        <span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:current_user</span><span class="p">)</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">signed_in?</span>
        <span class="o">!</span><span class="n">current_user</span><span class="o">.</span><span class="n">nil?</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">helpers</span> <span class="no">SessionsHelper</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>There’s a lot of stuff going on in this helper:</p>
<ul>
<li><code>current_user</code>: Uses the <code>||=</code> notation.<span class="intersentencespace"></span> If the left hand-side isn’t initialized, initialize the left hand-side with the right hand-side.<span class="intersentencespace"></span>
</li>
<li><code>current_user?</code>: Checks if the passed in user is the currently logged in user.<span class="intersentencespace"></span>
</li>
<li><code>sign_in</code>: Uses the global <a href="http://www.sinatrarb.com/faq.html#sessions" rel="noopener">session</a> method use the user-id as login information
</li>
<li><code>sign_out</code>: Purges the <code>:current_user</code> field from our session.<span class="intersentencespace"></span>
</li>
<li><code>signed_in?</code>: We will use application to display special actions which should only be available for authenticated users.<span class="intersentencespace"></span>
</li></ul>
<div class="aside" id="box-why-sessions"><div class="heading"><span class="number">Box 2.16.</span> <span class="description">Why Sessions and how does sign_out work?</span>

</div>
<p>When you request an URL in your browser, you are using the HTTP/HTTPS protocol.<span class="intersentencespace"></span> This protocol is stateless that means that it doesn’t save the state in which you are in your application.<span class="intersentencespace"></span> Web applications implement states with one of the following mechanisms: hidden variables in forms when sending data, cookies, or query strings (e.g.<span class="intersentencespace"></span> <a href="http://localhost:3000/login?user=test&amp;password=test" rel="noopener">http://localhost:3000/login?user=test&amp;password=test</a>).</p>
<p>We are going to use cookies to save if a user is logged in and saving the user-id in our session cookies under the <code>:current_user</code> key.<span class="intersentencespace"></span> Be aware, that cookies are managed by the browser and not the server.</p>
<p>The <code>delete</code> method does the following: It will look into the last request in your application inside the session information hash and delete the <code>:current_user</code> key.</p>
<p>If you want to explore more of the internal of an application I highly recommend you <a href="https://github.com/pry/pry" rel="noopener">pry gem</a>.<span class="intersentencespace"></span> You can throw in at any part of your application <code>binding.pry</code> and have full access to all variables.</p>

</div><p>Now we are in a position to write tests for our <code>:destroy</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controller/sessions_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/sessions"</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">describe</span> <span class="s2">"POST /sessions/create"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'redirects to home for confirmed user and correct password'</span> <span class="k">do</span>
      <span class="n">login_user</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="o">...</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"DELETE /logout "</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'empty the current session'</span> <span class="k">do</span>
      <span class="n">login_user</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">delete</span> <span class="s1">'/logout'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">'rack.session'</span><span class="o">][</span><span class="ss">:current_user</span><span class="o">]</span><span class="p">)</span>
        <span class="o">.</span><span class="n">to</span> <span class="n">be_nil</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'redirects to homepage if user is logging out'</span> <span class="k">do</span>
      <span class="n">delete</span> <span class="s1">'/logout'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'You have successfully logged out.'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="kp">private</span>
<span class="k">def</span> <span class="nf">login_user</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
  <span class="n">user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">=</span> <span class="kp">true</span>
  <span class="n">user</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s1">'correct'</span>
  <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
  <span class="n">post</span> <span class="s1">'sessions/create'</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">'correct'</span>
  <span class="n">expect</span><span class="p">(</span><span class="n">last_request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">'rack.session'</span><span class="o">][</span><span class="ss">:current_user</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_nil</span>
<span class="k">end</span>
</pre></div></div>
<p>We use the <a href="https://github.com/brynary/rack-test/blob/master/lib/rack/mock_session.rb#L48" rel="noopener">last_request method</a> to access to <a href="http://rubydoc.info/github/rack/rack/master/Rack/Session/Abstract/SessionHash" rel="noopener">Rack’s SessionHash</a> information.</p>
<p>And finally the implementation of the code that make our tests green:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/session.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/logout'</span> <span class="k">do</span>
    <span class="n">sign_out</span>
    <span class="n">redirect</span> <span class="s1">'/'</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'You have successfully logged out.'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We are using the <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Flash/Storage" rel="noopener">flash storage</a> to save information which is part of the session.<span class="intersentencespace"></span> We will latter use the <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Flash/Helpers#flash-instance_method" rel="noopener">flash method</a> to access set a <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Flash/Storage#notice-instance_method" rel="noopener">notice</a> information.</p>
<p>What we forget due to this point is to make use of the <code>sign_in(user)</code> method in our session <code>:create</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controller/session.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="o">...</span>
    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">==</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
      <span class="n">sign_in</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">redirect</span> <span class="s1">'/'</span>
      <span class="o">...</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>How can we test now our logic in the view?<span class="intersentencespace"></span> The main application layout should have a “Login” and “Logout” link according to the status of the user:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/application.rb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">  &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/head&gt;</span>
<span class="x">&lt;body&gt;</span>
<span class="x">  &lt;nav class="navbar"&gt;</span>
<span class="x">    &lt;div class="container"&gt;</span>
<span class="x">      ...</span>
<span class="x">      &lt;div id="navbarMenu" class="navbar-menu"&gt;</span>
<span class="x">        &lt;div class="navbar-end"&gt;</span>
<span class="x">          &lt;div class="tabs is-right"&gt;</span>
<span class="x">            &lt;ul&gt;</span>
<span class="x">              ...</span>
<span class="x">              </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">signed_in?</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;li&gt;</span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Logout'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:destroy</span><span class="p">,\</span>
                  <span class="ss">:authenticity_token</span> <span class="o">=&gt;</span> <span class="n">session</span><span class="o">[</span><span class="ss">:csrf</span><span class="o">]</span><span class="p">),\</span>
                  <span class="ss">:method</span> <span class="o">=&gt;</span> <span class="ss">:delete</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;/li&gt;</span>
<span class="x">            </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;li&gt;</span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Login'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              &lt;/li&gt;</span>
<span class="x">            </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;/ul&gt;</span>
<span class="x">          &lt;/div&gt;</span>
<span class="x">        &lt;/div&gt;</span>
<span class="x">      &lt;/div&gt;</span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/nav&gt;</span>
<span class="x">  &lt;div class="container"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>
<span class="x">&lt;/body&gt;</span>
</pre></div></div>
<p>Please note that we have to pass the <code>authenticity_token</code> with the saved value of <code>csrf</code> for security reasons for security reasons (check <a href="job_vacancy_application_fragment.xhtml#box-csrf" class="hyperref">box <span class="ref">2.15</span></a>).<span class="intersentencespace"></span> Please note that we have to pass method <code>:delete</code> here because we are not in a form.</p>
<p>The HTTP specification only understands GET and POST in the &lt;form&gt; method attribute.<span class="intersentencespace"></span> How can we solve this?<span class="intersentencespace"></span> We need to use a hidden form with the put method:</p>
<p>With the change above we changed the default “Registration” entry in our header navigation to “Login”.<span class="intersentencespace"></span> We will add the link to the registration form now in the ‘session/new’ view:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/sessions/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Login&lt;/h1&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_tag</span> <span class="s1">'/sessions/create'</span> <span class="k">do</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">label_tag</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">text_field_tag</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">label_tag</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">password_field_tag</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">submit_tag</span> <span class="s2">"Sign up"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">New? </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Register'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<div class="aside" id="box-no-hard-coded-urls"><div class="heading"><span class="number">Box 2.17.</span> <span class="description">No hard coded URLs for controller routes</span>

</div>
<p>The line above with <code>&lt;% form_tag '/sessions/create' do %&gt;</code> is not a good solution.<span class="intersentencespace"></span> If you are changing the mapping inside the controller, you have to change the hard coded path manually.</p>
<p>A better approach is to reference the controller and action within the <code>url</code> method with <code>url(:sessions, :create)</code>.<span class="intersentencespace"></span></p>

</div><p>Here we are using the <a href="http://padrinorb.com/guides/application-helpers/form-helpers/#list-of-form-helpers" rel="noopener">form_tag</a> instead of the <code>form_for</code> tag because we don’t want to render information about a certain model.</p>
<p>We want to use the information of the session form to find a user in our database.<span class="intersentencespace"></span> We can use the submitted inputs with <code>params[:email]</code> and <code>params[:password]</code> in the <code>:create</code> action in our sessions controller.</p>
<p>What is if the given parameters does not match?<span class="intersentencespace"></span> The basic idea is to pass a variable to the rendering of method which says if we have an error or not and display the message accordingly.<span class="intersentencespace"></span> To handle this we are using the <code>:locals</code> which allows us to use to create customized params in our views:
Local variables accessible in the partial
option to create customized params for your views:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/sessions.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>
  <span class="n">get</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/login"</span> <span class="k">do</span>
    <span class="n">render</span> <span class="s1">'new'</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="kp">false</span> <span class="p">}</span>
  <span class="k">end</span>

  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">==</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
      <span class="n">sign_in</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">redirect</span> <span class="s1">'/'</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we can use the <code>error</code> variable in our view:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/sessions/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Login&lt;/h1&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_tag</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">error</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;article class="message is-danger"&gt;</span>
<span class="x">      &lt;div class="message-header"&gt;</span>
<span class="x">        &lt;p&gt;Error - Your Email and/or Password is wrong!&lt;/p&gt;</span>
<span class="x">      &lt;/div&gt;</span>
<span class="x">    &lt;/article&gt;</span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">...</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">New? </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Register'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>The last thing we want to is to give the user feedback about what the recently action.<span class="intersentencespace"></span> Like that it would be nice to give feedback of the success of the logged and logged out action.<span class="intersentencespace"></span> We can do this with short flash messages above our application which will fade away after a certain amount of time.<span class="intersentencespace"></span> To do this we can use <a href="http://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Flash/Helpers#flash-instance_method" rel="noopener">Padrino’s flash mechanism</a><sup id="cha-2_footnote-ref-20" class="footnote"><a href="#cha-2_footnote-20">20</a></sup></p>
<p>And here is the implementation of the code:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">&lt;head&gt;</span>
<span class="x">  &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'/assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/head&gt;</span>
<span class="x">&lt;body&gt;</span>
<span class="x">  ...</span>
<span class="x">  &lt;div class="container"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="o">!</span><span class="n">flash</span><span class="o">.</span><span class="n">empty?</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">flash</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="ss">:notice</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        &lt;article class="message is-success" id="flash"&gt;</span>
<span class="x">          &lt;div class="message-header"&gt;</span>
<span class="x">            </span><span class="cp">&lt;%=</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">          &lt;/div&gt;</span>
<span class="x">        &lt;/article&gt;</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>
<span class="x">  ...</span>
<span class="x">&lt;/body&gt;</span>
</pre></div></div>
<p>Next we need implement the flash messages in our session controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/sessions.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">==</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
      <span class="n">sign_in</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">redirect</span> <span class="s1">'/'</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'You have successfully logged out.'</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>If you now login successfully you will see the message but it will not go away.<span class="intersentencespace"></span> We will use jQuery’s <a href="http://api.jquery.com/fadeOut" rel="noopener">fadeOut method</a> to get rid of the message.</p>
<p>This is the first time we writing our own customized JavaScript, let’s create the inline with the following content:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;!DOCTYPE html&gt;</span>
<span class="x">&lt;html lang="en-US"&gt;</span>
<span class="x">&lt;head&gt;</span>
<span class="x">  &lt;title&gt;Job Vacancy - find the best jobs&lt;/title&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s1">'../assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">'../assets/application'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/head&gt;</span>
<span class="x">&lt;body&gt;</span>
<span class="x">  ...</span>
<span class="x">  &lt;div class="container"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="o">!</span><span class="n">flash</span><span class="o">.</span><span class="n">empty?</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">flash</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="ss">:notice</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        &lt;article class="message is-success" id="flash"&gt;</span>
<span class="x">          &lt;div class="message-header"&gt;</span>
<span class="x">            </span><span class="cp">&lt;%=</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">          &lt;/div&gt;</span>
<span class="x">        &lt;/article&gt;</span>
<span class="x">        &lt;script type="text/javascript"&gt;</span>
<span class="x">          $(function(){</span>
<span class="x">              $("#flash").fadeOut(3000);</span>
<span class="x">          });</span>
<span class="x">        &lt;/script&gt;</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>
<span class="x">&lt;/body&gt;</span>
</pre></div></div>
</div><div id="cid12" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid12" class="heading hyperref"><span class="number">2.6 </span>User Profile</a></h2>
<p class="noindent">To update a user profile we need the <code>edit</code> and <code>update</code> action.<span class="intersentencespace"></span> Let’s beginning with writing tests for the <code>edit</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controller/users_controller_spec.rb</span>

<span class="o">...</span>

<span class="n">describe</span> <span class="s2">"GET /users/:id/edit"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user_second</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'redirects to /login if user is not signed in'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
    <span class="n">get</span> <span class="s1">'/users/-1/edit'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'redirects to /login signed in user tries to call a different user'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
      <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">user_second</span><span class="p">)</span>
    <span class="n">get</span> <span class="s2">"/users/</span><span class="si">#{</span><span class="n">user_second</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/edit"</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'renders the view for editing a user'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
      <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span>
    <span class="n">get</span> <span class="s2">"/users/</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/edit"</span><span class="p">,</span> <span class="p">{},</span> <span class="s1">'rack.session'</span> <span class="o">=&gt;</span>
      <span class="p">{</span> <span class="ss">current_user</span><span class="p">:</span> <span class="n">user_second</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'Edit your profile'</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The fist interesting part above is the <code>and_return(user, user_second)</code> call.<span class="intersentencespace"></span> This is the way to return different return
values when a method is called several times - the number of arguments is the number of the functions call.<span class="intersentencespace"></span> The second
thing is that we check the <code>last_response.header</code> and <code>last_response.body</code>.<span class="intersentencespace"></span> A typical
<a href="http://www.rubydoc.info/github/rack/rack/Rack/MockResponse" rel="noopener">Rack::MockResponse</a> looks like the
following:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="o">=&gt;</span> <span class="c1">#&lt;Rack::MockResponse:0xabd6f00</span>
 <span class="vi">@block</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span>
 <span class="vi">@body</span><span class="o">=[]</span><span class="p">,</span>
 <span class="vi">@body_string</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span>
 <span class="vi">@chunked</span><span class="o">=</span><span class="kp">false</span><span class="p">,</span>
 <span class="vi">@errors</span><span class="o">=</span><span class="s2">""</span><span class="p">,</span>
 <span class="vi">@header</span><span class="o">=</span>
  <span class="p">{</span><span class="s2">"Content-Type"</span><span class="o">=&gt;</span><span class="s2">"text/html;charset=utf-8"</span><span class="p">,</span>
   <span class="s2">"Location"</span><span class="o">=&gt;</span><span class="s2">"http://example.org/login"</span><span class="p">,</span>
   <span class="s2">"Content-Length"</span><span class="o">=&gt;</span><span class="s2">"0"</span><span class="p">,</span>
   <span class="s2">"X-XSS-Protection"</span><span class="o">=&gt;</span><span class="s2">"1; mode=block"</span><span class="p">,</span>
   <span class="s2">"X-Content-Type-Options"</span><span class="o">=&gt;</span><span class="s2">"nosniff"</span><span class="p">,</span>
   <span class="s2">"X-Frame-Options"</span><span class="o">=&gt;</span><span class="s2">"SAMEORIGIN"</span><span class="p">,</span>
   <span class="s2">"Set-Cookie"</span><span class="o">=&gt;</span>
    <span class="s2">"rack.session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiRTk3ZjI...; path=/; HttpOnly"</span><span class="p">},</span>
 <span class="vi">@length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
 <span class="vi">@original_headers</span><span class="o">=</span>
  <span class="p">{</span><span class="s2">"Content-Type"</span><span class="o">=&gt;</span><span class="s2">"text/html;charset=utf-8"</span><span class="p">,</span>
   <span class="s2">"Location"</span><span class="o">=&gt;</span><span class="s2">"http://example.org/login"</span><span class="p">,</span>
   <span class="s2">"Content-Length"</span><span class="o">=&gt;</span><span class="s2">"0"</span><span class="p">,</span>
   <span class="s2">"X-XSS-Protection"</span><span class="o">=&gt;</span><span class="s2">"1; mode=block"</span><span class="p">,</span>
   <span class="s2">"X-Content-Type-Options"</span><span class="o">=&gt;</span><span class="s2">"nosniff"</span><span class="p">,</span>
   <span class="s2">"X-Frame-Options"</span><span class="o">=&gt;</span><span class="s2">"SAMEORIGIN"</span><span class="p">,</span>
   <span class="s2">"Set-Cookie"</span><span class="o">=&gt;</span>
    <span class="s2">"rack.session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiRTk3ZjI...; path=/; HttpOnly"</span><span class="p">},</span>
 <span class="vi">@status</span><span class="o">=</span><span class="mi">302</span><span class="p">,</span>
 <span class="vi">@writer</span><span class="o">=</span>
  <span class="c1">#&lt;Proc:0xabd6d0c@/home/wm/.rvm/gems/ruby-2.2.1/</span>
  <span class="c1"># gems/rack-1.5.5/lib/rack/response.rb:27 (lambda)&gt;&gt;</span>
</pre></div></div>
<p>Let’s look at the implementation:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="n">before</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span>  <span class="k">do</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span> <span class="k">unless</span> <span class="n">signed_in?</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="n">redirect</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span> <span class="k">unless</span> <span class="n">current_user?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">...</span>

  <span class="n">get</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/users/:id/edit'</span> <span class="k">do</span>
    <span class="n">render</span> <span class="s1">'edit'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We don’t want that everybody can edit the profile for other users.<span class="intersentencespace"></span> Before we are going to call these actions we set a
<a href="http://padrinorb.com/guides/controllers/route-filters/" rel="noopener">route filter</a><sup id="cha-2_footnote-ref-21" class="footnote"><a href="#cha-2_footnote-21">21</a></sup>.<span class="intersentencespace"></span> They are
evaluated before each requests for the given actions.<span class="intersentencespace"></span> In our case we are using a <strong>before route filter</strong>.</p>
<p>For the <code>get :edit</code> action we are using <a href="http://padrinorb.com/guides/controllers/routing/#namespaced-route-aliases" rel="noopener">namespaced route aliases</a>.<span class="intersentencespace"></span> They have the advantage that you can refer to them with the <code>url_for</code> (which we will see
later) method.</p>
<p>Let’s write the tests for the <code>update</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/users_controller_spec.rb</span>

<span class="o">...</span>
<span class="n">describe</span> <span class="s2">"PUT /users/:id"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user_second</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:put_user</span><span class="p">)</span> <span class="p">{</span>
    <span class="p">{</span><span class="s1">'name'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
     <span class="s1">'email'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
     <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span>
     <span class="s1">'password_confirmation'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">password</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">describe</span> <span class="s2">"redirects to /login if"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'user is not signed in'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
      <span class="n">put</span> <span class="s1">'/users/1'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s2">"user is signed in and tries to call a different user"</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">user_second</span><span class="p">)</span>
      <span class="n">put</span> <span class="s2">"/users/1"</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"link to /edit"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'if user has valid account changes'</span> <span class="k">do</span>
      <span class="n">test_user</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">User</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">test_user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">put_user</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">test_user</span><span class="p">,</span> <span class="n">test_user</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/users/</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="n">put_user</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">'You have updated your profile.'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/edit'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'if user has not valid account changes'</span> <span class="k">do</span>
      <span class="n">put_user</span> <span class="o">=</span>
        <span class="p">{</span><span class="s1">'name'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
         <span class="s1">'email'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
         <span class="s1">'password'</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span>
         <span class="s1">'password_confirmation'</span> <span class="o">=&gt;</span> <span class="s1">'fake'</span>
        <span class="p">}</span>

      <span class="n">test_user</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">User</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">test_user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">put_user</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">test_user</span><span class="p">,</span> <span class="n">test_user</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/users/</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="n">put_user</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">'Your profile was not updated.'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/edit'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="o">...</span>
</pre></div></div>
<p>We are using <a href="https://relishapp.com/rspec/rspec-mocks/v/3-6/docs/basics/test-doubles" rel="noopener">test doubles</a>
is a simplified object which takes the place of another object in a spec.<span class="intersentencespace"></span> A test double is a plain Ruby object which is
the first step to define some fake methods for it.<span class="intersentencespace"></span> Since we don’t want to hit the a database, we can mock the
<code>update_attributes</code> method and can return what we need for our tests.</p>
<p>And the implementation:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/users.rb</span>

<span class="n">put</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/users/:id'</span> <span class="k">do</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

  <span class="n">route</span> <span class="o">=</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
    <span class="n">redirect</span> <span class="n">route</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'You have updated your profile.'</span>
  <span class="k">else</span>
    <span class="n">redirect</span> <span class="n">route</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'Your profile was not updated.'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Please note that the <a href="http://www.rubydoc.info/gems/activerecord/ActiveRecord%2FPersistence:update" rel="noopener">update_attributes</a> method is making a <a href="http://www.rubydoc.info/gems/activerecord/ActiveRecord%2FValidations:valid%3F" rel="noopener">valid?</a><span class="intersentencespace"></span> method before the changes are saved.</p>
<p>Making the <code>put :update </code> action pass in the view is a little bit tricky: The HTTP specification only understands <code>GET</code> and <code>POST</code> in the <code>&lt;form&gt;</code> method attribute.<span class="intersentencespace"></span> How can we solve this?<span class="intersentencespace"></span> We need to use a hidden form with the <code>put</code> method:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/users/edit.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h2&gt;Edit your profile&lt;/h2&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_for</span> <span class="vi">@user</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">),</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:put</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-error"</span><span class="p">,\</span>
      <span class="ss">prepend</span><span class="p">:</span> <span class="s2">"The name"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-error"</span><span class="p">,\</span>
      <span class="ss">prepend</span><span class="p">:</span> <span class="s2">"The email"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-error"</span><span class="p">,\</span>
      <span class="ss">prepend</span><span class="p">:</span> <span class="s2">"The password "</span><span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-error"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The password confirmation"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Save changes"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>You can specify the <a href="https://www.w3schools.com/tags/ref_httpmethods.asp" rel="noopener">HTTP methods</a> with <code>method: &lt;action&gt;</code>.<span class="intersentencespace"></span> So <code>method: :put</code> will be translated into:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">"hidden"</span> <span class="na">value</span><span class="o">=</span><span class="s">"put"</span> <span class="na">name</span><span class="o">=</span><span class="s">"_method"</span><span class="err">&lt;/</span><span class="na">input</span><span class="p">&gt;</span>
</pre></div></div>
<div id="sec-authorization" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#sec-authorization" class="heading hyperref"><span class="number">2.6.1 </span>Authorization</a></h3>
<p class="noindent">The controller actions are ready and we’ve used many method from the <code>session_helper.rb</code>.<span class="intersentencespace"></span> Before we add now the action for
signup and registration to the view, it’s time to test the helper from “Sessions” section  <a href="job_vacancy_application_fragment.xhtml#sec-sessions" class="hyperref"><span class="ref">2.5</span></a>.</p>
<p>Our generated helper spec has the following structure:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/helpers/sessions_helper.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">SessionsHelper</span> <span class="k">do</span>
  <span class="n">pending</span> <span class="s2">"add some examples to (or delete) </span><span class="si">#{</span><span class="bp">__FILE__</span><span class="si">}</span><span class="s2">"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:helpers</span><span class="p">){</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>
    <span class="n">before</span> <span class="p">{</span> <span class="n">helpers</span><span class="o">.</span><span class="n">extend</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">SessionsHelper</span> <span class="p">}</span>
    <span class="n">subject</span> <span class="p">{</span> <span class="n">helpers</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s2">"should return nil"</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="o">.</span><span class="n">foo</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_nil</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The new thing here is the <a href="https://relishapp.com/rspec/rspec-core/v/3-6/docs/subject/explicit-subject" rel="noopener">subject</a>.<span class="intersentencespace"></span> It describes a thing (object, class, method) under test.<span class="intersentencespace"></span> Because we are testing only one object here, the name <code>subject</code> is fine.<span class="intersentencespace"></span> If you’re handling several objects in a test, you can’t possibly guess what <code>subject</code> is because it is not intention revealing.<span class="intersentencespace"></span> For that case you better give the object the right name.</p>
<p>Padrino is requiring helpers automatically in the <code>spec_helper</code> file with the following line:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/spec_helper.rb</span>

<span class="o">...</span>

<span class="no">Dir</span><span class="o">[</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span> <span class="o">+</span> <span class="s1">'/../app/helpers/**/*.rb'</span><span class="p">)</span><span class="o">]</span>
  <span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="nb">method</span><span class="p">(</span><span class="ss">:require</span><span class="p">))</span>
<span class="o">...</span>
</pre></div></div>
<p>Here is the outline for the tests of the <code>session_helper.rb</code>:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/app/helpers/sessions_helper_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">SessionsHelper</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:session_helper</span><span class="p">)</span> <span class="p">{</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">extend</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">SessionsHelper</span><span class="p">}</span>

  <span class="n">subject</span> <span class="p">{</span> <span class="n">session_helper</span> <span class="p">}</span>

  <span class="n">describe</span> <span class="s2">"#current_user"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s2">"returns the current user if user is set"</span>
    <span class="n">xit</span> <span class="s2">"returns the current user from session"</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"#current_user?"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s2">"returns true if current user is logged in"</span>
    <span class="n">xit</span> <span class="s2">"returns false if user is not logged in"</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"#sign_in"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s2">"sets the current user to the signed in user"</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"#sign_out"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s2">"clears the current_user from the session"</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"#signed_in?"</span> <span class="k">do</span>
    <span class="n">xit</span> <span class="s2">"returns false if user is not logged in"</span>
    <span class="n">xit</span> <span class="s2">"returns true if user is logged in"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Please note that we will not test the <code>current_user=(user)</code> method because it is a setter method.</p>
<p>What we need to do now for our test is to mock a request and set the user id of some of our test user in the session hash.<span class="intersentencespace"></span> To create a new session we will use <a href="https://github.com/rack-test/rack-test/blob/master/lib/rack/test.rb#L25" rel="noopener">Rack::Test::Session</a> and mock the <code>last_request</code> method call:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/helpers/sessions_helper_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">SessionsHelper</span> <span class="k">do</span>

  <span class="o">...</span>
  <span class="n">describe</span> <span class="s2">"#current_user"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'returns the current user if user is set'</span> <span class="k">do</span>
      <span class="n">subject</span><span class="o">.</span><span class="n">current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">never</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="o">.</span><span class="n">current_user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">user</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'returns the current user from session'</span> <span class="k">do</span>
      <span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">1</span>
      <span class="n">client</span> <span class="o">=</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">Session</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
      <span class="n">client</span><span class="o">.</span><span class="n">get</span> <span class="s1">'/'</span><span class="p">,</span> <span class="p">{},</span> <span class="s1">'rack.session'</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">current_user</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:session</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="o">.</span><span class="n">current_user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">user</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>You can write the other tests as an exercise<sup id="cha-2_footnote-ref-22" class="footnote"><a href="#cha-2_footnote-22">22</a></sup> on your own.</p>
<p>Finally, we need to provide the edit link in the header navigation:</p>
<div class="code"><div class="highlight"><pre><span class="x"># app/views/application.erb</span>

<span class="x">&lt;nav class="navbar"&gt;</span>
<span class="x">  ...</span>
<span class="x">    &lt;div id="navbarMenu" class="navbar-menu"&gt;</span>
<span class="x">      &lt;div class="navbar-end"&gt;</span>
<span class="x">        &lt;div class="tabs is-right"&gt;</span>
<span class="x">            </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">signed_in?</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;li&gt;</span>
<span class="x">              </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Logout'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:destroy</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;/li&gt;</span>
<span class="x">            &lt;li&gt;</span>
<span class="x">              </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">                </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Edit Profile'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,\</span>
                  <span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">              </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;/li&gt;</span>
<span class="x">          </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;li&gt;</span>
<span class="x">              </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Login'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">            &lt;/li&gt;</span>
<span class="x">          </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">          &lt;/ul&gt;</span>
<span class="x">        &lt;/div&gt;</span>
<span class="x">      &lt;/div&gt;</span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="x">&lt;/nav&gt;</span>
</pre></div></div>
</div>
<div id="sec-remember_me_funcion" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#sec-remember_me_funcion" class="heading hyperref"><span class="number">2.6.2 </span>Remember Me Function</a></h3>
<p class="noindent">We are currently using the <code>sign_in</code> method from the session helper to login an user.<span class="intersentencespace"></span> But this is only valid for a session.<span class="intersentencespace"></span> What we need is something permanent.<span class="intersentencespace"></span> <a href="https://en.wikipedia.org/wiki/HTTP_cookie" rel="noopener">Cookies</a> are the perfect choice for this.<span class="intersentencespace"></span> We could use the <code>user_id</code> from the user as an unique token,
but this can be changed too easily.<span class="intersentencespace"></span> Creating an unique long <a href="https://en.wikipedia.org/wiki/Secure_Hash_Algorithms" rel="noopener">secure hash</a> is more secure.</p>
<p>Let’s create and run the migration for the authenticity token:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen migration AddAuthentityTokenToUsers authentity_token:string
     apply  orms/activerecord
    create  db/migrate/006_add_authentity_token_to_users.rb
$ padrino rake ar:migrate
<span class="o">=</span>&gt; Executing Rake ar:migrate ...
  DEBUG -   <span class="o">(</span><span class="m">0</span>.1ms<span class="o">)</span>  SELECT <span class="s2">"schema_migrations"</span>.<span class="s2">"version"</span>
    FROM <span class="s2">"schema_migrations"</span> ...
   INFO -  Migrating to AddAuthentityTokenFieldToUsers <span class="o">(</span><span class="m">6</span><span class="o">)</span>
   ...
</pre></div></div>
<div class="aside" id="box-cookies"><div class="heading"><span class="number">Box 2.18.</span> <span class="description">Cookies</span>

</div>
<p>HTTP is a <a href="http://en.wikipedia.org/wiki/Stateless_protocol" rel="noopener">stateless protocol</a> and cookies are a way
to save information sent from a website and store them in the browser.<span class="intersentencespace"></span> Each time the user visits the site again, the
browser sends the information back to server and notifies the server about the identity of the user.</p>
<p>A cookie consists of the following components:</p>
<ul>
<li>data with value - like id of user that the server wants to remember
</li>
<li>expiry date - without a date it’s a session cookie which exists only so long as the browser is open, otherwise it’s
permanent cookie
</li>
<li>path - scope of the cookie
</li>
<li>domain - valid for which domain
</li>
<li>secure - means your cookie will only be send to HTTPs
</li>
<li>HTPPOnly attribute - cookie is only accessable by the server so that no scripting languages like javascript are able to get the cookie data through document.cookie for example.<span class="intersentencespace"></span>
</li></ul>
<p>If you want to learn more about cookies and session please watch the talk about <a href="https://www.youtube.com/watch?v=mqUbnZIY3OQ" rel="noopener">“A Deep Dive Into Sessions”</a> by <a href="https://www.justinweiss.com/" rel="noopener">Justin Weiss</a>.</p>

</div><p>A way to create random strings in Ruby is to use the <a href="http://ruby-doc.org/stdlib-2.4.1/libdoc/securerandom/rdoc/SecureRandom.html" rel="noopener">SecureRandom class</a>.<span class="intersentencespace"></span> By using the <a href="http://www.rubydoc.info/docs/rails/ActiveRecord/Callbacks" rel="noopener">before_create callback</a>,
we create a token for each registered user<sup id="cha-2_footnote-ref-23" class="footnote"><a href="#cha-2_footnote-23">23</a></sup>.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># models/user.rb</span>

<span class="nb">require</span> <span class="s1">'securerandom'</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>

  <span class="n">before_create</span> <span class="ss">:generate_authentity_token</span>
  <span class="o">...</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">generate_authentity_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">authentity_token</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">base64</span><span class="p">(</span><span class="mi">64</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>To test the callback, we can use the <a href="http://ruby-doc.org/core-2.4.1/Object.html#method-i-send" rel="noopener">send method</a> to create our <code>generate_authentity_token</code> callback:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/models/user_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">describe</span> <span class="s2">"#generate_authentity_token"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'generates the authentity_token before user is saved'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span> <span class="p">{</span> <span class="kp">true</span> <span class="p">}</span>
      <span class="n">user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:generate_authentity_token</span><span class="p">)</span>
      <span class="n">user</span><span class="o">.</span><span class="n">save</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">authentity_token</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_empty</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Next it’s time to create the checkbox on the login page with help of the
<a href="http://www.rubydoc.info/gems/padrino-helpers/Padrino%2FHelpers%2FFormHelpers:check_box_tag" rel="noopener">check_box_tag</a>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> views/sessions/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Login&lt;/h1&gt;</span>

<span class="x">  ...</span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;label class="checkbox"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">check_box_tag</span> <span class="ss">:remember_me</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'checkbox'</span> <span class="cp">%&gt;</span><span class="x"> Remember me</span>
<span class="x">    &lt;/label&gt;</span>
<span class="x">  &lt;/div&gt;</span>
</pre></div></div>
<p>If the user clicks on the <em>Remember me</em> checkbox, it’s time for our session controller to create a cookie.<span class="intersentencespace"></span> We have to
modify our <code>create</code> action from the session controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/sessions.rb</span>

<span class="nb">require</span> <span class="s1">'securerandom'</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:sessions</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">confirmation</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">==</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:remember_me</span><span class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span><span class="p">)</span>
        <span class="n">token</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">hex</span>
        <span class="vi">@user</span><span class="o">.</span><span class="n">authentity_token</span> <span class="o">=</span> <span class="n">token</span>
        <span class="n">thirty_days</span> <span class="o">=</span> <span class="mi">30</span>
        <span class="n">response</span><span class="o">.</span><span class="n">set_cookie</span><span class="p">(</span><span class="s1">'permanent_cookie'</span><span class="p">,</span> <span class="p">{</span>
                      <span class="ss">value</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                      <span class="ss">expires</span><span class="p">:</span> <span class="p">(</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">+</span> <span class="n">thirty_days</span><span class="p">)</span><span class="o">.</span><span class="n">to_time</span><span class="p">,</span>
                      <span class="ss">domain</span><span class="p">:</span> <span class="s1">'jobvacancy.de'</span><span class="p">,</span>
                      <span class="ss">path</span><span class="p">:</span> <span class="s1">'/'</span><span class="p">,</span>
                      <span class="ss">httponly</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
                      <span class="ss">secure</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span>
                    <span class="p">})</span>
        <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
      <span class="k">end</span>

      <span class="n">sign_in</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">redirect</span> <span class="s1">'/'</span><span class="p">,</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'You have successfully logged in!'</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>First, we create a secure random hex value and assign to the <code>authentity_token</code> attribute to the user.<span class="intersentencespace"></span> Then we use the
<a href="http://www.rubydoc.info/github/rack/rack/Rack%2FResponse%2FHelpers:set_cookie" rel="noopener">set_cookie</a> method to
generate a cookie which is valid for thirty days.</p>
<p>When you login the next time into the application, click the remember me you checkbox.<span class="intersentencespace"></span> Stop and start the application
again, you will be logged in automatically for the next thirty days.<span class="intersentencespace"></span> You can inspect the cookies either in
<a href="https://www.mozilla.org/en-US/firefox/new" rel="noopener">Mozilla Firefox</a><sup id="cha-2_footnote-ref-24" class="footnote"><a href="#cha-2_footnote-24">24</a></sup>or <a href="https://www.google.com/chrome/browser/desktop/index.html" rel="noopener">Google Chrome</a><sup id="cha-2_footnote-ref-25" class="footnote"><a href="#cha-2_footnote-25">25</a></sup>.</p>
<p>The specs for the <code>post :create</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/sessions_controller_spec.rb</span>

<span class="o">...</span>

<span class="n">describe</span> <span class="s2">"POST :create"</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">it</span> <span class="s1">'redirects if user is correct and has permanent_cookie'</span> <span class="k">do</span>
    <span class="n">token</span> <span class="o">=</span> <span class="s1">'real'</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="s1">'User'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="p">{</span> <span class="mi">1</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:password</span><span class="p">)</span> <span class="p">{</span> <span class="s1">'secret'</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:confirmation</span><span class="p">)</span> <span class="p">{</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:authentity_token</span><span class="o">=</span><span class="p">)</span> <span class="p">{</span> <span class="n">token</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">SecureRandom</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:hex</span><span class="p">)</span>
      <span class="o">.</span><span class="n">at_least</span><span class="p">(</span><span class="ss">:once</span><span class="p">)</span> <span class="p">{</span> <span class="n">token</span> <span class="p">}</span>

    <span class="n">post</span> <span class="s1">'sessions/create'</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">'secret'</span><span class="p">,</span> <span class="ss">remember_me</span><span class="p">:</span> <span class="s1">'1'</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'You have successfully logged in!'</span><span class="p">)</span>

    <span class="n">cookie</span> <span class="o">=</span> <span class="n">last_response</span><span class="o">[</span><span class="s1">'Set-Cookie'</span><span class="o">]</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'permanent_cookie'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'path%3D%3E%22%2F%22%7D'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'domain%3D%3E%22jobvacancy.de'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'HttpOnly'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'secure'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">"expires="</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We can even do better with testing the cookie.<span class="intersentencespace"></span> Rack Test has a <a href="https://www.rubydoc.info/github/brynary/rack-test/Rack/Test/Cookie" rel="noopener">Rack::Test::Cookie</a> object which we can use to write our specs in a more readable way.<span class="intersentencespace"></span> All we need to do is to extract the values from <code>last_response['Set-Cookie']</code> and pass it’s properties as an input for the <code>Rack::Test::Cookie</code>.</p>
<p>Our input data from <code>last_response['Set-Cookie']</code> looks like the following:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="s2">"permanent_cookie=true; domain=jobvacancy.de; path=/; expires=Wed, \</span>
<span class="s2">13 Jun 2018 22:00:00 -0000; secure; HttpOnly</span><span class="se">\n</span><span class="s2">"</span> <span class="o">+</span> <span class="s2">"rack.session=\</span>
<span class="s2">BAh7CkkiD3Nlc3Npb25faWQGOgZFVE..."</span>
</pre></div></div>
<p>A first attempt may look like:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="o">[</span><span class="n">last_response</span><span class="o">[</span><span class="s1">'Set-Cookie'</span><span class="o">].</span><span class="n">lines</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
  <span class="n">cookie</span> <span class="o">=</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">Cookie</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">chomp</span><span class="p">)</span>
<span class="p">}</span><span class="o">]</span>
</pre></div></div>
<p>Nearly done.<span class="intersentencespace"></span> What would be nice is to have something like
<code>cookies_from_response[&lt;name-of-cookie)]</code><sup id="cha-2_footnote-ref-26" class="footnote"><a href="#cha-2_footnote-26">26</a></sup>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">cookies_from_response</span><span class="p">(</span><span class="n">response</span> <span class="o">=</span> <span class="n">last_response</span><span class="p">)</span>
  <span class="no">Hash</span><span class="o">[</span><span class="n">response</span><span class="o">[</span><span class="s2">"Set-Cookie"</span><span class="o">].</span><span class="n">lines</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
    <span class="n">cookie</span> <span class="o">=</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">Cookie</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">chomp</span><span class="p">)</span>
    <span class="o">[</span><span class="n">cookie</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">cookie</span><span class="o">]</span>
  <span class="p">}</span><span class="o">]</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we can write our specs in the following way:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/app/controllers/sessions_controller_spec.rb</span>

<span class="o">...</span>

<span class="n">describe</span> <span class="s2">"POST :create"</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">it</span> <span class="s1">'redirects if user is correct and has permanent_cookie'</span> <span class="k">do</span>
    <span class="n">token</span> <span class="o">=</span> <span class="s1">'real'</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="s1">'User'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="p">{</span> <span class="mi">1</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:password</span><span class="p">)</span> <span class="p">{</span> <span class="s1">'secret'</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:confirmation</span><span class="p">)</span> <span class="p">{</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:authentity_token</span><span class="o">=</span><span class="p">)</span> <span class="p">{</span> <span class="n">token</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="no">SecureRandom</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:hex</span><span class="p">)</span>
      <span class="o">.</span><span class="n">at_least</span><span class="p">(</span><span class="ss">:once</span><span class="p">)</span> <span class="p">{</span> <span class="n">token</span> <span class="p">}</span>

    <span class="n">post</span> <span class="s1">'sessions/create'</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">'secret'</span><span class="p">,</span> <span class="ss">remember_me</span><span class="p">:</span> <span class="s1">'1'</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'You have successfully logged in!'</span><span class="p">)</span>

    <span class="n">cookie</span> <span class="o">=</span> <span class="n">cookies_from_response</span><span class="o">[</span><span class="s1">'permanent_cookie'</span><span class="o">]</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="s1">'permanent_cookie'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">value</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">domain</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="s1">'jobvacancy.de'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">path</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">http_only?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">secure?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">cookie</span><span class="o">.</span><span class="n">expired?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eql</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<div class="aside" id="box-magic-numbers"><div class="heading"><span class="number">Box 2.19.</span> <span class="description">Magic Numbers</span>

</div>
<p>If you take a closer look at <code>thirty_days = 30</code> it might be better to put this in a configuration
file, where you define these values.<span class="intersentencespace"></span> This makes it in the later easier to changes the values (it is more readable and
fellow developers can easier read your code).<span class="intersentencespace"></span> As an exercise think of a place where you place a constant like
<code>JobVacancy::Configuration::COOKIE_MAX_DAYS_REMEMBER_ME</code>.<span class="intersentencespace"></span></p>

</div></div>
<div id="uid217" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid217" class="heading hyperref"><span class="number">2.6.3 </span>Password Forget</a></h3>
<p class="noindent">This chapter will be a combination of all the things we have learned so far.<span class="intersentencespace"></span> Until now you should be familiar with the commands of creating new controllers, edit views as well as create migration and new mail templates.<span class="intersentencespace"></span> Because repetition is good, we will go through the whole procedure again.</p>
<p>We are going to create a new controller for the password forget feature:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen controller PasswordForget get:new post:create get:edit post:update
    create  app/controllers/password_forget.rb
    create  app/views/password_forget
     apply  tests/rspec
    create  spec/app/controllers/password_forget_controller_spec.rb
    create  app/helpers/password_forget_helper.rb
     apply  tests/rspec
    create  spec/app/helpers/password_forget_helper_spec.rb
</pre></div></div>
<p>We have to create a <code>GET</code> <code>:action</code> and map it to <code>/password_forget</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/password_forget.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="n">get</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'password_forget'</span>  <span class="k">do</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>And the spec for the controller:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/password_forget"</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"GET /password_forget"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'renders new page'</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s1">'password_forget'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Forget Password'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>In the <code>new</code> action’s view we’ll create the form with the <a href="http://padrinorb.com/guides/application-helpers/form-helpers/#list-of-form-helpers" rel="noopener">form_tag</a> without a model that allows a user to enter their email address and request that their password is reset.<span class="intersentencespace"></span> The form looks like this:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;%#</span><span class="c"> app/views/password_forget/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h2&gt;Forget Password&lt;/h2&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_tag</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span> <span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">label_tag</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">text_field_tag</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">submit_tag</span> <span class="s2">"Reset password"</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>The idea behind the <code>POST</code> <code>:create</code> action is the following: We need to process the password-forget email and email instructions on how to reset password to the supplied email address.<span class="intersentencespace"></span> We don’t validate if the email address is correct, we don’t want to have malicious user to check if a user exists or not.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/password_forget.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">save_forget_password_token</span>
      <span class="c1"># here the deliver method will be called</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'success'</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>And the specs for the <code>create</code> part:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">describe</span> <span class="s2">"POST /password_forget/create"</span> <span class="k">do</span>
  <span class="n">describe</span> <span class="s2">"user is not found"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'it renders the success page'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
      <span class="n">post</span> <span class="s1">'/password_forget/create'</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">''</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password was reseted successfully'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"user is found"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'it send the password reset mail and render the success page'</span> <span class="k">do</span>
      <span class="n">expectedUser</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span>
                           <span class="no">User</span><span class="p">,</span>
                           <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">'Red Dead Redemption'</span><span class="p">,</span>
                           <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">'hallo@padrino.de'</span><span class="p">,</span>
                           <span class="ss">:password_reset_token</span> <span class="o">=&gt;</span> <span class="s1">'123'</span>
                           <span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">expectedUser</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save_forget_password_token</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span><span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'hallo@padrino.de'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">expectedUser</span><span class="p">)</span>

      <span class="n">post</span> <span class="s1">'/password_forget/create'</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">'hallo@padrino.de'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password was reseted successfully'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The <code>save_forget_password_token</code> method will generate a security token for the given user.<span class="intersentencespace"></span> The token should only valid for one hour.<span class="intersentencespace"></span> We need to save the <code>password_reset_sent_date</code> as well as the <code>password_reset_token</code> in the database.<span class="intersentencespace"></span> Let’s add these fields to the <code>User</code> model:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen migration AddPasswordResetTokenToUsers
  password_reset_token:string password_reset_sent_date:datetime
       apply  orms/activerecord
       ...
</pre></div></div>
<p>Due to this point it is not enough have only this migration, we need to set default value and say that the <code>password_reset_token</code> as well as the <code>password_reset_sent_date</code> can be <code>null</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># db/migrate/007_add_password_reset_token_to_users.rb</span>

<span class="k">class</span> <span class="nc">AddPasswordResetTokenToUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:password_reset_token</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">true</span>
      <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:password_reset_sent_date</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">true</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">change_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">remove</span> <span class="ss">:password_reset_token</span>
      <span class="n">t</span><span class="o">.</span><span class="n">remove</span> <span class="ss">:password_reset_sent_date</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The stage for the <code>save_forget_password_token</code> method is set: It takes our <code>generate_authentity_token</code> method from
chapter  <a href="job_vacancy_application_fragment.xhtml#sec-remember_me_funcion" class="hyperref"><span class="ref">2.6.2</span></a> and use the <a href="http://ruby-doc.org/core-2.4.1/Time.html#method-c-now" rel="noopener">Time.now</a>
method:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="o">...</span>
  <span class="k">def</span> <span class="nf">save_forget_password_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">password_reset_token</span> <span class="o">=</span> <span class="n">generate_authentity_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">password_reset_sent_date</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">save</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>But the token that gets generated can be of the form <code>B4+KPW145dG9qjfsBuDhuNLVCG/32etcnEo+j5eAFz4M6/i...</code>.<span class="intersentencespace"></span> The slash (<code>/</code>) and plus (<code>+</code>) is bad for routing.<span class="intersentencespace"></span> We already used the <code>normalize_confirmation_token</code> method from section  <a href="job_vacancy_application_fragment.xhtml#sec-controller_method_and_action_for_password_confirmation" class="hyperref"><span class="ref">2.4.7</span></a> to remove such backslashes, and we could easily the same method again.<span class="intersentencespace"></span> But we want to apply <a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself" rel="noopener">DRY</a> again (see <a href="job_vacancy_application_fragment.xhtml#box-dry" class="hyperref">box <span class="ref">2.2</span></a>).<span class="intersentencespace"></span> For this purpose we will create a <code>lib</code><sup id="cha-2_footnote-ref-27" class="footnote"><a href="#cha-2_footnote-27">27</a></sup> folder.<span class="intersentencespace"></span> Inside the directory we create a <code>lib/String/normalizer.rb</code> file:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># lib/String/normalizer.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">module</span> <span class="nn">String</span>
    <span class="k">module</span> <span class="nn">Normalizer</span>
      <span class="k">def</span> <span class="nf">normalize</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
        <span class="n">token</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">'+'</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And the test for <code>Normalizer</code> is similar to the <code>SessionsHelper</code> tests of section  <a href="job_vacancy_application_fragment.xhtml#sec-authorization" class="hyperref"><span class="ref">2.6.1</span></a>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># spec/lib/String/normalizer_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="nb">String</span><span class="o">::</span><span class="no">Normalizer</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:normalizer</span><span class="p">)</span> <span class="p">{</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="kp">extend</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="nb">String</span><span class="o">::</span><span class="no">Normalizer</span> <span class="p">}</span> <span class="p">}</span>

  <span class="n">subject</span> <span class="p">{</span> <span class="n">normalizer</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'replaces / and + in strings'</span> <span class="k">do</span>
    <span class="n">token</span> <span class="o">=</span> <span class="s1">'B4+K/32'</span>
    <span class="n">expected_token</span> <span class="o">=</span> <span class="s1">'B4K32'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="o">.</span><span class="n">normalize</span><span class="p">(</span><span class="n">token</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">expected_token</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And use the method in the <code>users_observer.rb</code></p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user_observer.rb</span>

<span class="nb">require</span> <span class="s1">'bcrypt'</span>

<span class="k">class</span> <span class="nc">UserObserver</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Observer</span>
  <span class="kp">include</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="nb">String</span><span class="o">::</span><span class="no">Normalizer</span>
  <span class="o">...</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">set_confirmation_token</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">salt</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">generate_salt</span>
    <span class="n">token</span> <span class="o">=</span> <span class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">hash_secret</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
    <span class="n">normalize</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>as well as in <code>user.rb</code>:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/models/user.rb</span>

<span class="nb">require</span> <span class="s1">'securerandom'</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="kp">include</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="nb">String</span><span class="o">::</span><span class="no">Normalizer</span>
  <span class="o">...</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">generate_authentity_token</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">authentity_token</span> <span class="o">=</span> <span class="n">normalize</span><span class="p">(</span><span class="no">SecureRandom</span><span class="o">.</span><span class="n">base64</span><span class="p">(</span><span class="mi">64</span><span class="p">))</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>We are now ready to create our mailer:</p>
<div class="code"><div class="highlight"><pre><span></span>$ padrino-gen mailer PasswordReset email
</pre></div></div>
<p>In the mailer we take the user to create the password reset token as a link for them:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/mailers/password_reset.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">mailer</span> <span class="ss">:password_reset</span> <span class="k">do</span>
  <span class="n">email</span> <span class="ss">:email</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="p">,</span> <span class="n">link</span><span class="o">|</span>
    <span class="n">from</span> <span class="s1">'admin@job-vacancy.de'</span>
    <span class="n">subject</span> <span class="s1">'Password reset'</span>
    <span class="n">to</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span>
    <span class="n">locals</span> <span class="nb">name</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">link</span><span class="p">:</span> <span class="n">link</span>
    <span class="n">render</span> <span class="s1">'password_reset/email'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The email template contains information and the link for reseting the password:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="x"># app/views/mailers/password_reset/email.plain.erb</span>

<span class="x">Hi </span><span class="cp">&lt;%=</span> <span class="nb">name</span> <span class="cp">%&gt;</span><span class="x">,</span>

<span class="x">to reset your password, click on the link below</span>

<span class="cp">&lt;%=</span> <span class="n">link</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">If you do not requested a new password, you can ignore this message.</span>

<span class="x">Your Job Vacancy!</span>
</pre></div></div>
<p>Now we can use the deliver method to send the password-reset link for the user in the <code>create</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/password_forget.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="o">...</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="o">...</span>

    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">save_forget_password_token</span>
      <span class="n">link</span> <span class="o">=</span> <span class="s1">'http://localhost:3000'</span> <span class="o">+</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span>
        <span class="ss">token</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_token</span><span class="p">)</span>
      <span class="n">deliver</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="vi">@user</span><span class="p">,</span> <span class="n">link</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'success'</span>
  <span class="k">end</span>
  <span class="o">...</span>
<span class="k">end</span>
</pre></div></div>
<p>When the email was send we need to render the ‘success’ page for our user:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="x"># app/views/password_forget/success.erb</span>

<span class="x">Password was reseted successfully, please check your mail for reset instructions.</span>
</pre></div></div>
<p>Next we will write the <code>edit</code> action to handle the link action.<span class="intersentencespace"></span> The action will take the reset
token and check if it is still valid.</p>
<div class="code"><div class="highlight"><pre><span></span><span class="lineno"> 1 </span><span class="c1"># app/controllers/password_forget.rb</span>
<span class="lineno"> 2 </span>
<span class="lineno"> 3 </span><span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
<span class="lineno"> 4 </span>
<span class="lineno"> 5 </span>  <span class="o">...</span>
<span class="lineno"> 6 </span>  <span class="n">get</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/password-reset/:token/edit"</span> <span class="k">do</span>
<span class="lineno"> 7 </span>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_password_reset_token</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:token</span><span class="o">]</span><span class="p">)</span>
<span class="lineno"> 8 </span>
<span class="lineno"> 9 </span>    <span class="k">if</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span> <span class="o">&lt;</span>
<span class="lineno">10 </span><span class="hll">      <span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_sent_date</span><span class="o">.</span><span class="n">to_datetime</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span> <span class="o">/</span> <span class="mi">24</span><span class="o">.</span><span class="mi">0</span><span class="p">))</span>
</span><span class="lineno">11 </span>      <span class="n">render</span> <span class="s1">'edit'</span>
<span class="lineno">12 </span>    <span class="k">elsif</span> <span class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span> <span class="o">&gt;=</span>
<span class="lineno">13 </span><span class="hll">      <span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_sent_date</span><span class="o">.</span><span class="n">to_datetime</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span> <span class="o">/</span> <span class="mi">24</span><span class="o">.</span><span class="mi">0</span><span class="p">))</span>
</span><span class="lineno">14 </span>      <span class="vi">@user</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span>
<span class="lineno">15 </span>        <span class="p">{</span> <span class="ss">password_reset_token</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="ss">password_reset_sent_date</span><span class="p">:</span> <span class="mi">0</span> <span class="p">})</span>
<span class="lineno">16 </span>      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:new</span><span class="p">),</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span>
<span class="lineno">17 </span>        <span class="s1">'Password reset token has expired.'</span>
<span class="lineno">18 </span>    <span class="k">else</span>
<span class="lineno">19 </span>      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span>
<span class="lineno">20 </span>    <span class="k">end</span>
<span class="lineno">21 </span>  <span class="k">end</span>
<span class="lineno">22 </span><span class="k">end</span>
</pre></div></div>
<p>Please note that we are using <code>Time.now.utc</code> for comparising because the <code>save_forget_password_token</code> uses
<code>Time.now</code> for saving <code>password_reset_sent_date</code> of the user.<span class="intersentencespace"></span> When you use Time.now<sup id="cha-2_footnote-ref-28" class="footnote"><a href="#cha-2_footnote-28">28</a></sup>, it generates a SQL query with time in UTC for saving to the database.</p>
<p>The highlighted lines with a one hour fraction<sup id="cha-2_footnote-ref-29" class="footnote"><a href="#cha-2_footnote-29">29</a></sup> of a whole day.<span class="intersentencespace"></span> As an alternative you could also have
written <code>@user.password_reset_sent_date + (60 * 60)</code>.<span class="intersentencespace"></span> If you want to have a more readable version you could use the <a href="https://github.com/kylewlacy/timerizer" rel="noopener">Timerizer</a><sup id="cha-2_footnote-ref-30" class="footnote"><a href="#cha-2_footnote-30">30</a></sup> gem.</p>
<p>And the specs for the <code>edit</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="lineno"> 1 </span><span class="n">describe</span> <span class="s2">"GET /password_forget/:token/edit"</span> <span class="k">do</span>
<span class="lineno"> 2 </span>  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
<span class="lineno"> 3 </span>  <span class="n">let</span><span class="p">(</span><span class="ss">:test_time</span><span class="p">)</span> <span class="p">{</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span> <span class="p">}</span>
<span class="lineno"> 4 </span>
<span class="lineno"> 5 </span>  <span class="n">context</span> <span class="s2">"password reset date is not older than one hour"</span> <span class="k">do</span>
<span class="lineno"> 6 </span>    <span class="n">it</span> <span class="s1">'renders edit page'</span> <span class="k">do</span>
<span class="lineno"> 7 </span><span class="hll">      <span class="n">allow</span><span class="p">(</span><span class="no">Time</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:now</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">test_time</span><span class="p">)</span>
</span><span class="lineno"> 8 </span>
<span class="lineno"> 9 </span>      <span class="n">user</span><span class="o">.</span><span class="n">password_reset_sent_date</span> <span class="o">=</span> <span class="n">test_time</span> <span class="o">+</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span>
<span class="lineno">10 </span>      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_password_reset_token</span><span class="p">)</span>
<span class="lineno">11 </span>        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
<span class="lineno">12 </span>        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
<span class="lineno">13 </span>      <span class="n">get</span> <span class="s1">'/password_forget/1/edit'</span>
<span class="lineno">14 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
<span class="lineno">15 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Reset Password'</span>
<span class="lineno">16 </span>    <span class="k">end</span>
<span class="lineno">17 </span>  <span class="k">end</span>
<span class="lineno">18 </span>
<span class="lineno">19 </span>  <span class="n">context</span> <span class="s2">"password reset date is older than one hour"</span> <span class="k">do</span>
<span class="lineno">20 </span>    <span class="n">it</span> <span class="s1">'redirects to new session'</span> <span class="k">do</span>
<span class="lineno">21 </span><span class="hll">      <span class="n">allow</span><span class="p">(</span><span class="no">Time</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:now</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">test_time</span><span class="p">)</span>
</span><span class="lineno">22 </span>
<span class="lineno">23 </span>      <span class="n">user</span><span class="o">.</span><span class="n">password_reset_sent_date</span> <span class="o">=</span> <span class="n">test_time</span> <span class="o">-</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span>
<span class="lineno">24 </span>      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_password_reset_token</span><span class="p">)</span>
<span class="lineno">25 </span>        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
<span class="lineno">26 </span>        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
<span class="lineno">27 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes</span><span class="p">)</span>
<span class="lineno">28 </span>        <span class="o">.</span><span class="n">with</span><span class="p">({</span> <span class="ss">password_reset_token</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="ss">password_reset_sent_date</span><span class="p">:</span> <span class="mi">0</span> <span class="p">})</span>
<span class="lineno">29 </span>
<span class="lineno">30 </span>      <span class="n">get</span> <span class="s1">'/password_forget/1/edit'</span>
<span class="lineno">31 </span>
<span class="lineno">32 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
<span class="lineno">33 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password reset token has expired.'</span>
<span class="lineno">34 </span>    <span class="k">end</span>
<span class="lineno">35 </span>  <span class="k">end</span>
<span class="lineno">36 </span>
<span class="lineno">37 </span>  <span class="n">context</span> <span class="s2">"user is not found"</span> <span class="k">do</span>
<span class="lineno">38 </span>    <span class="n">it</span> <span class="s1">'redirects to /password_forget'</span> <span class="k">do</span>
<span class="lineno">39 </span>      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_password_reset_token</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
<span class="lineno">40 </span>      <span class="n">get</span> <span class="s1">'/password_forget/1/edit'</span>
<span class="lineno">41 </span>      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
<span class="lineno">42 </span>    <span class="k">end</span>
<span class="lineno">43 </span>  <span class="k">end</span>
<span class="lineno">44 </span><span class="k">end</span>
</pre></div></div>
<p>In the specs we are using <a href="https://relishapp.com/rspec/rspec-mocks/v/3-5/docs/basics/allowing-messages" rel="noopener">allow</a>
expectation.<span class="intersentencespace"></span> This expectation tells the object to a return a value in response to a given message.<span class="intersentencespace"></span> Nothing will happen
if the message was never received.<span class="intersentencespace"></span> Also the number of message calls is not relevant.<span class="intersentencespace"></span> You could so that you are in lazy
call mode in your test (what I’m actually with the <code>Time</code> class).</p>
<p>In the associated <code>edit</code> view we use the <code>form_for</code> and pass in the <code>user</code> model to have access to all validations.<span class="intersentencespace"></span> Besides we are using then <code>method:</code> hash to say which method we want to use for the action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="x"># app/views/password_forget/edit.erb</span>

<span class="x">&lt;h2&gt;Reset Password&lt;/h2&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_for</span> <span class="vi">@user</span><span class="p">,</span> <span class="s2">"/password_forget/</span><span class="si">#{</span><span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_token</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span>
  <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,\</span>
      <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">prepend</span><span class="p">:</span> <span class="s2">"The password"</span><span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:password_confirmation</span><span class="p">,\</span>
      <span class="ss">class</span><span class="p">:</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">prepend</span><span class="p">:</span> <span class="s2">"The password confirmation"</span><span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">submit_tag</span> <span class="s2">"Reset password"</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>Next we add the <code>update</code> action.<span class="intersentencespace"></span> First it checks, if the user can be found by the passed token and then we use the
password field validations from the user model:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="c1"># app/controllers/password_forget.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="o">...</span>

  <span class="n">post</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/password-reset/:token"</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_password_reset_token</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:token</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">({</span><span class="ss">:password_reset_token</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
        <span class="ss">:password_reset_sent_date</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">})</span>
      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:sessions</span><span class="p">,</span> <span class="ss">:new</span><span class="p">),</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s2">"Password has been reseted.</span>
<span class="s2">        Please login with your new password."</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And the specs for the <code>update</code> action:</p>
<div class="code"><div class="highlight"><pre><span></span><span class="n">describe</span> <span class="s2">"POST /password_forget/:token"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">context</span> <span class="s2">"user can be updated"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"redirects to login"</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_password_reset_token</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes</span><span class="p">)</span><span class="o">.</span><span class="n">exactly</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
      <span class="n">post</span> <span class="s1">'/password_forget/1'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password has been reseted.</span>
<span class="s1">        Please login with your new password.'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">context</span> <span class="s2">"user can not be updated"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"renders edit page"</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_password_reset_token</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
      <span class="n">post</span> <span class="s1">'/password_forget/1'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Since the routes are now defined, we can add the <em>password forget</em> link on the login page:</p>
<div class="code"><div class="highlight"><pre><span class="x"># app/views/sessions/new.erb</span>
<span class="x">...</span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">submit_tag</span> <span class="s2">"Sign up"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;p&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'forget password?'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/p&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">...</span>
</pre></div></div>
<p>We are not done yet.<span class="intersentencespace"></span> In <a href="job_vacancy_application_fragment.xhtml#box-srp" class="hyperref">box <span class="ref">2.13</span></a> I mentioned the SRP principe.<span class="intersentencespace"></span> I you take a look into</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/controllers/password_forget.rb</span>
<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="o">.</span><span class="n">.</span><span class="o">.</span>

    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">save_forget_password_token</span>
      <span class="n">link</span> <span class="o">=</span> <span class="s1">'http://localhost:3000'</span> <span class="o">+</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span>
        <span class="ss">token</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_token</span><span class="p">)</span>
      <span class="n">deliver</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="vi">@user</span><span class="p">,</span> <span class="n">link</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'success'</span>
  <span class="k">end</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="k">end</span>
</pre></div></div>
<p>you can still see the we are using the deliver, which is actually not tested.<span class="intersentencespace"></span> We will extract a <code>UserPasswordResetMail</code> which
has the single task to send the password reset message.<span class="intersentencespace"></span> Here are the specs for the class:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/lib/Infrastructure/Mail/user_password_reset_mail_spec.rb</span>
<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">UserPasswordResetMail</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'sends the password reset mail'</span> <span class="k">do</span>
    <span class="n">link</span> <span class="o">=</span> <span class="s1">'i-forget-everything'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">app</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:deliver</span><span class="p">)</span>
      <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">link</span><span class="p">)</span>

    <span class="vi">@user_password_forget_mail</span> <span class="o">=</span> <span class="no">UserPasswordResetMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span><span class="p">)</span>
    <span class="vi">@user_password_forget_mail</span><span class="o">.</span><span class="n">reset_mail</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>and the implementation:</p>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">UserPasswordResetMail</span>
  <span class="kp">attr_accessor</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:app</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">app</span> <span class="o">=</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="p">)</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
    <span class="vi">@app</span> <span class="o">||=</span> <span class="n">app</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">reset_mail</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
    <span class="vi">@app</span><span class="o">.</span><span class="n">deliver</span><span class="p">(</span>
      <span class="ss">:password_reset</span><span class="p">,</span>
      <span class="ss">:email</span><span class="p">,</span>
      <span class="vi">@user</span><span class="p">,</span>
      <span class="n">link</span>
    <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Now we can use the new service:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/controllers/password_forget.rb</span>
<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:password_forget</span> <span class="k">do</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>

  <span class="n">post</span> <span class="ss">:create</span> <span class="k">do</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_email</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">save_forget_password_token</span>

      <span class="n">link</span> <span class="o">=</span> <span class="s1">'http://localhost:3000'</span> <span class="o">+</span> <span class="n">url</span><span class="p">(</span><span class="ss">:password_forget</span><span class="p">,</span>
        <span class="ss">:edit</span><span class="p">,</span>
        <span class="ss">token</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_reset_token</span>
      <span class="p">)</span>
      <span class="n">user_password_reset_mail</span> <span class="o">=</span> <span class="no">UserPasswordResetMail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
      <span class="n">user_password_reset_mail</span><span class="o">.</span><span class="n">reset_mail</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'success'</span>
  <span class="k">end</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="k">end</span>
</pre></div></div>
<p>And the specs for the method:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/app/controllers/password_forget_controller_spec.rb</span>
<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/password_forget"</span> <span class="k">do</span>

  <span class="n">describe</span> <span class="s2">"POST /password_forget/create"</span> <span class="k">do</span>
    <span class="n">describe</span> <span class="s2">"user is not found"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'it renders the success page'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
        <span class="n">post</span> <span class="s1">'/password_forget/create'</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">''</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password was reseted successfully'</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">describe</span> <span class="s2">"user is found"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'it send the password reset mail and render the success page'</span> <span class="k">do</span>
        <span class="n">expectedLink</span> <span class="o">=</span> <span class="s1">'http://localhost:3000/password_forget/123/edit'</span>
        <span class="n">expectedUser</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">User</span><span class="p">,</span>
          <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">'Red Dead Redemption'</span><span class="p">,</span>
          <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">'hallo@padrino.de'</span><span class="p">,</span>
          <span class="ss">:password_reset_token</span> <span class="o">=&gt;</span> <span class="s1">'123'</span>
        <span class="p">)</span>

        <span class="n">user_password_reset_mail</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">UserPasswordResetMail</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">user_password_reset_mail</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:reset_mail</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">expectedLink</span><span class="p">)</span>

        <span class="n">expect</span><span class="p">(</span><span class="no">UserPasswordResetMail</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">expectedUser</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user_password_reset_mail</span><span class="p">)</span>

        <span class="n">expect</span><span class="p">(</span><span class="n">expectedUser</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save_forget_password_token</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_email</span><span class="p">)</span><span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'hallo@padrino.de'</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">expectedUser</span><span class="p">)</span>

        <span class="n">post</span> <span class="s1">'/password_forget/create'</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">'hallo@padrino.de'</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span> <span class="s1">'Password was reseted successfully'</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
</pre></div></div>
</div></div><div id="cid13" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid13" class="heading hyperref"><span class="number">2.7 </span>Job Offers</a></h2>
<div id="uid222" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid222" class="heading hyperref"><span class="number">2.7.1 </span>Refine the model</a></h3>
<p class="noindent">Since we are now basically done with the user management, it’s time to model our <code>JobOffer</code> model.</p>
<p>Specs first:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/app/models/job_offer_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobOffer</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:wrong_job_offer</span><span class="p">)</span> <span class="p">{</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>

  <span class="n">it</span> <span class="s1">'can be created'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_nil</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a title'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">''</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a description'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">''</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a location'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a contact'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">location</span> <span class="o">=</span> <span class="s1">'Berlin'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">contact</span> <span class="o">=</span> <span class="s1">''</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a time_start'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">location</span> <span class="o">=</span> <span class="s1">'Berlin'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">contact</span> <span class="o">=</span> <span class="s1">'Test'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must have a time_end'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">location</span> <span class="o">=</span> <span class="s1">'Berlin'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">contact</span> <span class="o">=</span> <span class="s1">'Test'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">time_start</span> <span class="o">=</span> <span class="s1">'2019/01/16'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'time_start cannot be bigger then time_end'</span> <span class="k">do</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">'Hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">'hallo'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">location</span> <span class="o">=</span> <span class="s1">'Berlin'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">contact</span> <span class="o">=</span> <span class="s1">'Test'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">time_start</span> <span class="o">=</span> <span class="s1">'2019/01/17'</span>
    <span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">time_end</span> <span class="o">=</span> <span class="s1">'2019/01/16'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">wrong_job_offer</span><span class="o">.</span><span class="n">valid?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_falsey</span>
  <span class="k">end</span>

  <span class="n">it</span> <span class="s1">'must be related to a user'</span> <span class="k">do</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="o">.</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_nil</span>
    <span class="n">job_offer</span><span class="o">.</span><span class="n">build_user</span><span class="p">({</span><span class="nb">id</span><span class="p">:</span> <span class="mi">100</span><span class="p">})</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">100</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The special thing about this spec is that we have to ensure that the <code>time_start</code> value is not lower then the <code>time_end</code> value.<span class="intersentencespace"></span> We will do this with the <a href="https://api.rubyonrails.org/v5.2.2/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates" rel="noopener">validates method</a> to have a custom validation:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/models/job_offer.rb</span>
<span class="k">class</span> <span class="nc">JobOffer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>

  <span class="n">validates</span> <span class="ss">:title</span><span class="p">,</span>
    <span class="ss">:description</span><span class="p">,</span>
    <span class="ss">:location</span><span class="p">,</span>
    <span class="ss">:contact</span><span class="p">,</span>
    <span class="ss">:time_start</span><span class="p">,</span>
    <span class="ss">:time_end</span><span class="p">,</span>
    <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>

  <span class="n">validate</span> <span class="ss">:dates</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">dates</span>
    <span class="k">if</span> <span class="n">time_start</span> <span class="o">&amp;&amp;</span> <span class="n">time_end</span> <span class="o">&amp;&amp;</span> <span class="n">time_start</span> <span class="o">&gt;</span> <span class="n">time_end</span>
      <span class="n">errors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="ss">:time_end</span><span class="p">,</span> <span class="s1">'must be after time_start'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The <code>errors.add</code> method will add an error to the model to the <code>:time_end</code> property with a custom
message.</p>
</div>
<div id="uid223" class="subsection"><h3><a href="job_vacancy_application_fragment.xhtml#uid223" class="heading hyperref"><span class="number">2.7.2 </span>Create the controller</a></h3>
<p class="noindent"></p><div class="code"><div class="highlight"><pre>padrino-gen controller JobOffers get:index get:new post:create get:mylist <span class="se">\</span>
                                 get:edit put:update get:job delete:job <span class="se">\</span>
                                 --no-helper
      create  app/controllers/job_offers.rb
      create  app/views/job_offers
       apply  tests/rspec
      create  spec/app/controllers/job_offers_controller_spec.rb
</pre></div></div>
<p>Let’s start by writing the specs for the four actions: <code>get:jobs</code>, <code>get:new</code>, <code>post:create</code>, and <code>get:mylist</code>:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/app/controllers/job_offers_controller_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/jobs"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">describe</span> <span class="s2">"GET /jobs"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">"render the :jobs view"</span> <span class="k">do</span>
      <span class="n">get</span> <span class="s2">"/jobs"</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"GET /jobs/new"</span> <span class="k">do</span>
    <span class="n">context</span> <span class="s2">"user is not logged in"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'redirects to login'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
        <span class="n">get</span> <span class="s2">"/jobs/new"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"user is logged in"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'renders the :new routes'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">get</span> <span class="s2">"/jobs/new"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"POST /jobs/create"</span> <span class="k">do</span>
    <span class="n">context</span> <span class="s2">"user is not logged in"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'redirects to login'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
        <span class="n">post</span> <span class="s1">'/jobs/create'</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"user is logged in"</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:job</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">}</span>

      <span class="n">it</span> <span class="s1">'renders the post page if form is invalid'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:valid?</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>

        <span class="n">post</span> <span class="s1">'/jobs/create'</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="k">end</span>

      <span class="n">it</span> <span class="s1">'list page if job offer is saved'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:valid?</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:write_attribute</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:user_id</span><span class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>

        <span class="n">expect</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>

        <span class="n">post</span> <span class="s1">'/jobs/create'</span><span class="p">,</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="n">job</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s2">"Job is saved"</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"GET /jobs/mylist"</span> <span class="k">do</span>
    <span class="n">context</span> <span class="s2">"user is not logged in"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'redirects to login'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
        <span class="n">get</span> <span class="s1">'/jobs/mylist'</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"user is logged in"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'renders list of users job offers'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">get</span> <span class="s2">"/jobs/mylist"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And the implementation:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/controllers/job_offers.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:job_offers</span> <span class="k">do</span>
  <span class="n">before</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:mylist</span> <span class="k">do</span>
    <span class="k">if</span> <span class="o">!</span><span class="n">signed_in?</span>
      <span class="n">redirect</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs'</span> <span class="k">do</span>
    <span class="vi">@job_offers</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">all</span>
    <span class="n">render</span> <span class="s1">'jobs'</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">job_offers</span><span class="p">:</span> <span class="vi">@job_offers</span> <span class="p">}</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/new'</span> <span class="k">do</span>
    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">new</span>
    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>

  <span class="n">post</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/create'</span> <span class="k">do</span>
    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:job_offer</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@job_offer</span> <span class="o">&amp;&amp;</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">valid?</span>
      <span class="vi">@job_offer</span><span class="o">.</span><span class="n">write_attribute</span><span class="p">(</span><span class="ss">:user_id</span><span class="p">,</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
      <span class="vi">@job_offer</span><span class="o">.</span><span class="n">save</span>
      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">),</span> <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s2">"Job is saved"</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'new'</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:mylist</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/mylist'</span> <span class="k">do</span>
    <span class="vi">@job_offers</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">"user_id = ?"</span><span class="p">,</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
    <span class="n">render</span> <span class="s1">'mylist'</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">job_offers</span><span class="p">:</span> <span class="vi">@job_offers</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The interesting part is the <code>JobOffer.where</code> method where we are using <a href="https://guides.rubyonrails.org/active_record_querying.html#retrieving-objects-from-the-database" rel="noopener">Active Record Query Interface</a> to get to the desired data as an array from the database.</p>
<p>Time to add the views.<span class="intersentencespace"></span> Let’s start with <code>get:index</code>:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/jobs.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Jobs&lt;/h1&gt;</span>

<span class="x">&lt;h3&gt;Overview of latest released jobs&lt;/h3&gt;</span>

<span class="x">&lt;br&gt;</span>

<span class="x">&lt;div class="content"&gt;</span>
<span class="x">  &lt;table class="table is-fullwidth"&gt;</span>
<span class="x">    &lt;thead&gt;</span>
<span class="x">      &lt;tr&gt;</span>
<span class="x">        &lt;th&gt;Title&lt;/th&gt;</span>
<span class="x">        &lt;th&gt;Start date&lt;/th&gt;</span>
<span class="x">      &lt;/tr&gt;</span>
<span class="x">    &lt;/thead&gt;</span>
<span class="x">    &lt;tbody&gt;</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@job_offers</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        </span><span class="cp">&lt;%</span> <span class="vi">@job_offers</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">job_offer</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">          &lt;tr&gt;</span>
<span class="x">            &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">title</span><span class="p">,</span> <span class="p">\</span>
              <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:job</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">id</span> <span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">            &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">time_start</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">          &lt;/tr&gt;</span>
<span class="x">        </span><span class="cp">&lt;%</span> <span class="k">end</span>  <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        There are no open job offerings</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/tbody&gt;</span>
<span class="x">  &lt;/table&gt;</span>
<span class="x">&lt;/div&gt;</span>
</pre></div></div>
<p>And the view for <code>get:new</code>:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/new.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Create a new job offer&lt;/h1&gt;</span>

<span class="cp">&lt;%</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@job_offer</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:create</span><span class="p">))</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The title"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'textarea'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:description</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The description"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:location</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The location"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:contact</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:contact</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:contact</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The contact"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">date_field</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The time_start"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">date_field</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="ss">:job_offer</span><span class="p">,</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The time_end"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Post new job"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>In order to get a proper start and end date for the job-offer we are using the <a href="https://www.rubydoc.info/github/padrino/padrino-framework/Padrino/Helpers/FormBuilder/AbstractFormBuilder#date_field-instance_method" rel="noopener">date_field</a> element.</p>
<p>And the view for <code>get:mylist</code>:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/mylist.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;My Jobs&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Create a new job'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:new</span><span class="p">),</span> <span class="p">\</span>
  <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'button is-link'</span> <span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;table class="table is-fullwidth"&gt;</span>
<span class="x">  &lt;thead&gt;</span>
<span class="x">    &lt;tr&gt;</span>
<span class="x">      &lt;th&gt;Position&lt;/th&gt;</span>
<span class="x">      &lt;th&gt;Title&lt;/th&gt;</span>
<span class="x">      &lt;th&gt;Actions&lt;/th&gt;</span>
<span class="x">    &lt;/tr&gt;</span>
<span class="x">  &lt;/thead&gt;</span>
<span class="x">  &lt;tbody&gt;</span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="vi">@job_offers</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">job_offer</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">      &lt;tr&gt;</span>
<span class="x">        &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">        &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">title</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">        &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Edit'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"> |</span>
<span class="x">          </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Delete'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:job</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="p">\</span>
            <span class="ss">:authenticity_token</span> <span class="o">=&gt;</span> <span class="n">session</span><span class="o">[</span><span class="ss">:csrf</span><span class="o">]</span><span class="p">),</span> <span class="ss">:method</span> <span class="o">=&gt;</span> <span class="ss">:delete</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        &lt;/td&gt;</span>
<span class="x">      &lt;/tr&gt;</span>
<span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span>  <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/tbody&gt;</span>
<span class="x">&lt;/table&gt;</span>
</pre></div></div>
<p>Let’s finish our specs by writing them for the last four remaining actions: <code>get:edit</code>, <code>put:update</code>, <code>get:job</code>
and <code>delete:job</code>:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># spec/app/controllers/job_offers_controller_spec.rb</span>

<span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">"/jobs"</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="o">.</span><span class="n">.</span><span class="o">.</span>

  <span class="n">describe</span> <span class="s2">"GET /jobs/myjobs/:id/edit"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:job</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user_second</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s1">'redirects to /login if user is not signed in'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
      <span class="n">get</span> <span class="s1">'/jobs/myjobs/1/edit'</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'redirects to /jobs/mylist user tries to edit a job from another user'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">job</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">user_second</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job</span><span class="p">)</span>

      <span class="n">get</span> <span class="s2">"/jobs/myjobs/</span><span class="si">#{</span><span class="n">job</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/edit"</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/jobs/mylist'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'renders edit view if signed in user edits his own job'</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="n">job</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job</span><span class="p">)</span>

      <span class="n">get</span> <span class="s2">"/jobs/myjobs/</span><span class="si">#{</span><span class="n">job</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">/edit"</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"PUT /jobs/myjobs/:id"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'try to edit non existing job'</span> <span class="k">do</span>
      <span class="n">updated_job_offer</span> <span class="o">=</span> <span class="o">[</span><span class="s1">''</span><span class="o">]</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1000'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/jobs/myjobs/1000"</span><span class="p">,</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="n">updated_job_offer</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/jobs/mylist'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'job_offer changes are not valid'</span> <span class="k">do</span>
      <span class="vi">@existing_job_offer</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">title</span><span class="p">:</span> <span class="s1">'old'</span><span class="p">)</span>
      <span class="n">updated_job_offer</span> <span class="o">=</span> <span class="o">[</span><span class="s1">''</span><span class="o">]</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes!</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">updated_job_offer</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/jobs/myjobs/1"</span><span class="p">,</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="n">updated_job_offer</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/jobs/myjobs/1/edit'</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">'Job offer was not updated.'</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'job_offer changes are valid'</span> <span class="k">do</span>
      <span class="vi">@existing_job_offer</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">title</span><span class="p">:</span> <span class="s1">'old'</span><span class="p">)</span>
      <span class="n">updated_job_offer</span> <span class="o">=</span> <span class="o">[</span><span class="s1">''</span><span class="o">]</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes!</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">updated_job_offer</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/jobs/myjobs/1"</span><span class="p">,</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="n">updated_job_offer</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/jobs/mylist'</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">'Job offer was updated.'</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s1">'job_offer changes DB error'</span> <span class="k">do</span>
      <span class="vi">@existing_job_offer</span> <span class="o">=</span> <span class="n">double</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">title</span><span class="p">:</span> <span class="s1">'old'</span><span class="p">)</span>
      <span class="n">updated_job_offer</span> <span class="o">=</span> <span class="o">[</span><span class="s1">''</span><span class="o">]</span>
      <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s1">'1'</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="vi">@existing_job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update_attributes!</span><span class="p">)</span>
        <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">updated_job_offer</span><span class="p">)</span>
        <span class="o">.</span><span class="n">and_raise</span><span class="p">(</span><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordInvalid</span><span class="p">)</span>

      <span class="n">put</span> <span class="s2">"/jobs/myjobs/1"</span><span class="p">,</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="n">updated_job_offer</span>

      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/jobs/myjobs/1/edit'</span><span class="p">)</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">'Job offer changes were not valid'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"GET /job/:id"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">context</span> <span class="s2">"Job exists"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'renders the page'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span>

        <span class="n">get</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">title</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"Job does not exists"</span> <span class="k">do</span>
      <span class="n">it</span> <span class="s1">'renders the job overview page'</span> <span class="k">do</span>
        <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
          <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
          <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

        <span class="n">get</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_ok</span>
        <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'Overview of latest jobs'</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">"DELETE /job/:id"</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:job_offer</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user_second</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_stubbed</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">context</span> <span class="s2">"Job exists"</span> <span class="k">do</span>
      <span class="n">context</span> <span class="s2">"User is logged"</span> <span class="k">do</span>
        <span class="n">it</span> <span class="s1">'deletes his own job'</span> <span class="k">do</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="n">job_offer</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">user</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
            <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
            <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span>

          <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:delete</span><span class="p">)</span>

          <span class="n">delete</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="k">end</span>

        <span class="n">it</span> <span class="s1">'redirects to /jobs/mylist if user deletes job of another user'</span> <span class="k">do</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="n">job_offer</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">user_second</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
            <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
            <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:delete</span><span class="p">)</span>

          <span class="n">delete</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="k">end</span>
      <span class="k">end</span>

      <span class="n">context</span> <span class="s2">"User is not logged in"</span> <span class="k">do</span>
        <span class="n">it</span> <span class="s1">'redirects to /login'</span> <span class="k">do</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
          <span class="n">delete</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="o">.</span><span class="n">header</span><span class="o">[</span><span class="s1">'Location'</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">context</span> <span class="s2">"Job does not exists"</span> <span class="k">do</span>
      <span class="n">context</span> <span class="s2">"User logged in"</span> <span class="k">do</span>
        <span class="n">it</span> <span class="s1">'redirects to /jobs/mylist'</span> <span class="k">do</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="n">expect</span><span class="p">(</span><span class="no">JobOffer</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:find_by_id</span><span class="p">)</span>
            <span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
            <span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

          <span class="n">expect</span><span class="p">(</span><span class="n">job_offer</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:delete</span><span class="p">)</span>

          <span class="n">delete</span> <span class="s2">"/jobs/</span><span class="si">#{</span><span class="n">job_offer</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">last_response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_redirect</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>The new thing in the spec is <code>.and_raise(ActiveRecord::RecordInvalid)</code> - as the time says you can expect that certain
exceptions are raised.</p>
<p>Now to the implementation:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/controllers/job_offers.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:job_offers</span> <span class="k">do</span>
  <span class="n">before</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">,</span> <span class="ss">:edit</span> <span class="k">do</span>
    <span class="k">if</span> <span class="o">!</span><span class="n">signed_in?</span>
      <span class="n">redirect</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>

  <span class="n">get</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/myjobs/:id/edit'</span> <span class="k">do</span>
    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@job_offer</span> <span class="o">&amp;&amp;</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="o">!=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span>
      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">render</span> <span class="s1">'edit'</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="vi">@job_offer</span> <span class="p">}</span>
  <span class="k">end</span>

  <span class="n">put</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/myjobs/:id'</span> <span class="k">do</span>
    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@job_offer</span> <span class="o">==</span> <span class="kp">nil</span>
      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="k">begin</span>
      <span class="k">if</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">update_attributes!</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:job_offer</span><span class="o">]</span><span class="p">)</span>
        <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">),</span> <span class="p">\</span>
          <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'Job offer was updated.'</span>
      <span class="k">end</span>
    <span class="k">rescue</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordInvalid</span>
      <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">),</span> <span class="p">\</span>
        <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'Job offer changes were not valid'</span>
    <span class="k">end</span>

    <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">),</span> <span class="p">\</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s1">'Job offer was not updated.'</span>
  <span class="k">end</span>

  <span class="n">get</span> <span class="ss">:job</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/:id'</span> <span class="k">do</span>
    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@job_offer</span>
      <span class="n">render</span> <span class="s1">'job'</span><span class="p">,</span> <span class="ss">:local</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">job_offer</span><span class="p">:</span> <span class="vi">@job_offer</span> <span class="p">}</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'jobs'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">delete</span> <span class="ss">:job</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">'/jobs/:id'</span> <span class="k">do</span>
    <span class="k">if</span> <span class="o">!</span><span class="n">signed_in?</span>
      <span class="n">redirect</span><span class="p">(</span><span class="s1">'/login'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="vi">@job_offer</span> <span class="o">=</span> <span class="no">JobOffer</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>

    <span class="k">if</span> <span class="vi">@job_offer</span> <span class="o">&amp;&amp;</span> <span class="n">current_user</span> <span class="o">&amp;&amp;</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span>
      <span class="vi">@job_offer</span><span class="o">.</span><span class="n">delete</span>
    <span class="k">end</span>

    <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>As you can see in line … we use the <a href="http://rubylearning.com/satishtalim/ruby_exceptions.html" rel="noopener">begin/rescure block</a> to catch
exceptions.</p>
<p>Now let’s add the view for <code>get:edit</code>:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/edit.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h2&gt;Edit your job&lt;/h2&gt;</span>

<span class="x">&lt;br&gt;</span>
<span class="cp">&lt;%</span> <span class="n">form_for</span> <span class="vi">@job_offer</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">id</span><span class="p">),</span> <span class="p">\</span>
    <span class="nb">method</span><span class="p">:</span> <span class="ss">:put</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="p">\</span>
    <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The title"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'textarea'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:description</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The description"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:location</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The location"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:contact</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:contact</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:contact</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The contact"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">date_field</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:time_start</span><span class="p">,</span> <span class="p">\</span>
      <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The time_start"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'label'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">date_field</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'input'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">error_message_on</span> <span class="n">job_offer</span><span class="p">,</span> <span class="ss">:time_end</span><span class="p">,</span> <span class="p">\</span>
    <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"has-background-danger"</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="s2">"The time_end"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/div&gt;</span>

<span class="x">  &lt;div class="field"&gt;</span>
<span class="x">    &lt;div class="control"&gt;</span>
<span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">"Update job"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"button is-large is-link"</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/div&gt;</span>
<span class="x">  &lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>And the last view <code>get:job</code> has two views:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/job.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">title</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>

<span class="x">&lt;div class="content"&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">description</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/div&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Get to job overview'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:index</span><span class="p">),</span> <span class="p">\</span>
  <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'button is-link'</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
<p>and:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/jobs.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;Jobs&lt;/h1&gt;</span>

<span class="x">&lt;h3&gt;Overview of latest jobs&lt;/h3&gt;</span>

<span class="x">&lt;br&gt;</span>

<span class="x">&lt;div class="content"&gt;</span>
<span class="x">  &lt;table class="table is-fullwidth"&gt;</span>
<span class="x">    &lt;thead&gt;</span>
<span class="x">      &lt;tr&gt;</span>
<span class="x">        &lt;th&gt;Title&lt;/th&gt;</span>
<span class="x">        &lt;th&gt;Start date&lt;/th&gt;</span>
<span class="x">      &lt;/tr&gt;</span>
<span class="x">    &lt;/thead&gt;</span>
<span class="x">    &lt;tbody&gt;</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@job_offers</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        </span><span class="cp">&lt;%</span> <span class="vi">@job_offers</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">job_offer</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">          &lt;tr&gt;</span>
<span class="x">            &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">title</span><span class="p">,</span> <span class="p">\</span>
              <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:job</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">id</span> <span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">            &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">job_offer</span><span class="o">.</span><span class="n">time_start</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
<span class="x">          &lt;/tr&gt;</span>
<span class="x">        </span><span class="cp">&lt;%</span> <span class="k">end</span>  <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">        There are no open job offerings</span>
<span class="x">      </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    &lt;/tbody&gt;</span>
<span class="x">  &lt;/table&gt;</span>
<span class="x">&lt;/div&gt;</span>
</pre></div></div>
<p>Next we want to give the logged in user the possibily to view all the jobs, a link edit a the job and change our default
view to display the all job offer.</p>
<p>Let’s start by adding the correct links:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/application.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">...</span>
<span class="x">&lt;li&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'New Job'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:new</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/li&gt;</span>
<span class="x">&lt;li&gt;</span>
<span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'My Jobs'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:mylist</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/li&gt;</span>
<span class="x">&lt;li&gt;</span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Edit Profile'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/li&gt;</span>
<span class="x">...</span>
</pre></div></div>
<p>And display the latest job on the start page, we just add a redirect to <code>/jobs</code>:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/controllers/pages.rb</span>

<span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">controllers</span> <span class="ss">:pages</span> <span class="k">do</span>
  <span class="n">get</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s2">"/"</span> <span class="k">do</span>
    <span class="n">redirect</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:index</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="k">end</span>
</pre></div></div>
<p>I’ll leave it to you to write the specs this class.</p>
</div></div><div id="cid14" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid14" class="heading hyperref"><span class="number">2.8 </span>Enable markdown rendering job description</a></h2>
<p class="noindent"><a href="https://en.wikipedia.org/wiki/Markdown" rel="noopener">Markdown</a> is a markup language which can be used to create HTML out
of simple constructs.</p>
<div class="code"><div class="highlight"><pre># My Job Offers


- [Best Padrino Job in Berlin](http://job-vacancy.com/)

**These are my best** *offers*
</pre></div></div>
<p>will be translated into the following HTML version:</p>
<div class="code"><div class="highlight"><pre><span class="nt">&lt;h1&gt;</span>My Job Offers<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;ul&gt;</span>
  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"http://job-vacancy.com/"</span><span class="nt">&gt;</span>Best Padrino Job in Berlin<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;p&gt;&lt;strong&gt;</span>These are my best<span class="nt">&lt;/strong&gt;</span> <span class="nt">&lt;em&gt;</span>offers<span class="nt">&lt;/em&gt;&lt;/p&gt;</span>
</pre></div></div>
<p>Let’s add the <code>enable_markdown</code> property to our <code>JobOffer</code> model and set this value to <code>false</code> as a default value:</p>
<div class="code"><div class="highlight"><pre><span class="nv">$ </span>padrino-gen migration AddEnableMarkdownToJobOffers enable_markdown:boolean
   apply  orms/activerecord
  create  db/migrate/008_add_enable_markdown_to_job_offers.rb
</pre></div></div>
<p>Here is the migration:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># db/migrate/008_add_enable_markdown_to_job_offers.rb</span>

<span class="k">class</span> <span class="nc">AddEnableMarkdownToJobOffers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">5</span><span class="o">.</span><span class="mi">1</span><span class="o">]</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
    <span class="n">change_table</span> <span class="ss">:job_offers</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:enable_markdown</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
    <span class="n">change_table</span> <span class="ss">:job_offers</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">remove</span> <span class="ss">:enable_markdown</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>Run the migration.<span class="intersentencespace"></span> Now add the following snippets in the <code>new.erb</code> and <code>edit.erb</code> template:</p>
<div class="code"><div class="highlight"><pre><span class="x">&lt;div class="field"&gt;</span>
<span class="x">  &lt;label class="checkbox"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">check_box</span> <span class="ss">:enable_markdown</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'checkbox'</span> <span class="cp">%&gt;</span><span class="x"> \</span>
<span class="x">      Enable Markdown rendering</span>
<span class="x">  &lt;/label&gt;</span>
<span class="x">&lt;/div&gt;</span>
</pre></div></div>
<p>In order to use the markdown rendering we need a suitable tool for it.<span class="intersentencespace"></span> We use the <a href="https://github.com/vmg/redcarpet" rel="noopener">redcarped gem</a> for this job.<span class="intersentencespace"></span> Let’s add this to our <code>Gemfile</code>:</p>
<div class="code"><div class="highlight"><pre><span class="n">gem</span> <span class="s1">'redcarpet'</span><span class="p">,</span> <span class="s1">'3.4.0'</span>
</pre></div></div>
<p>and run <code>bundle install</code>.<span class="intersentencespace"></span> Let’s create the specs for our new helper:</p>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'spec_helper'</span>

<span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">MarkdownHelper</span> <span class="k">do</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:markdown_helper</span><span class="p">)</span> <span class="p">{</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">extend</span> <span class="no">JobVacancy</span><span class="o">::</span><span class="no">App</span><span class="o">::</span><span class="no">MarkdownHelper</span><span class="p">}</span>

  <span class="n">subject</span> <span class="p">{</span> <span class="n">markdown_helper</span> <span class="p">}</span>

  <span class="n">describe</span> <span class="s2">"#markdown"</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s1">'renders html'</span> <span class="k">do</span>
      <span class="n">expected_result</span> <span class="o">=</span> <span class="s2">"&lt;h1&gt;Hallo&lt;/h1&gt;</span><span class="se">\n</span><span class="s2">"</span>
      <span class="n">text_to_render</span> <span class="o">=</span> <span class="s2">"# Hallo"</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="o">.</span><span class="n">markdown</span><span class="p">(</span><span class="n">text_to_render</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="n">expected_result</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And the implementation:</p>
<div class="code"><div class="highlight"><pre><span class="c1"># app/helpers/markdown_helper.rb</span>

<span class="k">module</span> <span class="nn">JobVacancy</span>
  <span class="k">class</span> <span class="nc">App</span>
    <span class="k">module</span> <span class="nn">MarkdownHelper</span>
      <span class="k">def</span> <span class="nf">markdown</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="n">options</span> <span class="o">=</span> <span class="p">{</span>
          <span class="ss">filter_html</span><span class="p">:</span>     <span class="kp">true</span><span class="p">,</span>
          <span class="ss">hard_wrap</span><span class="p">:</span>       <span class="kp">true</span><span class="p">,</span>
          <span class="ss">link_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="ss">rel</span><span class="p">:</span> <span class="s1">'nofollow'</span><span class="p">,</span> <span class="ss">target</span><span class="p">:</span> <span class="s2">"_blank"</span> <span class="p">},</span>
          <span class="ss">space_after_headers</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span>
          <span class="ss">fenced_code_blocks</span><span class="p">:</span> <span class="kp">true</span>
        <span class="p">}</span>

        <span class="n">extensions</span> <span class="o">=</span> <span class="p">{</span>
          <span class="ss">autolink</span><span class="p">:</span>           <span class="kp">true</span><span class="p">,</span>
          <span class="ss">superscript</span><span class="p">:</span>        <span class="kp">true</span><span class="p">,</span>
          <span class="ss">disable_indented_code_blocks</span><span class="p">:</span> <span class="kp">true</span>
        <span class="p">}</span>

        <span class="n">renderer</span> <span class="o">=</span> <span class="no">Redcarpet</span><span class="o">::</span><span class="no">Render</span><span class="o">::</span><span class="no">HTML</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
        <span class="n">markdown</span> <span class="o">=</span> <span class="no">Redcarpet</span><span class="o">::</span><span class="no">Markdown</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">renderer</span><span class="p">,</span> <span class="n">extensions</span><span class="p">)</span>

        <span class="n">markdown</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="n">helpers</span> <span class="no">MarkdownHelper</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div></div>
<p>And make use of the new helper method:</p>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%#</span><span class="c"> app/views/job_offers/job.erb </span><span class="cp">%&gt;</span><span class="x"></span>

<span class="x">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">title</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>

<span class="x">&lt;div class="content"&gt;</span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">enable_markdown</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">markdown</span><span class="p">(</span><span class="vi">@job_offer</span><span class="o">.</span><span class="n">description</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="vi">@job_offer</span><span class="o">.</span><span class="n">description</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">&lt;/div&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'Get to job overview'</span><span class="p">,</span> <span class="n">url</span><span class="p">(</span><span class="ss">:job_offers</span><span class="p">,</span> <span class="ss">:index</span><span class="p">),</span> <span class="p">\</span>
  <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'button is-link'</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div></div>
</div><div id="cid15" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid15" class="heading hyperref"><span class="number">2.9 </span>Add the is_published option</a></h2>
<p class="noindent">When a user creates a new job offer, we don’t want that the currently written job is automatically visible by all users.<span class="intersentencespace"></span> Let’s add a <code>is_published</code> property:</p>
<div class="code"><div class="highlight"><pre><span class="nv">$ </span>padrino-gen migration AddIsPublishedToJobOffers is_published:boolean
   apply  orms/activerecord
  create  db/migrate/009_add_is_published_to_job_offers.rb
</pre></div></div>
<p>after that, please change the value in the migration from <code>:joboffers</code> to <code>:job_offers</code> and add the <code>default: false</code> property.<span class="intersentencespace"></span> Now run the migration.</p>
<p>Now adjust the <code>app/views/job_offers/edit.erb</code> and <code>app/views/job_offers/new.erb</code> with:</p>
<div class="code"><div class="highlight"><pre><span class="x">&lt;div class="field"&gt;</span>
<span class="x">  &lt;label class="checkbox"&gt;</span>
<span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">check_box</span> <span class="ss">:is_published</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s1">'checkbox'</span> <span class="cp">%&gt;</span><span class="x"></span>
<span class="x">  &lt;/label&gt;</span>
<span class="x">&lt;/div&gt;</span>
</pre></div></div>
<p>Until now, the <code>get :index</code> action grabs all available jobs.<span class="intersentencespace"></span> But we only need the ones which has the <code>is_published</code>
value set to true.<span class="intersentencespace"></span> We can do that with <code>JobOffer.where("is_published = ?", true)</code>.<span class="intersentencespace"></span> You don’t need to adjust the test,
because we only test if the page can be rendered (even if there are jobs or no jobs).</p>
</div><div id="cid16" class="section"><h2><a href="job_vacancy_application_fragment.xhtml#cid16" class="heading hyperref"><span class="number">2.10 </span>Attachment</a></h2>
</div><div id="cha-2_footnotes">
  <div class="footnotes">
    <div id="cha-2_footnote-1" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-1">1.</a> You can also use the <code>-b</code> option during project creation - then bundle will run for your automatically.</div>
    <div id="cha-2_footnote-2" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-2">2.</a> Unlike strings, symbols of the same name are initialized and exist in memory only once during a session of ruby.<span class="intersentencespace"></span> This makes your programs more efficient.</div>
    <div id="cha-2_footnote-3" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-3">3.</a> Note: It’s possible your tests did not pass due to a Padrino error in which a comma ( , ) was omitted during the initial app generation that looks something like ‘NameError: undefined local variable’ check your <code>spec_helper.rb</code> file and make sure the following matches: <code>def app(app = nil, &amp;blk)</code>, please note the comma right after nil.</div>
    <div id="cha-2_footnote-4" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-4">4.</a> This method returns <code>nil</code> if the entry cannot be found.<span class="intersentencespace"></span> A normal <code>find</code> method will return a <code>ActiveRecord::RecordNotFound</code> for which we then have to write a <code>begin</code> … <code>rescue</code> construct.</div>
    <div id="cha-2_footnote-5" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-5">5.</a> Another alternative to <code>factory_bot</code> is <a href="https://www.fabricationgem.org/" rel="noopener">fabrication</a>, which has similar features as Factory Bot but only around 1.7 Millions downloads in comparison to over 35 Millions downloads of <code>factory_bot</code>.<span class="intersentencespace"></span> A benchmark comparison between both of them generated by <a href="https://ksylvest.com/posts/2017-08-12/fabrication-vs-factorygirl" rel="noopener">Kevin Sylvestre</a> showed that there is at least only a small speed difference between both.<span class="intersentencespace"></span> Since <code>factory_bot</code> has the bigger community I’ve decided for this tool.</div>
    <div id="cha-2_footnote-6" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-6">6.</a> Their name is “Umlaut” in the German language</div>
    <div id="cha-2_footnote-7" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-7">7.</a> but only if the model has no associations, otherwise build will acts like create.</div>
    <div id="cha-2_footnote-8" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-8">8.</a> You could also use the <a href="https://github.com/plataformatec/devise" rel="noopener">devise gem</a> as a flexible authentication solution, which gives you all the controller, migration and user properties.<span class="intersentencespace"></span> But using this does not keep your app clean because “<em>there will be no cruft and you will know how everything fits together</em>” as <a href="http://ryanbigg.com/" rel="noopener">Ryan Bigg</a> says in his book <a href="https://leanpub.com/multi-tenancy-rails-2" rel="noopener">Multitenacy with Rails - 2nd edition</a>.</div>
    <div id="cha-2_footnote-9" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-9">9.</a> The <em>pending</em> word is optional.<span class="intersentencespace"></span> It is enough to write pending tests only in the form <code>it "test this"</code> and leaving the do/end block away.</div>
    <div id="cha-2_footnote-10" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-10">10.</a> Please consider that the <code>password_confirmation</code> attribute can be create with the <code>:confirmation =&gt; true</code> option to the validates <code>:password</code> setting.</div>
    <div id="cha-2_footnote-11" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-11">11.</a> Instead of writing <code>@user</code> for the <code>error_message_on</code> you can also use the symbol notation <code>:user</code>.</div>
    <div id="cha-2_footnote-12" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-12">12.</a> The main configuration file of our application.</div>
    <div id="cha-2_footnote-13" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-13">13.</a> It is good practice to make your callbacks private that they can called <em>only from inside the model</em>.<span class="intersentencespace"></span> Our <code>confirmation_token</code> method is public available but that is no problem, because it generates a random string.</div>
    <div id="cha-2_footnote-14" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-14">14.</a> If you want to use them in your projects, I have written an article about observers in Padrino under <a href="https://wikimatze.de/observers-in-padrino/" rel="noopener">https://wikimatze.de/observers-in-padrino/</a>.</div>
    <div id="cha-2_footnote-15" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-15">15.</a> It is not documented as I <a href="https://github.com/padrino/padrino-framework/issues/1770" rel="noopener">found out</a>.</div>
    <div id="cha-2_footnote-16" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-16">16.</a> According to SRP (see box  <a href="job_vacancy_application_fragment.xhtml#box-srp" class="hyperref"><span class="ref">2.13</span></a>) sending registration and confirmation mails are a clear function of the class - the domain is registration.<span class="intersentencespace"></span> To have two methods in class serving the same domain is no violation against SRP.</div>
    <div id="cha-2_footnote-17" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-17">17.</a> At first I was thinking at that mocking is something very difficult.<span class="intersentencespace"></span> Read it the method out loud ten times and you can guess whats going on.<span class="intersentencespace"></span> If our <code>User</code> object gets call from it’s class method <code>find_by_email</code> it should return false.</div>
    <div id="cha-2_footnote-18" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-18">18.</a> Instead of writing <code>and_return(object)</code> you can also write the shortcut <code>{object}</code> which will I use in the next spec files</div>
    <div id="cha-2_footnote-19" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-19">19.</a> We will write the test in <a href="job_vacancy_application_fragment.xhtml#sec-authorization" class="hyperref">chapter <span class="ref">2.6.1</span></a></div>
    <div id="cha-2_footnote-20" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-20">20.</a> It is s build on <a href="http://guides.rubyonrails.org/action_controller_overview.html#the-flash" rel="noopener">Rails flash message implementation</a>.</div>
    <div id="cha-2_footnote-21" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-21">21.</a> It is possible to define variables, change the response, request, and so on.</div>
    <div id="cha-2_footnote-22" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-22">22.</a> In case you have problems with writing them, please check the <a href="https://github.com/padrinobook/job-vacancy/blob/master/spec/app/helpers/sessions_helper_spec.rb" rel="noopener">spec on GitHub</a>.</div>
    <div id="cha-2_footnote-23" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-23">23.</a> If you are in a situation where you already have a bunch of users and you now decide to create hashes for them, you have to create a migration script for the existing user base.</div>
    <div id="cha-2_footnote-24" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-24">24.</a> Press <code>F-12</code>, then open the ‘Storage’ tab, click on Cookies, and there you will see a cookie with the name <code>permanent_cookie</code>.</div>
    <div id="cha-2_footnote-25" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-25">25.</a> Press <code>F-12</code>, then open the ‘Resources’ tab, click on Cookies and there you will see a cookie with the name <code>permanent_cookie</code>, but for me this isn’t working …</div>
    <div id="cha-2_footnote-26" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-26">26.</a> A good place for that method would be the <code>spec_helper.rb</code>.</div>
    <div id="cha-2_footnote-27" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-27">27.</a> The lib folder contains generic entities (class or module), configurations, migrations that are not relevant to the business logic of your application and can even be shared outside of the project or can be used to create other components.<span class="intersentencespace"></span> Thibault has written more about the app and lib folder under <a href="https://devblast.com/b/rails-app-vs-lib" rel="noopener">rails-app-vs-lib</a>.</div>
    <div id="cha-2_footnote-28" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-28">28.</a> The reference for this can be found under http://winstonyw.com/2014/03/03/time_now_vs_time_zone_now/</div>
    <div id="cha-2_footnote-29" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-29">29.</a> Got the inspiration from <a href="http://stackoverflow.com/a/31447415" rel="noopener">stackoverflow.com/a/31447415</a></div>
    <div id="cha-2_footnote-30" class="footnote"><a class="footnote-link" href="#cha-2_footnote-ref-30">30.</a> Provides you a <code>1.hour.ago</code> or <code>1.hour.after</code> like syntax inspired from from <a href="http://api.rubyonrails.org/v2.3.8/classes/ActiveSupport/CoreExtensions/Numeric/Time.html" rel="noopener">ActiveSupport</a> module.</div>
  </div>
</div>
        </body>
        </html>